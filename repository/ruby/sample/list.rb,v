head	1.2;
access;
symbols
	v1_6_7:1.2
	v1_6_6:1.2
	v1_6_5:1.2
	v1_6_4:1.2
	v1_7_1:1.2
	v1_6_4_preview4:1.2
	v1_6_4_preview3:1.2
	v1_6_4_preview2:1.2
	v1_6_4_preview1:1.2
	v1_6_3:1.2
	ruby_m17n:1.2.0.6
	ruby_1_6:1.2.0.4
	v1_6_2:1.2
	v1_6_1:1.2
	v1_6_0:1.2
	v1_4_6:1.2
	v1_4_5:1.2
	v1_4_4:1.2
	ruby_1_4_3:1.2
	ruby1_4_3:1.2
	v1_4_3:1.2
	v1_5_0:1.2
	ruby_1_4_3_pre1:1.2
	ruby_1_4:1.2.0.2
	v1_4_2:1.2
	v1_4_1:1.2
	v1_4_0:1.2
	v1_3_7:1.1.1.1.8.2
	v1_3_6_repack:1.1.1.1.8.2
	v1_3_6:1.1.1.1.8.2
	v1_3_5:1.1.1.1.8.2
	v1_2_6repack:1.1.1.1
	v1_3_4_990625:1.1.1.1.8.2
	v1_3_4_990624:1.1.1.1.8.2
	v1_2_6:1.1.1.1
	v1_3_4_990611:1.1.1.1.8.2
	v1_3_4_990531:1.1.1.1.8.2
	v1_3_3_990518:1.1.1.1.8.2
	v1_3_3_990513:1.1.1.1.8.2
	v1_3_3_990507:1.1.1.1.8.2
	v1_2_5:1.1.1.1
	v1_2_4:1.1.1.1
	v1_3_1_990225:1.1.1.1.8.1
	v1_3_1_990224:1.1.1.1.8.1
	v1_3_1_990215:1.1.1.1.8.1
	v1_3_1_990212:1.1.1.1.8.1
	v1_3_1_990210:1.1.1.1.8.1
	v1_3_1_:1.1.1.1.8.1
	v1_3_1_990209:1.1.1.1.8.1
	v1_3_1_990205:1.1.1.1
	v1_3_1_990203:1.1.1.1
	v1_3_1_990201:1.1.1.1
	v1_3_1"_990201:1.1.1.1
	v1_3_1_990128:1.1.1.1
	v1_3_1_990127:1.1.1.1
	v1_3_1_990126:1.1.1.1
	ruby_1_3:1.1.1.1.0.8
	v1_2_2:1.1.1.1
	RUBY_1_3:1.1.1.1
	v1_2_2_pr1:1.1.1.1
	v1_2_1repack:1.1.1.1
	v1_2_1:1.1.1.1
	v1_2_stable:1.1.1.1
	v1_1d1:1.1.1.1
	v1_1d0:1.1.1.1
	v1_1c9_1:1.1.1.1
	v1_1c9:1.1.1.1
	v1_1c8:1.1.1.1
	v1_1c7:1.1.1.1
	v1_1c6:1.1.1.1
	v1_1d-start:1.1.1.1
	v1_1c5:1.1.1.1
	v1_1dev:1.1.1.1.0.6
	v1_1c4:1.1.1.1
	v1_1c3:1.1.1.1
	v1_1c2:1.1.1.1
	v1_1c1:1.1.1.1
	v1_1c0:1.1.1.1
	v1_1b9_31:1.1.1.1
	v1_1b9_30:1.1.1.1
	v1_1b9_28:1.1.1.1
	v1_1b9_27:1.1.1.1
	v1_1b9_26:1.1.1.1
	r1_1b9_25:1.1.1.1
	r1_1b9_24:1.1.1.1
	v1_1b9_23:1.1.1.1
	v1_1b9_22:1.1.1.1
	v1_1b9_20:1.1.1.1
	v1_1b9_18:1.1.1.1
	v1_1b9_16:1.1.1.1
	v1_1b9_15:1.1.1.1
	v1_1b9_13:1.1.1.1
	v1_1b9_12:1.1.1.1
	v1_1b9_11:1.1.1.1
	v1_1b9_08:1.1.1.1
	v1_1b9_07:1.1.1.1
	r1_1b9:1.1.1.1
	v1_1b8:1.1.1.1
	v1_1b7:1.1.1.1
	v1_1b6:1.1.1.1
	v1_1r:1.1.1.1.0.4
	v1_1:1.1.1.1
	v1_0r:1.1.1.1.0.2
	v1_0:1.1.1.1
	RUBY:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.08.13.05.45.19;	author matz;	state Exp;
branches;
next	1.1;

1.1
date	98.01.16.12.13.08;	author matz;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.16.12.13.08;	author matz;	state Exp;
branches
	1.1.1.1.8.1;
next	;

1.1.1.1.8.1
date	99.02.09.06.08.24;	author matz;	state Exp;
branches;
next	1.1.1.1.8.2;

1.1.1.1.8.2
date	99.04.09.17.57.44;	author matz;	state Exp;
branches;
next	;


desc
@@


1.2
log
@1.4.0
@
text
@# Linked list example
class MyElem
  # object initializer called from Class#new
  def initialize(item)
    # @@variables are instance variable, no declaration needed
    @@data = item
    @@succ = nil
  end

  def data
    @@data
  end

  def succ
    @@succ
  end

  # the method invoked by ``obj.data = val''
  def succ=(new)
    @@succ = new
  end
end

class MyList
  def add_to_list(obj)
    elt = MyElem.new(obj)
    if @@head
      @@tail.succ = elt
    else
      @@head = elt
    end
    @@tail = elt
  end

  def each
    elt = @@head
    while elt
      yield elt
      elt = elt.succ
    end
  end

  # the method to convert object into string.
  # redefining this will affect print.
  def to_s
    str = "<MyList:\n";
    for elt in self
      # short form of ``str = str + elt.data.to_s + "\n"''
      str += elt.data.to_s + "\n"
    end
    str += ">"
    str
  end
end

class Point
  def initialize(x, y)
    @@x = x; @@y = y
    self
  end

  def to_s
    sprintf("%d@@%d", @@x, @@y)
  end
end

# global variable name starts with `$'.
$list1 = MyList.new
$list1.add_to_list(10)
$list1.add_to_list(20)
$list1.add_to_list(Point.new(2, 3))
$list1.add_to_list(Point.new(4, 5))
$list2 = MyList.new
$list2.add_to_list(20)
$list2.add_to_list(Point.new(4, 5))
$list2.add_to_list($list1)

# parenthesises around method arguments can be ommitted unless ambiguous.
print "list1:\n", $list1, "\n"
print "list2:\n", $list2, "\n"
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
  # オブジェクト生成時に自動的に呼ばれるメソッド
d5 1
a5 1
    # @@変数はインスタンス変数(宣言は要らない)
d18 1
a18 1
  # 「obj.data = val」としたときに暗黙に呼ばれるメソッド
d43 2
a44 2
  # オブジェクトを文字列に変換するメソッド
  # これを再定義するとprintでの表現が変わる
d48 1
a48 1
      # 「str = str + elt.data.to_s + "\n"」の省略形
d67 1
a67 1
# 大域変数は`$'で始まる．
d78 1
a78 1
# 曖昧でない限りメソッド呼び出しの括弧は省略できる
@


1.1.1.1
log
@
@
text
@@


1.1.1.1.8.1
log
@990209
@
text
@d3 1
a3 1
  # object initializer called from Class#new
d5 1
a5 1
    # @@variables are instance variable, no declaration needed
d18 1
a18 1
  # the method invoked by ``obj.data = val''
d43 2
a44 2
  # the method to convert object into string.
  # redefining this will affect print.
d48 1
a48 1
      # short form of ``str = str + elt.data.to_s + "\n"''
d67 1
a67 1
# global variables are start with `$'.
d78 1
a78 1
# parenthesises around method arguments can be ommitted unless ambiguous.
@


1.1.1.1.8.2
log
@*** empty log message ***
@
text
@d67 1
a67 1
# global variable name starts with `$'.
@


