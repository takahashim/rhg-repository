head	1.3;
access;
symbols
	v1_6_7:1.2
	v1_6_6:1.2
	v1_6_5:1.2
	v1_6_4:1.2
	v1_7_1:1.3
	v1_6_4_preview4:1.2
	v1_6_4_preview3:1.2
	v1_6_4_preview2:1.2
	v1_6_4_preview1:1.2
	v1_6_3:1.2
	ruby_m17n:1.3.0.2
	ruby_1_6:1.2.0.4
	v1_6_2:1.2
	v1_6_1:1.2
	v1_6_0:1.2
	v1_4_6:1.2
	v1_4_5:1.2
	v1_4_4:1.2
	ruby_1_4_3:1.2
	ruby1_4_3:1.2
	v1_4_3:1.2
	v1_5_0:1.2
	ruby_1_4_3_pre1:1.2
	ruby_1_4:1.2.0.2
	v1_4_2:1.2
	v1_4_1:1.2
	v1_4_0:1.2
	v1_3_7:1.1.1.2.6.1
	v1_3_6_repack:1.1.1.2.6.1
	v1_3_6:1.1.1.2.6.1
	v1_3_5:1.1.1.2.6.1
	v1_2_6repack:1.1.1.2
	v1_3_4_990625:1.1.1.2.6.1
	v1_3_4_990624:1.1.1.2.6.1
	v1_2_6:1.1.1.2
	v1_3_4_990611:1.1.1.2.6.1
	v1_3_4_990531:1.1.1.2.6.1
	v1_3_3_990518:1.1.1.2.6.1
	v1_3_3_990513:1.1.1.2.6.1
	v1_3_3_990507:1.1.1.2.6.1
	v1_2_5:1.1.1.2
	v1_2_4:1.1.1.2
	v1_3_1_990225:1.1.1.2.6.1
	v1_3_1_990224:1.1.1.2.6.1
	v1_3_1_990215:1.1.1.2.6.1
	v1_3_1_990212:1.1.1.2.6.1
	v1_3_1_990210:1.1.1.2.6.1
	v1_3_1_:1.1.1.2.6.1
	v1_3_1_990209:1.1.1.2
	v1_3_1_990205:1.1.1.2
	v1_3_1_990203:1.1.1.2
	v1_3_1_990201:1.1.1.2
	v1_3_1"_990201:1.1.1.2
	v1_3_1_990128:1.1.1.2
	v1_3_1_990127:1.1.1.2
	v1_3_1_990126:1.1.1.2
	ruby_1_3:1.1.1.2.0.6
	v1_2_2:1.1.1.2
	RUBY_1_3:1.1.1.2
	v1_2_2_pr1:1.1.1.2
	v1_2_1repack:1.1.1.2
	v1_2_1:1.1.1.2
	v1_2_stable:1.1.1.2
	v1_1d1:1.1.1.2
	v1_1d0:1.1.1.2
	v1_1c9_1:1.1.1.2
	v1_1c9:1.1.1.2
	v1_1c8:1.1.1.2
	v1_1c7:1.1.1.2
	v1_1c6:1.1.1.2
	v1_1d-start:1.1.1.2
	v1_1c5:1.1.1.2
	v1_1dev:1.1.1.2.0.4
	v1_1c4:1.1.1.2
	v1_1c3:1.1.1.2
	v1_1c2:1.1.1.2
	v1_1c1:1.1.1.2
	v1_1c0:1.1.1.2
	v1_1b9_31:1.1.1.2
	v1_1b9_30:1.1.1.2
	v1_1b9_28:1.1.1.2
	v1_1b9_27:1.1.1.2
	v1_1b9_26:1.1.1.2
	r1_1b9_25:1.1.1.2
	r1_1b9_24:1.1.1.2
	v1_1b9_23:1.1.1.2
	v1_1b9_22:1.1.1.2
	v1_1b9_20:1.1.1.2
	v1_1b9_18:1.1.1.2
	v1_1b9_16:1.1.1.2
	v1_1b9_15:1.1.1.2
	v1_1b9_13:1.1.1.2
	v1_1b9_12:1.1.1.2
	v1_1b9_11:1.1.1.2
	v1_1b9_08:1.1.1.2
	v1_1b9_07:1.1.1.2
	r1_1b9:1.1.1.2
	v1_1b8:1.1.1.2
	v1_1b7:1.1.1.2
	v1_1b6:1.1.1.2
	v1_1r:1.1.1.2.0.2
	v1_1:1.1.1.2
	v1_0r:1.1.1.1.0.2
	v1_0:1.1.1.1
	RUBY:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2000.12.28.05.00.47;	author matz;	state Exp;
branches;
next	1.2;

1.2
date	99.08.13.05.45.19;	author matz;	state Exp;
branches;
next	1.1;

1.1
date	98.01.16.12.13.08;	author matz;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.16.12.13.08;	author matz;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.01.16.12.19.22;	author matz;	state Exp;
branches
	1.1.1.2.6.1;
next	;

1.1.1.2.6.1
date	99.02.10.08.44.29;	author matz;	state Exp;
branches;
next	;


desc
@@


1.3
log
@changes from personal modifies -- matz
@
text
@#!/usr/bin/env ruby

if ARGV[0] == "-c"
  out_stdout = 1
  ARGV.shift
end

$sawbegin = 0
$sawend = 0

while line = gets()
  if /^begin\s*(\d*)\s*(\S*)/ =~ line
    $mode, $file = $1, $2
    $sawbegin+=1
    if out_stdout
      out = STDOUT
    else
      out = open($file, "w") if $file != ""
    end
    out.binmode
    break
  end
end

raise "missing begin" unless $sawbegin

out.binmode
while line = gets()
  if /^end/ =~ line
    $sawend+=1
    out.close unless out_stdout
    File.chmod $mode.oct, $file unless out_stdout
    next
  end
  line.sub!(/[a-z]+$/, "")	# handle stupid trailing lowercase letters
  next if /[a-z]/ =~ line
  next if !(((($_[0] - 32) & 077) + 2) / 3 == $_.length / 4)
  out << $_.unpack("u") if $sawbegin > $sawend
end

raise "missing end" if $sawbegin > $sawend
raise "missing begin" if ! $sawbegin
exit 0
@


1.2
log
@1.4.0
@
text
@d11 2
a12 2
while gets()
  if /^begin\s*(\d*)\s*(\S*)/
d28 2
a29 2
while gets()
  if /^end/
d35 2
a36 2
  sub(/[a-z]+$/, "")		# handle stupid trailing lowercase letters
  next if /[a-z]/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#!/usr/local/bin/ruby
d4 1
a4 1
  out_stdout = 1;
d8 3
d15 6
d25 1
a25 7
fail "missing begin" if ! $sawbegin;

if out_stdout
  out = STDOUT
else
  out = open($file, "w") if $file != "";
end
d27 1
d31 3
a33 1
    break
d35 1
a35 1
  sub(/[a-z]+$/, ""); # handle stupid trailing lowercase letters
d38 1
a38 1
  out << $_.unpack("u");
d41 3
a43 3
fail "missing end" if !$sawend;
File.chmod $mode.oct, $file if ! out_stdout
exit 0;
@


1.1.1.1
log
@
@
text
@@


1.1.1.2
log
@*** empty log message ***
@
text
@d4 1
a4 1
  out_stdout = 1
a7 3
$sawbegin = 0
$sawend = 0

d12 1
a12 7
    if out_stdout
      out = STDOUT
    else
      out = open($file, "w") if $file != ""
    end
    out.binmode
    next
d16 7
a22 1
raise "missing begin" unless $sawbegin
a23 1
out.binmode
d27 1
a27 3
    out.close unless out_stdout
    File.chmod $mode.oct, $file unless out_stdout
    next
d29 1
a29 1
  sub(/[a-z]+$/, "")		# handle stupid trailing lowercase letters
d32 1
a32 1
  out << $_.unpack("u") if $sawbegin > $sawend
d35 3
a37 3
raise "missing end" if $sawbegin > $sawend
raise "missing begin" if ! $sawbegin
exit 0
@


1.1.1.2.6.1
log
@*** empty log message ***
@
text
@d1 1
a1 1
#!/usr/bin/env ruby
d21 1
a21 1
    break
@

