head	1.2;
access;
symbols
	v1_6_7:1.2
	v1_6_6:1.2
	v1_6_5:1.2
	v1_6_4:1.2
	v1_7_1:1.2
	v1_6_4_preview4:1.2
	v1_6_4_preview3:1.2
	v1_6_4_preview2:1.2
	v1_6_4_preview1:1.2
	v1_6_3:1.2
	ruby_m17n:1.2.0.4
	ruby_1_6:1.2.0.2
	v1_6_2:1.2
	v1_6_1:1.2
	v1_6_0:1.1.1.1
	v1_4_6:1.1.1.1
	v1_4_5:1.1.1.1
	v1_4_4:1.1.1.1
	ruby_1_4_3:1.1.1.1
	ruby1_4_3:1.1.1.1
	v1_4_3:1.1.1.1
	v1_5_0:1.1.1.1
	ruby_1_4_3_pre1:1.1.1.1
	ruby_1_4:1.1.1.1.0.10
	v1_4_2:1.1.1.1
	v1_4_1:1.1.1.1
	v1_4_0:1.1.1.1
	v1_3_7:1.1.1.1
	v1_3_6_repack:1.1.1.1
	v1_3_6:1.1.1.1
	v1_3_5:1.1.1.1
	v1_2_6repack:1.1.1.1
	v1_3_4_990625:1.1.1.1
	v1_3_4_990624:1.1.1.1
	v1_2_6:1.1.1.1
	v1_3_4_990611:1.1.1.1
	v1_3_4_990531:1.1.1.1
	v1_3_3_990518:1.1.1.1
	v1_3_3_990513:1.1.1.1
	v1_3_3_990507:1.1.1.1
	v1_2_5:1.1.1.1
	v1_2_4:1.1.1.1
	v1_3_1_990225:1.1.1.1
	v1_3_1_990224:1.1.1.1
	v1_3_1_990215:1.1.1.1
	v1_3_1_990212:1.1.1.1
	v1_3_1_990210:1.1.1.1
	v1_3_1_:1.1.1.1
	v1_3_1_990209:1.1.1.1
	v1_3_1_990205:1.1.1.1
	v1_3_1_990203:1.1.1.1
	v1_3_1_990201:1.1.1.1
	v1_3_1"_990201:1.1.1.1
	v1_3_1_990128:1.1.1.1
	v1_3_1_990127:1.1.1.1
	v1_3_1_990126:1.1.1.1
	ruby_1_3:1.1.1.1.0.8
	v1_2_2:1.1.1.1
	RUBY_1_3:1.1.1.1
	v1_2_2_pr1:1.1.1.1
	v1_2_1repack:1.1.1.1
	v1_2_1:1.1.1.1
	v1_2_stable:1.1.1.1
	v1_1d1:1.1.1.1
	v1_1d0:1.1.1.1
	v1_1c9_1:1.1.1.1
	v1_1c9:1.1.1.1
	v1_1c8:1.1.1.1
	v1_1c7:1.1.1.1
	v1_1c6:1.1.1.1
	v1_1d-start:1.1.1.1
	v1_1c5:1.1.1.1
	v1_1dev:1.1.1.1.0.6
	v1_1c4:1.1.1.1
	v1_1c3:1.1.1.1
	v1_1c2:1.1.1.1
	v1_1c1:1.1.1.1
	v1_1c0:1.1.1.1
	v1_1b9_31:1.1.1.1
	v1_1b9_30:1.1.1.1
	v1_1b9_28:1.1.1.1
	v1_1b9_27:1.1.1.1
	v1_1b9_26:1.1.1.1
	r1_1b9_25:1.1.1.1
	r1_1b9_24:1.1.1.1
	v1_1b9_23:1.1.1.1
	v1_1b9_22:1.1.1.1
	v1_1b9_20:1.1.1.1
	v1_1b9_18:1.1.1.1
	v1_1b9_16:1.1.1.1
	v1_1b9_15:1.1.1.1
	v1_1b9_13:1.1.1.1
	v1_1b9_12:1.1.1.1
	v1_1b9_11:1.1.1.1
	v1_1b9_08:1.1.1.1
	v1_1b9_07:1.1.1.1
	r1_1b9:1.1.1.1
	v1_1b8:1.1.1.1
	v1_1b7:1.1.1.1
	v1_1b6:1.1.1.1
	v1_1r:1.1.1.1.0.4
	v1_1:1.1.1.1
	v1_0r:1.1.1.1.0.2
	v1_0:1.1.1.1
	RUBY:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2000.09.27.09.11.13;	author matz;	state Exp;
branches;
next	1.1;

1.1
date	98.01.16.12.13.08;	author matz;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.16.12.13.08;	author matz;	state Exp;
branches;
next	;


desc
@@


1.2
log
@matz
@
text
@#
# The Dining Philosophers - thread example
#
require "thread"

srand
#srand
N=9				# number of philosophers
$forks = []
for i in 0..N-1
  $forks[i] = Mutex.new
end
$state = "-o"*N

def wait
  sleep rand(20)/10.0
end

def think(n)
  wait
end

def eat(n)
  wait
end

def philosopher(n)
  while TRUE
    think n
    $forks[n].lock
    if not $forks[(n+1)%N].try_lock
      $forks[n].unlock		# avoid deadlock
      next
    end
    $state[n*2] = ?|;
    $state[(n+1)%N*2] = ?|;
    $state[n*2+1] = ?*;
    print $state, "\n"
    eat(n)
    $state[n*2] = ?-;
    $state[(n+1)%N*2] = ?-;
    $state[n*2+1] = ?o;
    print $state, "\n"
    $forks[n].unlock
    $forks[(n+1)%N].unlock
  end
end

for n in 0..N-1
  Thread.start(n){|i| philosopher(i)}
  sleep 0.1
end

sleep
@


1.1
log
@Initial revision
@
text
@d49 2
a50 2
for i in 0..N-1
  Thread.start{philosopher(i)}
@


1.1.1.1
log
@
@
text
@@
