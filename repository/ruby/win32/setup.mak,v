head	1.10;
access;
symbols
	v1_6_7:1.3
	v1_6_6:1.3
	v1_6_5:1.3
	v1_6_4:1.3
	v1_7_1:1.4
	v1_6_4_preview4:1.3
	v1_6_4_preview3:1.3
	v1_6_4_preview2:1.3
	v1_6_4_preview1:1.3
	v1_6_3:1.3
	ruby_m17n:1.4.0.2
	ruby_1_6:1.3.0.2
	v1_6_2:1.3
	v1_6_1:1.3
	v1_6_0:1.2;
locks; strict;
comment	@# @;


1.10
date	2002.10.21.14.03.46;	author nobu;	state Exp;
branches;
next	1.9;

1.9
date	2002.09.10.08.24.11;	author usa;	state Exp;
branches;
next	1.8;

1.8
date	2002.08.23.08.18.19;	author eban;	state Exp;
branches;
next	1.7;

1.7
date	2002.04.19.13.06.12;	author usa;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.20.11.19.59;	author nobu;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.09.07.41.44;	author usa;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.26.08.08.50;	author matz;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.19.07.01.54;	author eban;	state Exp;
branches;
next	1.2;

1.2
date	2000.08.07.05.02.12;	author matz;	state Exp;
branches;
next	1.1;

1.1
date	2000.08.03.09.55.54;	author matz;	state Exp;
branches;
next	;


desc
@@


1.10
log
@* configure.in (XCFLAGS): CFLAGS to comile ruby itself.

* configure.in (LIBEXT): suffix for static libraries.

* configure.in (LIBPATHFLAG): switch template to specify library
  path.

* configure.in (LINK_SO): command to link shared objects.

* configure.in (DEFFILE, ARCHFILE): miscellaneous system dependent
  files.

* configure.in (EXPORT_PREFIX): prefix to exported symbols on
  Windows.

* configure.in (COMMON_LIBS, COMMON_MACROS, COMMON_HEADERS):
  libraries, macros and headers used in common.

* configure.in (RUBYW_INSTALL_NAME, rubyw_install_name): GUI mode
  excutable name.

* Makefile.in (CFLAGS): append XCFLAGS.

* Makefile.in (PREP): miscellaneous system dependent files.

* Makefile.in (ruby.imp, ext/extinit.o): moved from ext/extmk.rb.

* Makefile.in (fake.rb): CROSS_COMPILING keeps building platform.

* Makefile.in (MAKEFILES): depend on *.in and config.status.

* Makefile.in (parse.c): replace "y.tab.c" with actual name for
  byacc.

* ext/extmk.rb, lib/mkmf.rb: integrated.

* ext/extmk.rb: propagate MFLAGS.

* ext/extmk.rb (extmake): make dummy Makefile to clean even if no
  Makefile is made.

* lib/mkmf.rb (older): accept multiple file names and Time
  objects.

* lib/mkmf.rb (xsystem): split and qoute.

* lib/mkmf.rb (cpp_include): make include directives.

* lib/mkmf.rb (try_func): try wheather specified function is
  available.

* lib/mkmf.rb (install_files): default to site-install.

* lib/mkmf.rb (checking_for): added.

* lib/mkmf.rb (find_executable0): just find executable file with
  no message.

* lib/mkmf.rb (create_header): output header file is variable.

* lib/mkmf.rb (create_makefile): separate sections.

* lib/mkmf.rb (init_mkmf): initialize global variables.

* win32/Makefile.sub, bcc32/Makefile.sub (CPP, AR): added.

* bcc32/Makefile.sub (ARCH): fixed to i386.

* win32/Makefile.sub, bcc32/Makefile.sub (miniruby): should not
  link EXTOBJS.

* ext/dl/extconf.rb: use try_cpp to cross compile.

* ext/dl/extconf.rb: not modify files in source directory.
@
text
@# -*- makefile -*-

!if "$(srcdir)" != ""
WIN32DIR = $(srcdir)/win32
!elseif "$(WIN32DIR)" == "win32"
srcdir = .
!elseif "$(WIN32DIR)" == "$(WIN32DIR:/win32=)/win32"
srcdir = $(WIN32DIR:/win32=)
!else
srcdir = $(WIN32DIR)/..
!endif
OS = mswin32
RT = msvcrt
INCLUDE = !include
APPEND = echo>>$(MAKEFILE)
!ifdef MAKEFILE
MAKE = $(MAKE) -f $(MAKEFILE)
!else
MAKEFILE = Makefile
!endif
ARCH = PROCESSOR_ARCHITECTURE
CPU = PROCESSOR_LEVEL

all: -prologue- -generic- -epilogue-
i386-$(OS): -prologue- -i386- -epilogue-
i486-$(OS): -prologue- -i486- -epilogue-
i586-$(OS): -prologue- -i586- -epilogue-
i686-$(OS): -prologue- -i686- -epilogue-
alpha-$(OS): -prologue- -alpha- -epilogue-

-prologue-: nul
	@@echo Creating <<$(MAKEFILE)
### Makefile for ruby $(OS) ###
srcdir = $(srcdir:\=/)

<<KEEP

-generic-: nul
!if defined($(ARCH)) || defined($(CPU))
	@@type << >>$(MAKEFILE)
!if defined($(ARCH))
$(ARCH) = $(PROCESSOR_ARCHITECTURE)
!endif
!if defined($(CPU))
$(CPU) = $(PROCESSOR_LEVEL)
!endif

<<
!endif

-alpha-: nul
	@@$(APPEND) $(ARCH) = alpha
-ix86-: nul
	@@$(APPEND) $(ARCH) = x86

-i386-: -ix86-
	@@$(APPEND) $(CPU) = 3
-i486-: -ix86-
	@@$(APPEND) $(CPU) = 4
-i586-: -ix86-
	@@$(APPEND) $(CPU) = 5
-i686-: -ix86-
	@@$(APPEND) $(CPU) = 6

-epilogue-: nul
	@@type << >>$(MAKEFILE)
# OS = $(OS)
# RT = $(RT)
# RUBY_INSTALL_NAME = ruby
# RUBY_SO_NAME = $$(RT)-$$(RUBY_INSTALL_NAME)17
# prefix = /usr
# CFLAGS = -nologo -MD $$(DEBUGFLAGS) $$(OPTFLAGS) $$(PROCESSOR_FLAG)
# CPPFLAGS = -I. -I$$(srcdir) -I$$(srcdir)/missing -DLIBRUBY_SO=\"$$(LIBRUBY_SO)\"
# STACK = 0x2000000
# LDFLAGS = $$(CFLAGS) -Fm
# XLDFLAGS = 
# RFLAGS = -r
# EXTLIBS =

$(INCLUDE) $$(srcdir)/win32/Makefile.sub
<<
	@@echo type `$(MAKE)' to make ruby for $(OS).
@


1.9
log
@* win32/Makefile.sub (miniruby): shouldn't link $(EXTOBJS).

* win32/Makefile.sub ($(LIBRUBY_A), $(LIBRUBY)): avoid lib.exe's
  warning.

* win32/Makefile.sub: remove unnecessary rules.

* win32/configure.bat, win32/setup.mak, win32/README.win32: enable to
  pass some arguments to configure.
@
text
@d3 3
a5 1
!IF "$(WIN32DIR)" == "win32"
d7 1
a7 1
!ELSEIF "$(WIN32DIR)" == "$(WIN32DIR:/win32=)/win32"
d9 1
a9 1
!ELSE
d11 1
a11 1
!ENDIF
d15 3
a17 5
MAKEFILE = $(WIN32DIR)/setup.mak

!if "$(target)" == ""
all: Makefile
	@@echo type `$(MAKE)' to make ruby for $(OS).
d19 1
a19 1
all: $(target)
d21 2
d24 6
a29 15
i386-$(OS):
	@@$(MAKE) -$(MAKEFLAGS) -f $(MAKEFILE) target= \
		PROCESSOR_ARCHITECTURE=x86 PROCESSOR_LEVEL=3
i486-$(OS):
	@@$(MAKE) -$(MAKEFLAGS) -f $(MAKEFILE) target= \
		PROCESSOR_ARCHITECTURE=x86 PROCESSOR_LEVEL=4
i586-$(OS):
	@@$(MAKE) -$(MAKEFLAGS) -f $(MAKEFILE) target= \
		PROCESSOR_ARCHITECTURE=x86 PROCESSOR_LEVEL=5
i686-$(OS):
	@@$(MAKE) -$(MAKEFLAGS) -f $(MAKEFILE) target= \
		PROCESSOR_ARCHITECTURE=x86 PROCESSOR_LEVEL=6
alpha-$(OS):
	@@$(MAKE) -$(MAKEFLAGS) -f $(MAKEFILE) target= \
		PROCESSOR_ARCHITECTURE=alpha PROCESSOR_LEVEL=
d31 2
a32 2
Makefile:
	@@echo Creating <<$@@
d35 8
a42 2
!if defined(PROCESSOR_ARCHITECTURE)
PROCESSOR_ARCHITECTURE = $(PROCESSOR_ARCHITECTURE)
d44 2
a45 2
!if defined(PROCESSOR_LEVEL)
PROCESSOR_LEVEL = $(PROCESSOR_LEVEL)
d47 33
a79 9
RUBY_INSTALL_NAME = ruby
RUBY_SO_NAME = $(RT)-$$(RUBY_INSTALL_NAME)17
prefix = /usr
CFLAGS = -nologo -MD -DNT=1 $$(DEBUGFLAGS) $$(OPTFLAGS) $$(PROCESSOR_FLAG)
CPPFLAGS = -I. -I$$(srcdir) -I$$(srcdir)/missing -DLIBRUBY_SO=\"$$(LIBRUBY_SO)\"
LDFLAGS = $$(CFLAGS) -Fm
XLDFLAGS = 
RFLAGS = -r
EXTLIBS =
d81 2
a82 1
<<KEEP
@


1.8
log
@* configure.in: RUBY_SO_NAME is msvcrt-rubyXX on mswin32/mingw32.
* configure.in (sitearch): new var.
* mkconfig.rb, lib/mkmf.rb (sitearch): ditto.
* win32/Makefile.sub, win32/setup.mak (sitearch): ditto.
@
text
@d12 2
d15 1
a15 1
all: ext
d17 20
a36 1
all:; @@echo type `nmake' to make ruby for mswin32.
d39 20
a58 14
	@@echo ### makefile for ruby $(OS) ###> $@@
	@@echo srcdir = $(srcdir:\=/)>> $@@
	@@echo RUBY_INSTALL_NAME = ruby>> $@@
	@@echo RUBY_SO_NAME = $(RT)-$$(RUBY_INSTALL_NAME)17>> $@@
	@@echo prefix = /usr>> $@@
	@@echo CFLAGS = -nologo -MD -DNT=1 $$(DEBUGFLAGS) $$(OPTFLAGS) $$(PROCESSOR_FLAG)>> $@@
	@@echo CPPFLAGS = -I. -I$$(srcdir) -I$$(srcdir)/missing -DLIBRUBY_SO=\"$$(LIBRUBY_SO)\">> $@@
	@@echo LDFLAGS = $$(CFLAGS) -Fm>> $@@
	@@echo XLDFLAGS = >> $@@
	@@echo RFLAGS = -r>> $@@
	@@echo EXTLIBS =>> $@@
	@@echo !INCLUDE $$(srcdir)/win32/Makefile.sub>> $@@

ext:;	@@if not exist $@@\* mkdir $@@
@


1.7
log
@* win32/Makefile.sub: add -DNT to $CFLAGS instead of $CPPFLAGS.

* win32/setup.mak: ditto.
@
text
@d11 1
d21 1
a21 1
	@@echo RUBY_SO_NAME = $(OS)-$$(RUBY_INSTALL_NAME)17>> $@@
@


1.6
log
@* win32/Makefile.sub: made variables configurable.

* win32/Makefile.sub (config.h): updates RUBY_PLATFORM from
  Makefile.

* win32/Makefile.sub (config.status): ditto.

* win32/Makefile.sub (clean): separate ext and local clean up.

* win32/Makefile.sub (distclean): ditto.
@
text
@d22 2
a23 2
	@@echo CFLAGS = -nologo -MD $$(DEBUGFLAGS) $$(OPTFLAGS) $$(PROCESSOR_FLAG)>> $@@
	@@echo CPPFLAGS = -I. -I$$(srcdir) -I$$(srcdir)/missing -DLIBRUBY_SO=\"$$(LIBRUBY_SO)\" -DNT=1>> $@@
@


1.5
log
@* ext/extmk.rb.in: Use -F and -T for mswin32 because cl.exe doesn't support -o officially and cl.exe considers that *.cc and *.cxx are OBJs.

* lib/mkmf.rb: ditto.

* win32/Makefile.sub: Use del instead of rm. All these changes are derived from Nobuyoshi Nakada's patch. Thanks.
@
text
@a11 1
all: config.h config.status
d21 7
a28 3

config.h config.status: $(srcdir)/win32/$$@@.in
	@@type $(srcdir:/=\)\win32\$@@.in > $@@
@


1.4
log
@matz
@
text
@d25 1
a25 1
	@@copy $(srcdir:/=\)\win32\$@@.in $@@ > nul
@


1.3
log
@eban
@
text
@d21 1
a21 1
	@@echo RUBY_SO_NAME = $(OS)-$$(RUBY_INSTALL_NAME)16>> $@@
@


1.2
log
@matz
@
text
@d21 1
a21 1
	@@echo RUBY_SO_NAME = $$(RUBY_INSTALL_NAME).$(OS)>> $@@
@


1.1
log
@matz - add/remove files
@
text
@d18 5
a22 5
	@@echo> $@@ ### makefile for ruby $(OS) ###
	@@echo>> $@@ srcdir = $(srcdir:\=/)
	@@echo>> $@@ RUBY_INSTALL_NAME = ruby
	@@echo>> $@@ RUBY_SO_NAME = $$(RUBY_INSTALL_NAME).$(OS)
	@@echo>> $@@ !INCLUDE $$(srcdir)/win32/Makefile.sub
@
