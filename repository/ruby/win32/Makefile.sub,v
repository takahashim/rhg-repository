head	1.30;
access;
symbols
	v1_6_7:1.9.2.5
	v1_6_6:1.9.2.5
	v1_6_5:1.9.2.4
	v1_6_4:1.9.2.2
	v1_7_1:1.11
	v1_6_4_preview4:1.9.2.2
	v1_6_4_preview3:1.9.2.2
	v1_6_4_preview2:1.9.2.2
	v1_6_4_preview1:1.9.2.1
	v1_6_3:1.9
	ruby_m17n:1.9.0.4
	ruby_1_6:1.9.0.2
	v1_6_2:1.9
	v1_6_1:1.3
	v1_6_0:1.3;
locks; strict;
comment	@# @;


1.30
date	2002.10.22.04.19.26;	author nobu;	state Exp;
branches;
next	1.29;

1.29
date	2002.10.21.14.03.46;	author nobu;	state Exp;
branches;
next	1.28;

1.28
date	2002.09.15.12.57.20;	author eban;	state Exp;
branches;
next	1.27;

1.27
date	2002.09.11.02.38.51;	author usa;	state Exp;
branches;
next	1.26;

1.26
date	2002.09.11.00.39.35;	author usa;	state Exp;
branches;
next	1.25;

1.25
date	2002.09.10.08.24.11;	author usa;	state Exp;
branches;
next	1.24;

1.24
date	2002.09.08.09.04.16;	author eban;	state Exp;
branches;
next	1.23;

1.23
date	2002.08.23.08.18.19;	author eban;	state Exp;
branches;
next	1.22;

1.22
date	2002.06.11.04.16.58;	author usa;	state Exp;
branches;
next	1.21;

1.21
date	2002.06.06.03.06.11;	author usa;	state Exp;
branches;
next	1.20;

1.20
date	2002.05.18.12.19.05;	author usa;	state Exp;
branches;
next	1.19;

1.19
date	2002.05.14.09.22.07;	author nobu;	state Exp;
branches;
next	1.18;

1.18
date	2002.04.19.13.06.12;	author usa;	state Exp;
branches;
next	1.17;

1.17
date	2002.04.12.03.55.04;	author usa;	state Exp;
branches;
next	1.16;

1.16
date	2002.03.28.09.59.49;	author usa;	state Exp;
branches;
next	1.15;

1.15
date	2002.03.20.16.12.15;	author usa;	state Exp;
branches;
next	1.14;

1.14
date	2002.03.20.12.59.21;	author nobu;	state Exp;
branches;
next	1.13;

1.13
date	2002.03.20.11.19.59;	author nobu;	state Exp;
branches;
next	1.12;

1.12
date	2001.06.09.07.41.44;	author usa;	state Exp;
branches;
next	1.11;

1.11
date	2001.04.14.04.38.19;	author usa;	state Exp;
branches;
next	1.10;

1.10
date	2001.03.28.00.54.30;	author eban;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.22.09.00.23;	author matz;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2000.12.22.03.22.25;	author matz;	state Exp;
branches;
next	1.7;

1.7
date	2000.12.08.07.10.38;	author matz;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.06.09.10.17;	author eban;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.31.00.43.08;	author eban;	state Exp;
branches;
next	1.4;

1.4
date	2000.10.06.06.13.52;	author eban;	state Exp;
branches;
next	1.3;

1.3
date	2000.08.09.04.32.24;	author matz;	state Exp;
branches;
next	1.2;

1.2
date	2000.08.07.05.02.12;	author matz;	state Exp;
branches;
next	1.1;

1.1
date	2000.08.03.09.55.54;	author matz;	state Exp;
branches;
next	;

1.9.2.1
date	2001.03.28.00.54.48;	author eban;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2001.04.14.04.37.00;	author usa;	state Exp;
branches;
next	1.9.2.3;

1.9.2.3
date	2001.08.01.11.49.14;	author usa;	state Exp;
branches;
next	1.9.2.4;

1.9.2.4
date	2001.08.17.04.56.02;	author usa;	state Exp;
branches;
next	1.9.2.5;

1.9.2.5
date	2001.11.13.08.32.19;	author usa;	state Exp;
branches;
next	;


desc
@@


1.30
log
@* instruby.rb: add dryrun mode.

* ext/extmk.rb (extmake): avoid Borland make's quirk behavior.

* lib/mkmf.rb (link_command): opt is not a makefile macro.

* bcc32/Makefile.sub ($(LIBRUBY_SO) $(LIBRUBY)): EXTOBJS were not
  linked.

* bcc32/Makefile.sub (ext/extinit.obj): missing.

* bcc32/Makefile.sub (TRY_LINK): options have to place before any
  non-option arguments.

* win32/Makefile.sub (TRY_LINK): need -link and -libpath options.

* bcc32/Makefile.sub, win32/Makefile.sub (RANLIB): logical
  operator never work with command.com.
@
text
@SHELL = $(COMSPEC)

#### Start of system configuration section. ####

## variables may be overridden by $(compile_dir)/Makefile
!ifndef srcdir
srcdir = ..
!endif
!ifndef RUBY_INSTALL_NAME
RUBY_INSTALL_NAME = ruby
!endif
!if !defined(RUBYW_INSTALL_NAME) || "$(RUBYW_INSTALL_NAME)" == "$(RUBY_INSTALL_NAME)"
RUBYW_INSTALL_NAME = $(RUBY_INSTALL_NAME:ruby=rubyw)
!endif
!if "$(RUBYW_INSTALL_NAME)" == "$(RUBY_INSTALL_NAME)"
RUBYW_INSTALL_NAME = $(RUBY_INSTALL_NAME)w
!endif
!if !defined(icondirs) && defined(ICONDIRS)
icondirs=$(ICONDIRS)
!endif
!if defined(icondirs)
icondirs=$(icondirs:\=/)
iconinc=-I$(icondirs: = -I)
!endif
###############

VPATH = $(srcdir):$(srcdir)/missing
.SUFFIXES: .y .def .lib

!if !defined(CC)
CC = cl
!endif
!if !defined(CPP)
CPP = $(CC) -E
!endif
!if !defined(YACC)
YACC = byacc
!endif
AR = lib -nologo
PURIFY =
AUTOCONF = autoconf

!if !defined(PROCESSOR_ARCHITECTURE)
PROCESSOR_ARCHITECTURE = x86
!endif
MACHINE = $(PROCESSOR_ARCHITECTURE)
!if "$(PROCESSOR_ARCHITECTURE)" == "x86"
!if !defined(PROCESSOR_LEVEL)
PROCESSOR_LEVEL = 5
!endif
!if 6 < $(PROCESSOR_LEVEL)
PROCESSOR_LEVEL = 6
!endif
PROCESSOR_FLAG = -G$(PROCESSOR_LEVEL)
CPU = i$(PROCESSOR_LEVEL)86
ARCH = i386
!else
CPU = $(PROCESSOR_ARCHITECTURE)
ARCH = $(PROCESSOR_ARCHITECTURE)
!endif
!if !defined(DEBUGFLAGS)
DEBUGFLAGS = -Zi
!endif
!if !defined(OPTFLAGS)
OPTFLAGS = -O2b2xg-
!endif
OS = mswin32
RT = msvcrt

!ifndef RUBY_SO_NAME
RUBY_SO_NAME = $(RT)-$(RUBY_INSTALL_NAME)17
!endif

!if !defined(prefix)
prefix = /usr
!endif
!if !defined(DESTDIR)
DESTDIR = $(prefix)
!endif
!if !defined(CFLAGS)
CFLAGS = -MD -DNT=1 $(DEBUGFLAGS) $(OPTFLAGS) $(PROCESSOR_FLAG)
!endif
!if !defined(CPPFLAGS)
CPPFLAGS = -I. -I$(srcdir) -I$(srcdir)/missing -DLIBRUBY_SO=\"$(LIBRUBY_SO)\"
!endif
!if !defined(XLDFLAGS)
XLDFLAGS = 
!endif
!if !defined(RFLAGS)
RFLAGS = -r
!endif
!if !defined(EXTLIBS)
EXTLIBS =
!endif
LIBS = user32.lib advapi32.lib wsock32.lib $(EXTLIBS)
MISSING = acosh.obj crypt.obj win32.obj isinf.obj isnan.obj

ARFLAGS = -machine:$(MACHINE) -out:
CC = $(CC) -nologo
LD = $(CC)
LDSHARED = $(LD) -LD
XCFLAGS =
LDFLAGS = -link -incremental:no -pdb:none
DLDFLAGS = $(LDFLAGS) -dll
XLDFLAGS = -stack:$(STACK)
SOLIBS = 

LIBRUBY_LDSHARED = $(LDSHARED)
LIBRUBY_DLDFLAGS = $(EXTLDFLAGS) -def:$(RUBYDEF)

EXEEXT = .exe
PROGRAM=$(RUBY_INSTALL_NAME)$(EXEEXT)
WPROGRAM=$(RUBYW_INSTALL_NAME)$(EXEEXT)
RUBYDEF = $(RUBY_SO_NAME).def
MINIRUBY = .\miniruby$(EXEEXT)

!if !defined(STACK)
STACK = 0x2000000
!endif
ORGLIBPATH = $(LIB)

#### End of system configuration section. ####

LIBRUBY_A     = lib$(RUBY_INSTALL_NAME).lib
LIBRUBY_SO    = $(RUBY_SO_NAME).dll
LIBRUBY       = $(RUBY_SO_NAME).lib
LIBRUBYARG    = $(LIBRUBY)

EXTOBJS       = 

MAINOBJ       = main.obj
WINMAINOBJ    = winmain.obj

OBJS          = array.obj \
		bignum.obj \
		class.obj \
		compar.obj \
		dir.obj \
		dln.obj \
		enum.obj \
		error.obj \
		eval.obj \
		file.obj \
		gc.obj \
		hash.obj \
		inits.obj \
		io.obj \
		marshal.obj \
		math.obj \
		numeric.obj \
		object.obj \
		pack.obj \
		parse.obj \
		prec.obj \
		process.obj \
		random.obj \
		range.obj \
		re.obj \
		regex.obj \
		ruby.obj \
		signal.obj \
		sprintf.obj \
		st.obj \
		string.obj \
		struct.obj \
		time.obj \
		util.obj \
		variable.obj \
		version.obj \
		$(MISSING)

all:		ext miniruby$(EXEEXT) rbconfig.rb \
		$(LIBRUBY) $(MISCLIBS)
		@@$(MINIRUBY) $(srcdir)/ext/extmk.rb $(EXTSTATIC) $(MAKE) -$(MFLAGS)$(MAKEFLAGS)

ext:
		@@mkdir $@@

ruby: $(PROGRAM)
rubyw: $(WPROGRAM)
lib: $(LIBRUBY)
dll: $(LIBRUBY_SO)

config: config.h config.status

config.h: Makefile $(srcdir)/win32/Makefile.sub
	@@echo Creating <<$@@
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_OFF_T 1
#define SIZEOF_INT 4
#define SIZEOF_SHORT 2
#define SIZEOF_LONG 4
#define SIZEOF_LONG_LONG 0
#define SIZEOF___INT64 8
#define SIZEOF_OFF_T 4
#define SIZEOF_VOIDP 4
#define SIZEOF_FLOAT 4
#define SIZEOF_DOUBLE 8
#define HAVE_PROTOTYPES 1
#define TOKEN_PASTE(x,y) x##y
#define HAVE_STDARG_PROTOTYPES 1
#if _MSC_VER > 1100 && !defined NORETURN
#define NORETURN(x) __declspec(noreturn) x
#else
#define NORETURN(x) x
#endif
#define HAVE_DECL_SYS_NERR 1
#define STDC_HEADERS 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_LIMITS_H 1
#define HAVE_FCNTL_H 1
#define HAVE_SYS_UTIME_H 1
#define HAVE_MEMORY_H 1
#define uid_t int
#define gid_t int
#define HAVE_STRUCT_STAT_ST_RDEV 1
#define HAVE_ST_RDEV 1
#define GETGROUPS_T int
#define RETSIGTYPE void
#define HAVE_ALLOCA 1
#define HAVE_DUP2 1
#define HAVE_MEMCMP 1
#define HAVE_MEMMOVE 1
#define HAVE_MKDIR 1
#define HAVE_STRCASECMP 1
#define HAVE_STRNCASECMP 1
#define HAVE_STRERROR 1
#define HAVE_STRFTIME 1
#define HAVE_STRCHR 1
#define HAVE_STRSTR 1
#define HAVE_STRTOD 1
#define HAVE_STRTOL 1
#define HAVE_STRTOUL 1
#define HAVE_FLOCK 1
#define HAVE_VSNPRINTF 1
#define HAVE_FINITE 1
#define HAVE_FMOD 1
#define HAVE_FREXP 1
#define HAVE_HYPOT 1
#define HAVE_MODF 1
#define HAVE_WAITPID 1
#define HAVE_CHSIZE 1
#define HAVE_TIMES 1
#define HAVE__SETJMP 1
#define HAVE_TELLDIR 1
#define HAVE_SEEKDIR 1
#define HAVE_MKTIME 1
#define HAVE_COSH 1
#define HAVE_SINH 1
#define HAVE_TANH 1
#define HAVE_EXECVE 1
#define HAVE_TZNAME 1
#define HAVE_DAYLIGHT 1
#define SETPGRP_VOID 1
#define inline __inline
#define RSHIFT(x,y) ((x)>>(int)y)
#define FILE_COUNT _cnt
#define FILE_READPTR _ptr
#define DEFAULT_KCODE KCODE_NONE
#define DLEXT ".so"
#define DLEXT2 ".dll"
#define NT 1
#define RUBY_LIB "/lib/ruby/1.7"
#define RUBY_SITE_LIB "/lib/ruby/site_ruby"
#define RUBY_SITE_LIB2 "/lib/ruby/site_ruby/1.7"
#define RUBY_PLATFORM "$(ARCH)-$(OS)"
#define RUBY_ARCHLIB "/lib/ruby/1.7/$(ARCH)-$(OS)"
#define RUBY_SITE_ARCHLIB "/lib/ruby/site_ruby/1.7/$(ARCH)-$(RT)"
<<KEEP

config.status: Makefile $(srcdir)/win32/Makefile.sub
	@@echo Creating <<$@@
# Generated automatically by Makefile.sub.
s,@@SHELL@@,$$(COMSPEC),;t t
s,@@CFLAGS@@,$(CFLAGS),;t t
s,@@CPPFLAGS@@,$(CPPFLAGS),;t t
s,@@CXXFLAGS@@,$(CXXFLAGS),;t t
s,@@FFLAGS@@,$(FFLAGS),;t t
s,@@LDFLAGS@@,,;t t
s,@@LIBS@@,$(LIBS),;t t
s,@@exec_prefix@@,$${prefix},;t t
s,@@prefix@@,,;t t
s,@@program_transform_name@@,s,,,,;t t
s,@@bindir@@,$${exec_prefix}/bin,;t t
s,@@sbindir@@,$${exec_prefix}/sbin,;t t
s,@@libexecdir@@,$${exec_prefix}/libexec,;t t
s,@@datadir@@,$${prefix}/share,;t t
s,@@sysconfdir@@,$${prefix}/etc,;t t
s,@@sharedstatedir@@,/etc,;t t
s,@@localstatedir@@,/var,;t t
s,@@libdir@@,$${exec_prefix}/lib,;t t
s,@@includedir@@,$${prefix}/include,;t t
s,@@oldincludedir@@,/usr/include,;t t
s,@@infodir@@,$${prefix}/info,;t t
s,@@mandir@@,$${prefix}/man,;t t
s,@@build@@,$(CPU)-pc-$(OS),;t t
s,@@build_alias@@,$(CPU)-$(OS),;t t
s,@@build_cpu@@,$(CPU),;t t
s,@@build_vendor@@,pc,;t t
s,@@build_os@@,$(OS),;t t
s,@@host@@,$(CPU)-pc-$(OS),;t t
s,@@host_alias@@,$(CPU)-$(OS),;t t
s,@@host_cpu@@,$(CPU),;t t
s,@@host_vendor@@,pc,;t t
s,@@host_os@@,$(OS),;t t
s,@@target@@,$(ARCH)-pc-$(OS),;t t
s,@@target_alias@@,$(ARCH)-$(OS),;t t
s,@@target_cpu@@,$(ARCH),;t t
s,@@target_vendor@@,pc,;t t
s,@@target_os@@,$(OS),;t t
s,@@CC@@,$(CC),;t t
s,@@CPP@@,$(CPP),;t t
s,@@YACC@@,$(YACC),;t t
s,@@RANLIB@@,,;t t
s,@@AR@@,$(AR),;t t
s,@@ARFLAGS@@,$(ARFLAGS),;t t
s,@@LN_S@@,$(LN_S),;t t
s,@@SET_MAKE@@,$(SET_MAKE),;t t
s,@@LIBOBJS@@, acosh.obj crypt.obj win32.obj isinf.obj isnan.obj,;t t
s,@@ALLOCA@@,$(ALLOCA),;t t
s,@@DEFAULT_KCODE@@,$(DEFAULT_KCODE),;t t
s,@@EXEEXT@@,.exe,;t t
s,@@OBJEXT@@,obj,;t t
s,@@XLDFLAGS@@,$(XLDFLAGS),;t t
s,@@DLDFLAGS@@,$(DLDFLAGS) $$(LIBPATH) -def:$$(DEFFILE),;t t
s,@@STATIC@@,$(STATIC),;t t
s,@@CCDLFLAGS@@,-DIMPORT,;t t
s,@@LDSHARED@@,$(LDSHARED),;t t
s,@@DLEXT@@,so,;t t
s,@@DLEXT2@@,dll,;t t
s,@@LIBEXT@@,lib,;t t
s,@@STRIP@@,$(STRIP),;t t
s,@@EXTSTATIC@@,$(EXTSTATIC),;t t
s,@@setup@@,Setup,;t t
s,@@MINIRUBY@@,$(MINIRUBY),;t t
s,@@LIBRUBY_LDSHARED@@,$(LIBRUBY_LDSHARED),;t t
s,@@LIBRUBY_DLDFLAGS@@,$(LIBRUBY_DLDFLAGS),;t t
s,@@RUBY_INSTALL_NAME@@,$(RUBY_INSTALL_NAME),;t t
s,@@rubyw_install_name@@,$(RUBYW_INSTALL_NAME),;t t
s,@@RUBYW_INSTALL_NAME@@,$(RUBYW_INSTALL_NAME),;t t
s,@@RUBY_SO_NAME@@,$(RUBY_SO_NAME),;t t
s,@@LIBRUBY_A@@,lib$$(RUBY_INSTALL_NAME).lib,;t t
s,@@LIBRUBY_SO@@,$$(RUBY_SO_NAME).dll,;t t
s,@@LIBRUBY_ALIASES@@,$(LIBRUBY_ALIASES),;t t
s,@@LIBRUBY@@,$$(RUBY_SO_NAME).lib,;t t
s,@@LIBRUBYARG@@,$$(RUBY_SO_NAME).lib,;t t
s,@@SOLIBS@@,$(SOLIBS),;t t
s,@@DLDLIBS@@,$(DLDLIBS),;t t
s,@@ENABLE_SHARED@@,yes,;t t
s,@@OUTFLAG@@,-Fe,;t t
s,@@CPPOUTFILE@@,-P,;t t
s,@@LIBPATHFLAG@@, -libpath:%s,;t t
s,@@LIBARG@@,%s.lib,;t t
s,@@LINK_SO@@,$$(LDSHARED) -Fe$$(@@) $$(OBJS) $$(LIBS) $$(LOCAL_LIBS) $$(DLDFLAGS),;t t
s,@@COMPILE_C@@,$$(CC) $$(CFLAGS) $$(CPPFLAGS) -c -Tc$$(<:\=/),;t t
s,@@COMPILE_CXX@@,$$(CXX) $$(CXXFLAGS) $$(CPPFLAGS) -c -Tp$$(<:\=/),;t t
s,@@COMPILE_RULES@@,{$$(srcdir)}.%s{}.%s: .%s.%s:,;t t
s,@@TRY_LINK@@,$$(CC) -Feconftest $$(INCFLAGS) -I$$(hdrdir) $$(CPPFLAGS) $$(CFLAGS) $$(src) $$(LOCAL_LIBS) $$(LIBS) -link $$(LDFLAGS) $$(LIBPATH) $$(XLDFLAGS),;t t
s,@@COMMON_LIBS@@,m,;t t
s,@@COMMON_MACROS@@,WIN32_LEAN_AND_MEAN;t t
s,@@COMMON_HEADERS@@,winsock2.h windows.h,;t t
s,@@EXPORT_PREFIX@@, ,;t t
s,@@arch@@,$(ARCH)-$(OS),;t t
s,@@sitearch@@,$(ARCH)-$(RT),;t t
s,@@sitedir@@,$${prefix}/lib/ruby/site_ruby,;t t
s,@@configure_args@@,--with-make-prog=nmake --enable-shared $(configure_args),;t t
s,@@configure_input@@,$$configure_input,;t t
s,@@srcdir@@,$(srcdir),;t t
s,@@top_srcdir@@,$(srcdir),;t t
<<KEEP

miniruby$(EXEEXT):	$(OBJS) $(MAINOBJ) dmyext.obj
		@@echo. $(LIBS)
		$(PURIFY) $(CC) $(MAINOBJ) dmyext.obj $(OBJS) $(LIBS) -Fe$@@ $(LDFLAGS)

$(PROGRAM):	$(MAINOBJ) $(LIBRUBY_SO) $*.res
		$(PURIFY) $(CC) $(MAINOBJ) $*.res \
			-Fe$@@ $(LIBRUBYARG) $(LDFLAGS) $(XLDFLAGS)

$(WPROGRAM):	$(MAINOBJ) $(WINMAINOBJ) $(LIBRUBY_SO) $*.res
		$(PURIFY) $(CC) $(MAINOBJ) $(WINMAINOBJ) $*.res \
			-Fe$@@ $(LIBRUBYARG) $(LDFLAGS) $(XLDFLAGS) -subsystem:Windows

$(LIBRUBY_A):	$(OBJS) dmyext.obj
		$(AR) $(ARFLAGS)$@@ $(OBJS) dmyext.obj

$(LIBRUBY):	$(RUBYDEF)
		$(AR) $(ARFLAGS)$@@ -def:$(RUBYDEF)

$(LIBRUBY_SO):	$(LIBRUBY_A) $(EXTOBJS) $(RUBYDEF) $*.res
		@@echo. $(EXTOBJS)
		$(LIBRUBY_LDSHARED) $(MAINOBJ) $(EXTOBJS) $(LIBRUBY_A) $*.res $(LIBS) \
			-Fe$@@ $(LDFLAGS) $(LIBRUBY_DLDFLAGS)

$(RUBYDEF):	$(LIBRUBY_A) miniruby$(EXEEXT)
		$(MINIRUBY) $(srcdir)/win32/mkexports.rb -output=$@@ $(LIBRUBY_A)

{$(srcdir)/win32}.def.lib:
		$(AR) $(ARFLAGS)$@@ -def:$<

install:	rbconfig.rb
		$(MINIRUBY) $(srcdir)/instruby.rb -$(MFLAGS)$(MAKEFLAGS) $(DESTDIR)
		$(MINIRUBY) $(srcdir)/ext/extmk.rb $(MAKE) -$(MFLAGS)$(MAKEFLAGS) DESTDIR=$(DESTDIR) install

clean:		clean-ext clean-local

clean-local:
		@@if exist $(LIBRUBY_A) del $(LIBRUBY_A)
		@@if exist $(MAINOBJ) del $(MAINOBJ)
		@@if exist rbconfig.rb del rbconfig.rb
		@@if exist ext\extinit.c del ext\extinit.c
		@@if exist ext\extinit.obj del ext\extinit.obj
		@@if exist ext\vc*.pdb del ext\vc*.pdb
		@@if exist *.obj del *.obj
		@@if exist *.res del *.res

clean-ext:
		@@-$(MINIRUBY) $(srcdir)/ext/extmk.rb $(MAKE) -$(MFLAGS)$(MAKEFLAGS) clean

distclean:	distclean-ext distclean-local

distclean-local:	clean-local
		@@if exist Makefile del Makefile
		@@if exist config.h del config.h
		@@if exist ext\config.cache del ext\config.cache
		@@if exist config.cache del config.cache
		@@if exist config.log del config.log
		@@if exist config.status del config.status
		@@if exist *~ del *~
		@@if exist *.bak del *.bak
		@@if exist *.stackdump del *.stackdump
		@@if exist *.core del *.core
		@@if exist gmon.out del gmon.out
		@@if exist y.tab.c del y.tab.c
		@@if exist y.output del y.output
		@@if exist *.map del *.map
		@@if exist *.pdb del *.pdb
		@@if exist *.ilk del *.ilk
		@@if exist *.exp del *.exp
		@@if exist $(RUBYDEF) del $(RUBYDEF)
		@@if exist $(RUBY_INSTALL_NAME).rc del $(RUBY_INSTALL_NAME).rc
		@@if exist $(RUBYW_INSTALL_NAME).rc del $(RUBYW_INSTALL_NAME).rc
		@@if exist $(RUBY_SO_NAME).rc del $(RUBY_SO_NAME).rc
		@@if exist $(PROGRAM) del $(PROGRAM)
		@@if exist $(WPROGRAM) del $(WPROGRAM)
		@@if exist $(LIBRUBY_SO) del $(LIBRUBY_SO)
		@@if exist $(LIBRUBY) del $(LIBRUBY)
		@@if exist ext\nul if not exist ext\* rmdir ext
		@@if exist miniruby$(EXEEXT) del miniruby$(EXEEXT)

distclean-ext:
		@@-$(MINIRUBY) $(srcdir)/ext/extmk.rb $(MAKE) -$(MFLAGS)$(MAKEFLAGS) distclean

realclean:	distclean
		@@if exist parse.c del parse.c
		@@if exist lex.c del lex.c

test:		miniruby$(EXEEXT)
		@@miniruby$(EXEEXT) $(srcdir)/rubytest.rb

rbconfig.rb:	miniruby$(EXEEXT) config.status
		@@$(MINIRUBY) $(srcdir)/mkconfig.rb -srcdir=$(srcdir) \
			-install_name=$(RUBY_INSTALL_NAME) \
			-so_name=$(RUBY_SO_NAME) rbconfig.rb

$(RUBY_INSTALL_NAME).rc $(RUBYW_INSTALL_NAME).rc $(RUBY_SO_NAME).rc: rbconfig.rb
		@@$(MINIRUBY) $(srcdir)/win32/resource.rb \
			-ruby_name=$(RUBY_INSTALL_NAME) \
			-rubyw_name=$(RUBYW_INSTALL_NAME) \
			-so_name=$(RUBY_SO_NAME) \
			. $(icondirs) $(srcdir)/win32

{$(srcdir)/missing}.c.obj:
	$(CC) $(CFLAGS) $(XCFLAGS) -I. -I$(<D) $(CPPFLAGS) -c -Tc$(<:\=/)
{$(srcdir)/win32}.c.obj:
	$(CC) $(CFLAGS) $(XCFLAGS) -I. -I$(<D) $(CPPFLAGS) -c -Tc$(<:\=/)
{$(srcdir)}.c.obj:
	$(CC) $(CFLAGS) $(XCFLAGS) -I. -I$(<D) $(CPPFLAGS) -c -Tc$(<:\=/)
.c.obj:
	$(CC) $(CFLAGS) $(XCFLAGS) -I. $(CPPFLAGS) -c -Tc$(<:\=/)

.rc.res:
	$(RC) -I. -I$(<D) $(iconinc) -I$(srcdir)/win32 $(RFLAGS) -fo$@@ $(<:\=/)

{$(srcdir)}.y.c:
	$(YACC) $(YFLAGS) $(<:\=/)
	sed -e "s!^extern char \*getenv();!/* & */!;s/^\(#.*\)y\.tab/\1parse/" y.tab.c > $@@
	@@del y.tab.c

{$(srcdir)}parse.c: parse.y

ext/extinit.obj: ext/extinit.c $(SETUP)
	$(CC) $(CFLAGS) $(XCFLAGS) $(CPPFLAGS) -Fo$@@ -c ext/extinit.c

acosh.obj: {$(srcdir)}missing/acosh.c
alloca.obj: {$(srcdir)}missing/alloca.c
crypt.obj: {$(srcdir)}missing/crypt.c
dup2.obj: {$(srcdir)}missing/dup2.c
finite.obj: {$(srcdir)}missing/finite.c
flock.obj: {$(srcdir)}missing/flock.c
isinf.obj: {$(srcdir)}missing/isinf.c
isnan.obj: {$(srcdir)}missing/isnan.c
memcmp.obj: {$(srcdir)}missing/memcmp.c
memmove.obj: {$(srcdir)}missing/memmove.c
mkdir.obj: {$(srcdir)}missing/mkdir.c
vsnprintf.obj: {$(srcdir)}missing/vsnprintf.c
strcasecmp.obj: {$(srcdir)}missing/strcasecmp.c
strncasecmp.obj: {$(srcdir)}missing/strncasecmp.c
strchr.obj: {$(srcdir)}missing/strchr.c
strdup.obj: {$(srcdir)}missing/strdup.c
strerror.obj: {$(srcdir)}missing/strerror.c
strftime.obj: {$(srcdir)}missing/strftime.c
strstr.obj: {$(srcdir)}missing/strstr.c
strtod.obj: {$(srcdir)}missing/strtod.c
strtol.obj: {$(srcdir)}missing/strtol.c
strtoul.obj: {$(srcdir)}missing/strtoul.c
nt.obj: {$(srcdir)}missing/nt.c
x68.obj: {$(srcdir)}missing/x68.c
os2.obj: {$(srcdir)}missing/os2.c
dl_os2.obj: {$(srcdir)}missing/dl_os2.c

# when I use -I., there is confliction at "OpenFile" 
# so, set . into environment varible "include"
win32.obj: {$(srcdir)}win32/win32.c

# Prevent GNU make v3 from overflowing arg limit on SysV.
.NOEXPORT:
###
array.obj: {$(srcdir)}array.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}util.h {$(srcdir)}st.h {$(srcdir)}/win32/win32.h
bignum.obj: {$(srcdir)}bignum.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}/win32/win32.h
class.obj: {$(srcdir)}class.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}rubysig.h {$(srcdir)}node.h {$(srcdir)}st.h \
  {$(srcdir)}/win32/win32.h
compar.obj: {$(srcdir)}compar.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}/win32/win32.h
dir.obj: {$(srcdir)}dir.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}util.h {$(srcdir)}/win32/win32.h
dln.obj: {$(srcdir)}dln.c config.h {$(srcdir)}defines.h \
  {$(srcdir)}dln.h {$(srcdir)}/win32/win32.h
dmyext.obj: {$(srcdir)}dmyext.c
enum.obj: {$(srcdir)}enum.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}node.h {$(srcdir)}util.h {$(srcdir)}/win32/win32.h
error.obj: {$(srcdir)}error.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}env.h {$(srcdir)}version.h {$(srcdir)}/win32/win32.h
eval.obj: {$(srcdir)}eval.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}node.h {$(srcdir)}env.h {$(srcdir)}util.h \
  {$(srcdir)}rubysig.h {$(srcdir)}st.h {$(srcdir)}dln.h \
  {$(srcdir)}/win32/win32.h
file.obj: {$(srcdir)}file.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}rubyio.h {$(srcdir)}rubysig.h {$(srcdir)}util.h \
  {$(srcdir)}dln.h {$(srcdir)}/win32/win32.h
gc.obj: {$(srcdir)}gc.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}rubysig.h {$(srcdir)}st.h {$(srcdir)}node.h \
  {$(srcdir)}env.h {$(srcdir)}re.h {$(srcdir)}regex.h \
  {$(srcdir)}/win32/win32.h
hash.obj: {$(srcdir)}hash.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}st.h {$(srcdir)}util.h {$(srcdir)}rubysig.h \
  {$(srcdir)}/win32/win32.h
inits.obj: {$(srcdir)}inits.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}/win32/win32.h
io.obj: {$(srcdir)}io.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}rubyio.h {$(srcdir)}rubysig.h {$(srcdir)}env.h \
  {$(srcdir)}util.h {$(srcdir)}/win32/win32.h
main.obj: {$(srcdir)}main.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}/win32/win32.h
marshal.obj: {$(srcdir)}marshal.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}rubyio.h {$(srcdir)}st.h {$(srcdir)}/win32/win32.h
math.obj: {$(srcdir)}math.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}/win32/win32.h
numeric.obj: {$(srcdir)}numeric.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}/win32/win32.h
object.obj: {$(srcdir)}object.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}st.h {$(srcdir)}/win32/win32.h
pack.obj: {$(srcdir)}pack.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}/win32/win32.h
parse.obj: {$(srcdir)}parse.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}env.h {$(srcdir)}node.h {$(srcdir)}st.h {$(srcdir)}regex.h \
  {$(srcdir)}util.h {$(srcdir)}lex.c
prec.obj: {$(srcdir)}prec.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}/win32/win32.h
process.obj: {$(srcdir)}process.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}rubysig.h {$(srcdir)}st.h {$(srcdir)}/win32/win32.h
random.obj: {$(srcdir)}random.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}/win32/win32.h
range.obj: {$(srcdir)}range.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}/win32/win32.h
re.obj: {$(srcdir)}re.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}re.h {$(srcdir)}regex.h {$(srcdir)}/win32/win32.h
regex.obj: {$(srcdir)}regex.c config.h {$(srcdir)}regex.h \
  {$(srcdir)}/win32/win32.h
ruby.obj: {$(srcdir)}ruby.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}dln.h {$(srcdir)}node.h {$(srcdir)}util.h \
  {$(srcdir)}/win32/win32.h
signal.obj: {$(srcdir)}signal.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}rubysig.h {$(srcdir)}/win32/win32.h
sprintf.obj: {$(srcdir)}sprintf.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}/win32/win32.h
st.obj: {$(srcdir)}st.c config.h {$(srcdir)}st.h \
  {$(srcdir)}/win32/win32.h
string.obj: {$(srcdir)}string.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}re.h {$(srcdir)}regex.h {$(srcdir)}/win32/win32.h
struct.obj: {$(srcdir)}struct.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}/win32/win32.h
time.obj: {$(srcdir)}time.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}/win32/win32.h
util.obj: {$(srcdir)}util.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}util.h {$(srcdir)}/win32/win32.h
variable.obj: {$(srcdir)}variable.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}env.h {$(srcdir)}node.h {$(srcdir)}st.h {$(srcdir)}util.h \
  {$(srcdir)}/win32/win32.h
version.obj: {$(srcdir)}version.c {$(srcdir)}ruby.h config.h \
  {$(srcdir)}defines.h {$(srcdir)}intern.h {$(srcdir)}missing.h \
  {$(srcdir)}version.h {$(srcdir)}/win32/win32.h
@


1.29
log
@* configure.in (XCFLAGS): CFLAGS to comile ruby itself.

* configure.in (LIBEXT): suffix for static libraries.

* configure.in (LIBPATHFLAG): switch template to specify library
  path.

* configure.in (LINK_SO): command to link shared objects.

* configure.in (DEFFILE, ARCHFILE): miscellaneous system dependent
  files.

* configure.in (EXPORT_PREFIX): prefix to exported symbols on
  Windows.

* configure.in (COMMON_LIBS, COMMON_MACROS, COMMON_HEADERS):
  libraries, macros and headers used in common.

* configure.in (RUBYW_INSTALL_NAME, rubyw_install_name): GUI mode
  excutable name.

* Makefile.in (CFLAGS): append XCFLAGS.

* Makefile.in (PREP): miscellaneous system dependent files.

* Makefile.in (ruby.imp, ext/extinit.o): moved from ext/extmk.rb.

* Makefile.in (fake.rb): CROSS_COMPILING keeps building platform.

* Makefile.in (MAKEFILES): depend on *.in and config.status.

* Makefile.in (parse.c): replace "y.tab.c" with actual name for
  byacc.

* ext/extmk.rb, lib/mkmf.rb: integrated.

* ext/extmk.rb: propagate MFLAGS.

* ext/extmk.rb (extmake): make dummy Makefile to clean even if no
  Makefile is made.

* lib/mkmf.rb (older): accept multiple file names and Time
  objects.

* lib/mkmf.rb (xsystem): split and qoute.

* lib/mkmf.rb (cpp_include): make include directives.

* lib/mkmf.rb (try_func): try wheather specified function is
  available.

* lib/mkmf.rb (install_files): default to site-install.

* lib/mkmf.rb (checking_for): added.

* lib/mkmf.rb (find_executable0): just find executable file with
  no message.

* lib/mkmf.rb (create_header): output header file is variable.

* lib/mkmf.rb (create_makefile): separate sections.

* lib/mkmf.rb (init_mkmf): initialize global variables.

* win32/Makefile.sub, bcc32/Makefile.sub (CPP, AR): added.

* bcc32/Makefile.sub (ARCH): fixed to i386.

* win32/Makefile.sub, bcc32/Makefile.sub (miniruby): should not
  link EXTOBJS.

* ext/dl/extconf.rb: use try_cpp to cross compile.

* ext/dl/extconf.rb: not modify files in source directory.
@
text
@d320 1
a320 1
s,@@RANLIB@@,rem,;t t
d322 1
a322 1
s,@@ARFLAGS@@,$(ARFLAGS):,;t t
d364 1
a364 1
s,@@TRY_LINK@@,$$(CC) -Feconftest $$(INCFLAGS) -I$$(hdrdir) $$(CPPFLAGS) $$(CFLAGS) $$(src) $$(LOCAL_LIBS) $$(LIBS) $$(LDFLAGS) $$(XLDFLAGS),;t t
d408 1
a408 1
		$(MINIRUBY) $(srcdir)/instruby.rb $(DESTDIR)
@


1.28
log
@* configure.in (OUTFLAG, CPPOUTFILE): moved from lib/mkmf.rb.
  check whether ${CPP} accepts the -o option.
* win32/Makefile.sub (OUTFLAG, CPPOUTFILE): ditto.
* bcc32/Makefile.sub (OUTFLAG, CPPOUTFILE): ditto.
* djgpp/config.sed (OUTFLAG, CPPOUTFILE): ditto.
* lib/mkmf.rb (OUTFLAG, CPPOUTFILE): use CONFIG.
  make easy to understand log.
* mkconfig.rb (val): should not strip.
@
text
@d28 1
a28 1
.SUFFIXES: .y
d33 3
d81 1
a81 1
CFLAGS = -nologo -MD -DNT=1 $(DEBUGFLAGS) $(OPTFLAGS) $(PROCESSOR_FLAG)
a85 3
!if !defined(LDFLAGS)
LDFLAGS = $(CFLAGS) -Fm
!endif
d97 9
a105 2
LDSHARED = $(CC) -LD
DLDFLAGS = 
d108 3
d115 1
a115 1
MINIRUBY=miniruby$(EXEEXT)
d129 1
a129 1
EXTOBJS       = dmyext.obj
d174 1
a174 1
		@@.\miniruby$(EXEEXT) $(srcdir)/ext/extmk.rb 
d277 2
a278 3
config.status: Makefile $(srcdir)/win32/Makefile.sub $(MINIRUBY)
	@@echo Creating config.status
	@@$(MINIRUBY) -pe "~/@@CFLAGS@@/||$$_.sub!(/#{Regexp.quote('$(CFLAGS)')}/o, '$$(CFLAGS)')" << > $@@
d285 2
a286 2
s,@@LDFLAGS@@,$(LDFLAGS),;t t
s,@@LIBS@@,user32.lib advapi32.lib wsock32.lib,;t t
d318 1
a318 1
s,@@CPP@@,$$(CC) -E,;t t
d322 1
d331 1
a331 1
s,@@DLDFLAGS@@,$$(CFLAGS),;t t
d334 1
a334 1
s,@@LDSHARED@@,$$(CC) -LD,;t t
d337 1
d345 2
d358 11
d376 1
a376 1
<<
d379 2
a380 3
		@@echo $(EXTOBJS)
		@@echo $(LIBS)
		$(PURIFY) $(CC) $(LDFLAGS) $(MAINOBJ) dmyext.obj $(OBJS) $(LIBS) -Fe$@@
d383 2
a384 2
		$(PURIFY) $(CC) $(LDFLAGS) $(XLDFLAGS) $(MAINOBJ) $*.res \
			-Fe$@@ $(LIBRUBYARG) -link -stack:$(STACK) -incremental:no
d387 2
a388 2
		$(PURIFY) $(CC) $(LDFLAGS) $(MAINOBJ) $(WINMAINOBJ) $*.res \
			-Fe$@@ $(LIBRUBYARG) -link -stack:$(STACK) -subsystem:Windows -incremental:no
d391 1
a391 1
		$(AR) -out:$@@ -machine:$(MACHINE) $(OBJS) dmyext.obj
d394 1
a394 1
		$(AR) -out:$@@ -def:$(RUBYDEF) -machine:$(MACHINE)
d397 3
a399 2
		$(CC) $(LDFLAGS) $(MAINOBJ) $(EXTOBJS) $(LIBRUBY_A) $*.res $(LIBS) \
			-Fe$@@ -link -dll -def:$(RUBYDEF)
d402 4
a405 1
		.\miniruby$(EXEEXT) $(srcdir)/win32/mkexports.rb -output=$@@ $(LIBRUBY_A)
d408 2
a409 1
		.\miniruby.exe $(srcdir)/instruby.rb $(DESTDIR)
d424 1
a424 1
		@@-.\miniruby$(EXEEXT) $(srcdir)/ext/extmk.rb clean
d458 1
a458 1
		@@-.\miniruby$(EXEEXT) $(srcdir)/ext/extmk.rb distclean
d465 1
a465 1
		@@.\miniruby$(EXEEXT) $(srcdir)/rubytest.rb
d468 1
a468 1
		@@.\miniruby$(EXEEXT) $(srcdir)/mkconfig.rb -srcdir=$(srcdir) \
d473 1
a473 1
		@@.\miniruby$(EXEEXT) $(srcdir)/win32/resource.rb \
d480 1
a480 1
	$(CC) $(CFLAGS) -I. -I$(<D) $(CPPFLAGS) -c -Tc$(<:\=/)
d482 1
a482 1
	$(CC) $(CFLAGS) -I. -I$(<D) $(CPPFLAGS) -c -Tc$(<:\=/)
d484 1
a484 1
	$(CC) $(CFLAGS) -I. -I$(<D) $(CPPFLAGS) -c -Tc$(<:\=/)
d486 1
a486 1
	$(CC) $(CFLAGS) -I. $(CPPFLAGS) -c -Tc$(<:\=/)
d497 3
@


1.27
log
@* bcc32/Makefile.sub: remove unnecessary `.dll' from filename of
  dll's resource file.

* cygwin/GNUmakefile.in: ditto. [ruby-dev:17103]

* win32/Makefile.sub: ditto. [ruby-dev:17103]

* win32/resource.rb: ditto. [ruby-dev:17103]
@
text
@d343 2
@


1.26
log
@* win32/Makefile.sub (ext): make directory `ext' on compile dir.
  [ruby-dev:18255]
@
text
@d371 2
a372 2
$(LIBRUBY_SO):	$(LIBRUBY_A) $(EXTOBJS) $(RUBYDEF) $@@.res
		$(CC) $(LDFLAGS) $(MAINOBJ) $(EXTOBJS) $(LIBRUBY_A) $@@.res $(LIBS) \
d419 1
a419 1
		@@if exist $(LIBRUBY_SO).rc del $(LIBRUBY_SO).rc
d442 1
a442 1
$(RUBY_INSTALL_NAME).rc $(RUBYW_INSTALL_NAME).rc $(LIBRUBY_SO).rc: rbconfig.rb
d446 1
a446 1
			-so_name=$(LIBRUBY_SO) \
@


1.25
log
@* win32/Makefile.sub (miniruby): shouldn't link $(EXTOBJS).

* win32/Makefile.sub ($(LIBRUBY_A), $(LIBRUBY)): avoid lib.exe's
  warning.

* win32/Makefile.sub: remove unnecessary rules.

* win32/configure.bat, win32/setup.mak, win32/README.win32: enable to
  pass some arguments to configure.
@
text
@d162 1
a162 1
all:		miniruby$(EXEEXT) rbconfig.rb \
d166 3
a347 1
		@@if not exist $(@@D)\nul mkdir $(@@D)
@


1.24
log
@* configure.in: modify program_prefix only if specified
  --program-prefix.

* configure.in: don't generate ext/extmk.rb.

* Makefile.in: execute directly $(srcdir)/ext/extmk.rb.
  remove -Cext option, "Dir::chdir 'ext'" in ext/extmk.rb.

* {win32,bccwin32}/Makefile.sub: ditto.

* instruby.rb: ditto.

* ext/extmk.rb: renamed from ext/extmk.rb.in.

* lib/mkmf.rb (module Logging): create log files (mkmf.log)
  in each extension module directories.

* ext/extmk.rb: ditto.

* lib/mkmf.rb (macro_defined?): new method.

* ext/.cvsignore: remove extmk.rb.

* ext/*/.cvsignore: add "*.def".
@
text
@a17 3
!ifndef RUBY_SO_NAME
RUBY_SO_NAME = rubymw
!endif
d36 1
d40 5
a44 1
!if !defined(PROCESSOR_ARCHITECTURE) || "$(PROCESSOR_ARCHITECTURE)" == "x86"
d67 4
a163 1
		set LIB=..\..;$(ORGLIBPATH)
d309 1
a309 1
s,@@AR@@,lib -nologo,;t t
d345 1
d350 1
a350 9
#ext/extmk.rb:	$(srcdir)/ext/extmk.rb.in config.status
#		@@echo Creating ext/extmk.rb
#		@@.\miniruby$(EXEEXT) $(srcdir)/ext/configsub.rb \
#			-srcdir=$(srcdir) \
#			-install_name=$(RUBY_INSTALL_NAME) \
#			-so_name=$(RUBY_SO_NAME) \
#			-output=$@@ $(srcdir)/ext/extmk.rb.in

miniruby$(EXEEXT):	$(OBJS) $(MAINOBJ) $(EXTOBJS) 
d353 1
a353 1
		$(PURIFY) $(CC) $(LDFLAGS) $(MAINOBJ) $(EXTOBJS) $(OBJS) $(LIBS) -Fe$@@
d364 1
a364 1
		lib -nologo /OUT:$@@ $(OBJS) dmyext.obj
d367 1
a367 1
		lib -nologo /OUT:$@@ /DEF:$(RUBYDEF)
a369 1
		set LIB=.\win32;$(ORGLIBPATH)
a372 5
!if "$(LIBRUBY_SO)" != "rubymw.dll"
rubymw.dll:	$(LIBRUBY)
		$(CC) -nologo $(EXTOBJS) $(LIBRUBY) -o $@@ -link /DLL /DEF:$(RUBYDEF)
!endif

a445 3

#config.status:	$(srcdir)/configure
#		$(SHELL) ./config.status --recheck
@


1.23
log
@* configure.in: RUBY_SO_NAME is msvcrt-rubyXX on mswin32/mingw32.
* configure.in (sitearch): new var.
* mkconfig.rb, lib/mkmf.rb (sitearch): ditto.
* win32/Makefile.sub, win32/setup.mak (sitearch): ditto.
@
text
@d156 1
a156 1
all:		miniruby$(EXEEXT) rbconfig.rb ext/extmk.rb \
d159 1
a159 1
		@@.\miniruby$(EXEEXT) -Cext extmk.rb 
d322 1
d344 7
a350 7
ext/extmk.rb:	$(srcdir)/ext/extmk.rb.in config.status
		@@echo Creating ext/extmk.rb
		@@.\miniruby$(EXEEXT) $(srcdir)/ext/configsub.rb \
			-srcdir=$(srcdir) \
			-install_name=$(RUBY_INSTALL_NAME) \
			-so_name=$(RUBY_SO_NAME) \
			-output=$@@ $(srcdir)/ext/extmk.rb.in
d400 1
a400 1
		@@-.\miniruby$(EXEEXT) -Cext extmk.rb clean
a405 1
		@@if exist ext\extmk.rb del ext\extmk.rb
d434 1
a434 1
		@@-.\miniruby$(EXEEXT) -Cext extmk.rb distclean
@


1.22
log
@* bcc32/Makefile.sub: set PROCESSOR_LEVEL to 6 if it's too big value.

* win32/Makefile.sub: ditto.
@
text
@d63 1
d256 1
a256 1
#define RUBY_SITE_ARCHLIB "/lib/ruby/site_ruby/1.7/$(ARCH)-$(OS)"
d335 1
@


1.21
log
@* win32/Makefile.sub (config.status): use sub! instead of []= because
  []= causes exception.
@
text
@d46 3
@


1.20
log
@* win32/Makefile.sub (config.h): add VC++4/5 support about noreturn
  directive.
@
text
@d257 1
a257 1
	@@$(MINIRUBY) -pe "chomp(' ');~/@@CFLAGS@@/||$$_['$(CFLAGS)']='$$(CFLAGS)'" << > $@@
@


1.19
log
@* win32/Makefile.sub: config.h inlined.  and catch up with the
  latest change.

* win32/config.h.in: no longer used.
@
text
@d185 1
d187 3
@


1.18
log
@* win32/Makefile.sub: add -DNT to $CFLAGS instead of $CPPFLAGS.

* win32/setup.mak: ditto.
@
text
@d164 86
a249 5
config.h: $(srcdir)/win32/$$@@.in
	@@echo Creating config.h
	@@type $(srcdir:/=\)\win32\$@@.in > $@@
	@@echo #undef RUBY_PLATFORM >> $@@
	@@echo #define RUBY_PLATFORM "$(ARCH)-$(OS)" >> $@@
d468 26
a493 26
acosh.obj: $(srcdir)/missing/acosh.c
alloca.obj: $(srcdir)/missing/alloca.c
crypt.obj: $(srcdir)/missing/crypt.c
dup2.obj: $(srcdir)/missing/dup2.c
finite.obj: $(srcdir)/missing/finite.c
flock.obj: $(srcdir)/missing/flock.c
isinf.obj: $(srcdir)/missing/isinf.c
isnan.obj: $(srcdir)/missing/isnan.c
memcmp.obj: $(srcdir)/missing/memcmp.c
memmove.obj: $(srcdir)/missing/memmove.c
mkdir.obj: $(srcdir)/missing/mkdir.c
vsnprintf.obj: $(srcdir)/missing/vsnprintf.c
strcasecmp.obj: $(srcdir)/missing/strcasecmp.c
strncasecmp.obj: $(srcdir)/missing/strncasecmp.c
strchr.obj: $(srcdir)/missing/strchr.c
strdup.obj: $(srcdir)/missing/strdup.c
strerror.obj: $(srcdir)/missing/strerror.c
strftime.obj: $(srcdir)/missing/strftime.c
strstr.obj: $(srcdir)/missing/strstr.c
strtod.obj: $(srcdir)/missing/strtod.c
strtol.obj: $(srcdir)/missing/strtol.c
strtoul.obj: $(srcdir)/missing/strtoul.c
nt.obj: $(srcdir)/missing/nt.c
x68.obj: $(srcdir)/missing/x68.c
os2.obj: $(srcdir)/missing/os2.c
dl_os2.obj: $(srcdir)/missing/dl_os2.c
d497 1
a497 1
win32.obj: $(srcdir)/win32/win32.c
d502 120
a621 40
parse.obj: {$(srcdir)}parse.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/env.h $(srcdir)/node.h $(srcdir)/st.h $(srcdir)/regex.h $(srcdir)/util.h $(srcdir)/lex.c
###
array.obj: $(srcdir)/array.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
bignum.obj: $(srcdir)/bignum.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
class.obj: $(srcdir)/class.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/node.h $(srcdir)/st.h
compar.obj: $(srcdir)/compar.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
dir.obj: $(srcdir)/dir.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
dln.obj: $(srcdir)/dln.c config.h $(srcdir)/defines.h $(srcdir)/dln.h
dmyext.obj: $(srcdir)/dmyext.c
enum.obj: $(srcdir)/enum.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
error.obj: $(srcdir)/error.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/env.h
eval.obj: $(srcdir)/eval.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/node.h $(srcdir)/env.h $(srcdir)/rubysig.h $(srcdir)/st.h $(srcdir)/dln.h
file.obj: $(srcdir)/file.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/rubyio.h $(srcdir)/rubysig.h
gc.obj: $(srcdir)/gc.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/rubysig.h $(srcdir)/st.h $(srcdir)/node.h $(srcdir)/env.h $(srcdir)/re.h $(srcdir)/regex.h
hash.obj: $(srcdir)/hash.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/st.h $(srcdir)/rubysig.h $(srcdir)/util.h
inits.obj: $(srcdir)/inits.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
io.obj: $(srcdir)/io.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/rubyio.h $(srcdir)/rubysig.h $(srcdir)/env.h
main.obj: $(srcdir)/main.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
marshal.obj: $(srcdir)/marshal.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/rubyio.h $(srcdir)/st.h
prec.obj: $(srcdir)/prec.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
math.obj: $(srcdir)/math.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
numeric.obj: $(srcdir)/numeric.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
object.obj: $(srcdir)/object.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/st.h
pack.obj: $(srcdir)/pack.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
process.obj: $(srcdir)/process.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/rubysig.h $(srcdir)/st.h
random.obj: $(srcdir)/random.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
range.obj: $(srcdir)/range.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
re.obj: $(srcdir)/re.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/re.h $(srcdir)/regex.h
regex.obj: $(srcdir)/regex.c config.h $(srcdir)/regex.h $(srcdir)/util.h
ruby.obj: $(srcdir)/ruby.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/dln.h $(srcdir)/util.h
signal.obj: $(srcdir)/signal.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/rubysig.h
sprintf.obj: $(srcdir)/sprintf.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
st.obj: $(srcdir)/st.c config.h $(srcdir)/st.h
string.obj: $(srcdir)/string.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/re.h $(srcdir)/regex.h
struct.obj: $(srcdir)/struct.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
time.obj: $(srcdir)/time.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h
util.obj: $(srcdir)/util.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/util.h
variable.obj: $(srcdir)/variable.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/env.h $(srcdir)/node.h $(srcdir)/st.h
version.obj: $(srcdir)/version.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/version.h
$(OBJS) $(MAINOBJ) $(WINMAINOBJ): $(srcdir)/win32/win32.h
@


1.17
log
@* win32/Makefile.sub: use missing/acosh.c.

* win32/config.h.in: define HAVE_COSH, HAVE_SINH, and HAVE_TANH.
@
text
@d68 1
a68 1
CFLAGS = -nologo -MD $(DEBUGFLAGS) $(OPTFLAGS) $(PROCESSOR_FLAG)
d71 1
a71 1
CPPFLAGS = -I. -I$(srcdir) -I$(srcdir)/missing -DLIBRUBY_SO=\"$(LIBRUBY_SO)\" -DNT=1
@


1.16
log
@* win32/Makefile.sub (config.status): reflect user defined $CC in
  config.status.
@
text
@d86 1
a86 1
MISSING = crypt.obj win32.obj isinf.obj isnan.obj
d218 1
a218 1
s,@@LIBOBJS@@, crypt.obj win32.obj isinf.obj isnan.obj,;t t
d387 1
@


1.15
log
@* win32/Makefile.sub (config.status): fix install path (prefix).
@
text
@d211 1
a211 1
s,@@CC@@,cl,;t t
@


1.14
log
@* win32/Makefile.sub (config.status): and use recent autoconf format.
@
text
@d182 1
a182 1
s,@@prefix@@,$(prefix),;t t
@


1.13
log
@* win32/Makefile.sub: made variables configurable.

* win32/Makefile.sub (config.h): updates RUBY_PLATFORM from
  Makefile.

* win32/Makefile.sub (config.status): ditto.

* win32/Makefile.sub (clean): separate ext and local clean up.

* win32/Makefile.sub (distclean): ditto.
@
text
@d172 80
a251 80
	@@echo # Generated automatically by Makefile.sub. > config.tmp
	@@echo s,@@SHELL@@,$$(COMSPEC),g >> config.tmp
	@@echo s,@@CFLAGS@@,$(CFLAGS),g >> config.tmp
	@@echo s,@@CPPFLAGS@@,$(CPPFLAGS),g >> config.tmp
	@@echo s,@@CXXFLAGS@@,$(CXXFLAGS),g >> config.tmp
	@@echo s,@@FFLAGS@@,$(FFLAGS),g >> config.tmp
	@@echo s,@@LDFLAGS@@,$(LDFLAGS),g >> config.tmp
	@@echo s,@@LIBS@@,user32.lib advapi32.lib wsock32.lib,g >> config.tmp
	@@echo s,@@exec_prefix@@,$${prefix},g >> config.tmp
	@@echo s,@@prefix@@,$(prefix),g >> config.tmp
	@@echo s,@@program_transform_name@@,s,,,,g >> config.tmp
	@@echo s,@@bindir@@,$${exec_prefix}/bin,g >> config.tmp
	@@echo s,@@sbindir@@,$${exec_prefix}/sbin,g >> config.tmp
	@@echo s,@@libexecdir@@,$${exec_prefix}/libexec,g >> config.tmp
	@@echo s,@@datadir@@,$${prefix}/share,g >> config.tmp
	@@echo s,@@sysconfdir@@,$${prefix}/etc,g >> config.tmp
	@@echo s,@@sharedstatedir@@,/etc,g >> config.tmp
	@@echo s,@@localstatedir@@,/var,g >> config.tmp
	@@echo s,@@libdir@@,$${exec_prefix}/lib,g >> config.tmp
	@@echo s,@@includedir@@,$${prefix}/include,g >> config.tmp
	@@echo s,@@oldincludedir@@,/usr/include,g >> config.tmp
	@@echo s,@@infodir@@,$${prefix}/info,g >> config.tmp
	@@echo s,@@mandir@@,$${prefix}/man,g >> config.tmp
	@@echo s,@@build@@,$(CPU)-pc-$(OS),g >> config.tmp
	@@echo s,@@build_alias@@,$(CPU)-$(OS),g >> config.tmp
	@@echo s,@@build_cpu@@,$(CPU),g >> config.tmp
	@@echo s,@@build_vendor@@,pc,g >> config.tmp
	@@echo s,@@build_os@@,$(OS),g >> config.tmp
	@@echo s,@@host@@,$(CPU)-pc-$(OS),g >> config.tmp
	@@echo s,@@host_alias@@,$(CPU)-$(OS),g >> config.tmp
	@@echo s,@@host_cpu@@,$(CPU),g >> config.tmp
	@@echo s,@@host_vendor@@,pc,g >> config.tmp
	@@echo s,@@host_os@@,$(OS),g >> config.tmp
	@@echo s,@@target@@,$(ARCH)-pc-$(OS),g >> config.tmp
	@@echo s,@@target_alias@@,$(ARCH)-$(OS),g >> config.tmp
	@@echo s,@@target_cpu@@,$(ARCH),g >> config.tmp
	@@echo s,@@target_vendor@@,pc,g >> config.tmp
	@@echo s,@@target_os@@,$(OS),g >> config.tmp
	@@echo s,@@CC@@,cl,g >> config.tmp
	@@echo s,@@CPP@@,$$(CC) -E,g >> config.tmp
	@@echo s,@@YACC@@,$(YACC),g >> config.tmp
	@@echo s,@@RANLIB@@,rem,g >> config.tmp
	@@echo s,@@AR@@,lib -nologo,g >> config.tmp
	@@echo s,@@LN_S@@,$(LN_S),g >> config.tmp
	@@echo s,@@SET_MAKE@@,$(SET_MAKE),g >> config.tmp
	@@echo s,@@LIBOBJS@@, crypt.obj win32.obj isinf.obj isnan.obj,g >> config.tmp
	@@echo s,@@ALLOCA@@,$(ALLOCA),g >> config.tmp
	@@echo s,@@DEFAULT_KCODE@@,$(DEFAULT_KCODE),g >> config.tmp
	@@echo s,@@EXEEXT@@,.exe,g >> config.tmp
	@@echo s,@@OBJEXT@@,obj,g >> config.tmp
	@@echo s,@@XLDFLAGS@@,$(XLDFLAGS),g >> config.tmp
	@@echo s,@@DLDFLAGS@@,$$(CFLAGS),g >> config.tmp
	@@echo s,@@STATIC@@,$(STATIC),g >> config.tmp
	@@echo s,@@CCDLFLAGS@@,-DIMPORT,g >> config.tmp
	@@echo s,@@LDSHARED@@,$$(CC) -LD,g >> config.tmp
	@@echo s,@@DLEXT@@,so,g >> config.tmp
	@@echo s,@@DLEXT2@@,dll,g >> config.tmp
	@@echo s,@@STRIP@@,$(STRIP),g >> config.tmp
	@@echo s,@@EXTSTATIC@@,$(EXTSTATIC),g >> config.tmp
	@@echo s,@@setup@@,Setup,g >> config.tmp
	@@echo s,@@LIBRUBY_LDSHARED@@,$(LIBRUBY_LDSHARED),g >> config.tmp
	@@echo s,@@LIBRUBY_DLDFLAGS@@,$(LIBRUBY_DLDFLAGS),g >> config.tmp
	@@echo s,@@RUBY_INSTALL_NAME@@,$(RUBY_INSTALL_NAME),g >> config.tmp
	@@echo s,@@RUBY_SO_NAME@@,$(RUBY_SO_NAME),g >> config.tmp
	@@echo s,@@LIBRUBY_A@@,lib$$(RUBY_INSTALL_NAME).lib,g >> config.tmp
	@@echo s,@@LIBRUBY_SO@@,$$(RUBY_SO_NAME).dll,g >> config.tmp
	@@echo s,@@LIBRUBY_ALIASES@@,$(LIBRUBY_ALIASES),g >> config.tmp
	@@echo s,@@LIBRUBY@@,$$(RUBY_SO_NAME).lib,g >> config.tmp
	@@echo s,@@LIBRUBYARG@@,$$(RUBY_SO_NAME).lib,g >> config.tmp
	@@echo s,@@SOLIBS@@,$(SOLIBS),g >> config.tmp
	@@echo s,@@DLDLIBS@@,$(DLDLIBS),g >> config.tmp
	@@echo s,@@ENABLE_SHARED@@,yes,g >> config.tmp
	@@echo s,@@arch@@,$(ARCH)-$(OS),g >> config.tmp
	@@echo s,@@sitedir@@,$${prefix}/lib/ruby/site_ruby,g >> config.tmp
	@@echo s,@@configure_args@@,--with-make-prog=nmake --enable-shared,g >> config.tmp
	@@echo s,@@configure_input@@,$$configure_input,g >> config.tmp
	@@echo s,@@srcdir@@,$(srcdir),g >> config.tmp
	@@echo s,@@top_srcdir@@,$(srcdir),g >> config.tmp
	@@$(MINIRUBY) -pe "chomp(' ');~/@@CFLAGS@@/||$$_['$(CFLAGS)']='$$(CFLAGS)'" config.tmp > $@@
	@@del config.tmp
@


1.12
log
@* ext/extmk.rb.in: Use -F and -T for mswin32 because cl.exe doesn't support -o officially and cl.exe considers that *.cc and *.cxx are OBJs.

* lib/mkmf.rb: ditto.

* win32/Makefile.sub: Use del instead of rm. All these changes are derived from Nobuyoshi Nakada's patch. Thanks.
@
text
@d26 1
a26 1
iconinc=-I$(icondirs)
d33 1
d35 2
d38 1
d42 18
d61 1
d63 11
a73 2
CFLAGS = -nologo -DNT=1 -Zi -MD -O2b2xg- -G5
CPPFLAGS = -I. -I$(srcdir) -I$(srcdir)/missing -DLIBRUBY_SO=\"$(LIBRUBY_SO)\"
d75 2
d78 7
a84 1
#EXTLIBS = 
d87 1
a87 1
LDSHARED = 
a89 1
RFLAGS = -r
d95 1
d97 1
d99 1
d162 4
a165 1
config.h config.status: $(srcdir)/win32/$$@@.in
d167 85
d296 3
a298 1
clean:
d307 2
d311 3
a313 1
distclean:	clean
d342 3
@


1.11
log
@* win32/config.status.in: no longer use missing/alloca.c.
* win32/Makefile.sub: ditto.
@
text
@d21 7
d41 1
a41 1
CPPFLAGS = -I$(srcdir) -I$(srcdir)/missing
d112 1
a112 1
		set LIB=../..;$(ORGLIBPATH)
d120 3
d134 1
a134 1
		$(PURIFY) $(CC) $(LDFLAGS) $(MAINOBJ) $(EXTOBJS) $(OBJS) $(LIBS) -o $@@
d138 1
a138 1
			-o $@@ $(LIBRUBYARG) -link /STACK:$(STACK)
d142 1
a142 1
			-o $@@ $(LIBRUBYARG) -link /STACK:$(STACK) /SUBSYSTEM:Windows
d151 1
a151 1
		set LIB=./win32;$(ORGLIBPATH)
d153 1
a153 1
			-o $@@ -link /DLL /DEF:$(RUBYDEF)
d166 9
a174 2
clean:;		@@rm -f $(OBJS) $(LIBRUBY_A) $(MAINOBJ) rbconfig.rb
		@@rm -f ext/extinit.c ext/extinit.obj ext/vc*.pdb *.obj *.res
d178 28
a205 6
		@@rm -f Makefile ext/extmk.rb config.h
		@@rm -f ext/config.cache config.cache config.log config.status
		@@rm -f *~ core *.core gmon.out y.tab.c y.output ruby.imp
		@@rm -f *.map *.pdb *.ilk *.exp $(RUBYDEF)
		@@rm -f $(RUBY_INSTALL_NAME).rc $(RUBYW_INSTALL_NAME).rc $(LIBRUBY_SO).rc
		@@rm -f $(PROGRAM) $(WPROGRAM) $(LIBRUBY_SO) $(LIBRUBY) miniruby$(EXEEXT)
d208 2
a209 2
		@@rm -f parse.c
		@@rm -f lex.c
d230 1
a230 1
	$(CC) $(CFLAGS) -I. -I$(<D) $(CPPFLAGS) -c $(<:/=\)
d232 1
a232 1
	$(CC) $(CFLAGS) -I. -I$(<D) $(CPPFLAGS) -c $(<:/=\)
d234 1
a234 1
	$(CC) $(CFLAGS) -I. -I$(<D) $(CPPFLAGS) -c $(<:/=\)
d236 1
a236 1
	$(CC) $(CFLAGS) -I. $(CPPFLAGS) -c $(<:/=\)
d239 1
a239 1
	$(RC) -I. -I$(<D) -I$(srcdir)/win32 $(RFLAGS) -fo$@@ $<
d320 1
@


1.10
log
@* win32/Makefile.sub: disable global optimization.
@
text
@d39 1
a39 1
MISSING = crypt.obj alloca.obj win32.obj isinf.obj isnan.obj
@


1.9
log
@matz
@
text
@d33 1
a33 1
CFLAGS = -nologo -DNT=1 -Zi -MD -O2b2x -G5
@


1.9.2.1
log
@* win32/Makefile.sub: disable global optimization.
@
text
@d33 1
a33 1
CFLAGS = -nologo -DNT=1 -Zi -MD -O2b2xg- -G5
@


1.9.2.2
log
@* win32/config.status.in: no longer use missing/alloca.c.
* win32/Makefile.sub: ditto.
@
text
@d39 1
a39 1
MISSING = crypt.obj win32.obj isinf.obj isnan.obj
@


1.9.2.3
log
@* win32/Makefile.sub: changed path separator of $LIB to '\'.
@
text
@d105 1
a105 1
		set LIB=..\..;$(ORGLIBPATH)
d141 1
a141 1
		set LIB=.\win32;$(ORGLIBPATH)
@


1.9.2.4
log
@* win32/Makefile.sub: merge from 1.7: use del instead of rm.
@
text
@a20 7
!if !defined(icondirs) && defined(ICONDIRS)
icondirs=$(ICONDIRS)
!endif
!if defined(icondirs)
icondirs=$(icondirs:\=/)
iconinc=-I$(icondirs)
!endif
d156 2
a157 9
clean:
		@@if exist $(LIBRUBY_A) del $(LIBRUBY_A)
		@@if exist $(MAINOBJ) del $(MAINOBJ)
		@@if exist rbconfig.rb del rbconfig.rb
		@@if exist ext\extinit.c del ext\extinit.c
		@@if exist ext\extinit.obj del ext\extinit.obj
		@@if exist ext\vc*.pdb del ext\vc*.pdb
		@@if exist *.obj del *.obj
		@@if exist *.res del *.res
d161 6
a166 28
		@@if exist Makefile del Makefile
		@@if exist ext\extmk.rb del ext\extmk.rb
		@@if exist config.h del config.h
		@@if exist ext\config.cache del ext\config.cache
		@@if exist config.cache del config.cache
		@@if exist config.log del config.log
		@@if exist config.status del config.status
		@@if exist *~ del *~
		@@if exist *.bak del *.bak
		@@if exist *.stackdump del *.stackdump
		@@if exist *.core del *.core
		@@if exist gmon.out del gmon.out
		@@if exist y.tab.c del y.tab.c
		@@if exist y.output del y.output
		@@if exist *.map del *.map
		@@if exist *.pdb del *.pdb
		@@if exist *.ilk del *.ilk
		@@if exist *.exp del *.exp
		@@if exist $(RUBYDEF) del $(RUBYDEF)
		@@if exist $(RUBY_INSTALL_NAME).rc del $(RUBY_INSTALL_NAME).rc
		@@if exist $(RUBYW_INSTALL_NAME).rc del $(RUBYW_INSTALL_NAME).rc
		@@if exist $(LIBRUBY_SO).rc del $(LIBRUBY_SO).rc
		@@if exist $(PROGRAM) del $(PROGRAM)
		@@if exist $(WPROGRAM) del $(WPROGRAM)
		@@if exist $(LIBRUBY_SO) del $(LIBRUBY_SO)
		@@if exist $(LIBRUBY) del $(LIBRUBY)
		@@if exist ext\nul if not exist ext\* rmdir ext
		@@if exist miniruby$(EXEEXT) del miniruby$(EXEEXT)
d169 2
a170 2
		@@if exist parse.c del parse.c
		@@if exist lex.c del lex.c
d200 1
a200 1
	$(RC) -I. -I$(<D) $(iconinc) -I$(srcdir)/win32 $(RFLAGS) -fo$@@ $(<:\=/)
a280 1
$(OBJS) $(MAINOBJ) $(WINMAINOBJ): $(srcdir)/win32/win32.h
@


1.9.2.5
log
@	* hash.c (envix): merge from 1.7: use GET_ENVIRON and FREE_ENVIRON to
	  get environment variables list.

	* hash.c (env_keys): ditto.

	* hash.c (env_each_key): ditto.

	* hash.c (env_values): ditto.

	* hash.c (env_keys): ditto.

	* hash.c (env_each_value): ditto.

	* hash.c (env_each): ditto.

	* hash.c (env_inspect): ditto.

	* hash.c (env_to_a): ditto.

	* hash.c (env_size): ditto.

	* hash.c (env_empty_p): ditto.

	* hash.c (env_has_value): ditto.

	* hash.c (env_index): ditto.

	* hash.c (env_to_hash): ditto.

	* win32/win32.c (win32_getenv): merge from 1.7: use static buffer.

	* win32/win32.c, win32/win32.h (win32_get_environ): merge from 1.7:
	  get environment variables list.

	* win32/win32.c, win32/win32.h (win32_free_environ): merge from 1.7:
	  free environment variables list.

	* win32/Makefile.sub: merge from 1.7: add -DLIBRUBY_SO to CPPFLAGS.
@
text
@d41 1
a41 1
CPPFLAGS = -I. -I$(srcdir) -I$(srcdir)/missing -DLIBRUBY_SO=\"$(LIBRUBY_SO)\"
@


1.8
log
@matz
@
text
@d105 1
a105 1
		set LIB=../../win32;$(ORGLIBPATH)
a197 1
	$(CC) $(CFLAGS) $(CPPFLAGS) -c $<
@


1.7
log
@matz
@
text
@d24 1
d190 6
d197 1
a198 6
{$(srcdir)}.c{}.obj:
	$(CC) -I. -I$(<D) $(CFLAGS) $(CPPFLAGS) -c $(<:/=\)
{$(srcdir)/missing}.c{}.obj:
	$(CC) -I. -I$(<D) $(CFLAGS) $(CPPFLAGS) -c $(<:/=\)
{$(srcdir)/win32}.c{}.obj:
	$(CC) -I. -I$(<D) $(CFLAGS) $(CPPFLAGS) -c $(<:/=\)
d203 6
a208 4
parse.c: $(srcdir)/parse.y
	$(YACC) $(YFLAGS) $(srcdir)/parse.y
	sed -e "s!^extern char \*getenv();!/* & */!" y.tab.c > parse.c
	@@rm y.tab.c
d243 1
a243 1
parse.obj: $(srcdir)/parse.c $(srcdir)/ruby.h config.h $(srcdir)/defines.h $(srcdir)/intern.h $(srcdir)/env.h $(srcdir)/node.h $(srcdir)/st.h $(srcdir)/regex.h $(srcdir)/util.h $(srcdir)/lex.c
@


1.6
log
@eban
@
text
@d32 1
a32 1
CFLAGS = -nologo -DNT=1 -Zi -O2b2x -G5
@


1.5
log
@eban
@
text
@d1 1
a1 1
SHELL = $(COMPSEC)
@


1.4
log
@eban
@
text
@d192 1
a192 1
 	$(CC) -I. -I$(<D) $(CFLAGS) $(CPPFLAGS) -c $(<:/=\)
d194 1
a194 1
 	$(CC) -I. -I$(<D) $(CFLAGS) $(CPPFLAGS) -c $(<:/=\)
d196 1
a196 1
 	$(CC) -I. -I$(<D) $(CFLAGS) $(CPPFLAGS) -c $(<:/=\)
@


1.3
log
@matz
@
text
@d105 1
a105 1
		@@.\miniruby$(EXEEXT) -Xext extmk.rb 
d157 1
a157 1
		@@-.\miniruby$(EXEEXT) -Xext extmk.rb clean
@


1.2
log
@matz
@
text
@d32 1
a32 1
CFLAGS = -nologo -DNT=1 -MDd -Zi
d37 1
a37 1
LIBS = RubyCRTD.lib user32.lib advapi32.lib ws2_32.lib $(EXTLIBS)
@


1.1
log
@matz - add/remove files
@
text
@d32 1
a32 1
CFLAGS = -nologo -DNT=1 -Zi -O2b2x -G5
d37 1
a37 1
LIBS = user32.lib advapi32.lib wsock32.lib $(EXTLIBS)
@
