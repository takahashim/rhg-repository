head	1.4;
access;
symbols
	v1_6_7:1.1
	v1_6_6:1.1
	v1_6_5:1.1
	v1_6_4:1.1
	v1_7_1:1.1
	v1_6_4_preview4:1.1
	v1_6_4_preview3:1.1
	v1_6_4_preview2:1.1
	v1_6_4_preview1:1.1
	v1_6_3:1.1
	ruby_m17n:1.1.0.4
	ruby_1_6:1.1.0.2
	v1_6_2:1.1
	v1_6_1:1.1
	v1_6_0:1.1;
locks; strict;
comment	@# @;


1.4
date	2002.06.18.10.23.31;	author usa;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.26.05.06.45;	author usa;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.30.09.23.14;	author usa;	state Exp;
branches;
next	1.1;

1.1
date	2000.08.03.09.55.54;	author matz;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2002.03.26.05.08.56;	author usa;	state Exp;
branches;
next	;


desc
@@


1.4
log
@* win32/mkexports.rb: remove unnecessary exports. (ruby-dev:17418)
@
text
@#!./miniruby -s

SYM = {}

objs = ARGV.collect {|s| s.tr('/', '\\')}
IO.foreach("|dumpbin -symbols " + objs.join(' ')) do |l|
  next if /^[0-9A-F]+ 0+ UNDEF / =~ l
  next unless l.sub!(/.*\sExternal\s+\|\s+/, '')
  if l.sub!(/^_/, '')
    next if /@@.*@@/ =~ l || /@@[0-9a-f]{16}$/ =~ l
  elsif !l.sub!(/^(\S+) \([^@@?\`\']*\)$/, '\1')
    next
  end
  SYM[l.strip] = true
end

exports = []
if $name
  exports << "Name " + $name
elsif $library
  exports << "Library " + $library
end
exports << "Description " + $description.dump if $description
exports << "EXPORTS" << SYM.keys.sort

if $output
  open($output, 'w') {|f| f.puts exports.join("\n")}
else
  puts exports.join("\n")
end
@


1.3
log
@* win32/mkexports.rb: support VC++.NET.
@
text
@d11 1
a11 1
  elsif !l.sub!(/^(\S+) \([^@@?]*\)$/, '\1')
@


1.2
log
@	* win32/mkexports.rb: follow the change of rb_io_puts().
@
text
@d10 1
a10 1
    next if /@@.*@@/ =~ l
@


1.1
log
@matz - add/remove files
@
text
@d27 1
a27 1
  open($output, 'w') {|f| f.puts exports}
d29 1
a29 1
  puts exports
@


1.1.2.1
log
@* win32/mkexports.rb: support VC++.NET.
@
text
@d10 1
a10 1
    next if /@@.*@@/ =~ l || /@@[0-9a-f]{16}$/ =~ l
@
