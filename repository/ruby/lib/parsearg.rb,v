head	1.2;
access;
symbols
	v1_6_7:1.1.1.2
	v1_6_6:1.1.1.2
	v1_6_5:1.1.1.2
	v1_6_4:1.1.1.2
	v1_7_1:1.1.1.2
	v1_6_4_preview4:1.1.1.2
	v1_6_4_preview3:1.1.1.2
	v1_6_4_preview2:1.1.1.2
	v1_6_4_preview1:1.1.1.2
	v1_6_3:1.1.1.2
	ruby_m17n:1.1.1.2.0.8
	ruby_1_6:1.1.1.2.0.6
	v1_6_2:1.1.1.2
	v1_6_1:1.1.1.2
	v1_6_0:1.1.1.2
	v1_4_6:1.1.1.2
	v1_4_5:1.1.1.2
	v1_4_4:1.1.1.2
	ruby_1_4_3:1.1.1.2
	ruby1_4_3:1.1.1.2
	v1_4_3:1.1.1.2
	v1_5_0:1.1.1.2
	ruby_1_4_3_pre1:1.1.1.2
	ruby_1_4:1.1.1.2.0.4
	v1_4_2:1.1.1.2
	v1_4_1:1.1.1.2
	v1_4_0:1.1.1.2
	v1_3_7:1.1.1.2
	v1_3_6_repack:1.1.1.2
	v1_3_6:1.1.1.2
	v1_3_5:1.1.1.2
	v1_2_6repack:1.1.1.1.4.4
	v1_3_4_990625:1.1.1.2
	v1_3_4_990624:1.1.1.2
	v1_2_6:1.1.1.1.4.4
	v1_3_4_990611:1.1.1.2
	v1_3_4_990531:1.1.1.2
	v1_3_3_990518:1.1.1.2
	v1_3_3_990513:1.1.1.2
	v1_3_3_990507:1.1.1.2
	v1_2_5:1.1.1.1.4.4
	v1_2_4:1.1.1.1.4.4
	v1_3_1_990225:1.1.1.2
	v1_3_1_990224:1.1.1.2
	v1_3_1_990215:1.1.1.2
	v1_3_1_990212:1.1.1.2
	v1_3_1_990210:1.1.1.2
	v1_3_1_:1.1.1.2
	v1_3_1_990209:1.1.1.2
	v1_3_1_990205:1.1.1.2
	v1_3_1_990203:1.1.1.2
	v1_3_1_990201:1.1.1.2
	v1_3_1"_990201:1.1.1.2
	v1_3_1_990128:1.1.1.2
	v1_3_1_990127:1.1.1.2
	v1_3_1_990126:1.1.1.2
	ruby_1_3:1.1.1.2.0.2
	v1_2_2:1.1.1.1.4.4
	RUBY_1_3:1.1.1.2
	v1_2_2_pr1:1.1.1.1.4.4
	v1_2_1repack:1.1.1.1.4.4
	v1_2_1:1.1.1.1.4.4
	v1_2_stable:1.1.1.1.4.4
	v1_1d1:1.1.1.1.4.4
	v1_1d0:1.1.1.1.4.4
	v1_1c9_1:1.1.1.1.4.4
	v1_1c9:1.1.1.1.4.4
	v1_1c8:1.1.1.1.4.4
	v1_1c7:1.1.1.1.4.4
	v1_1c6:1.1.1.1.4.4
	v1_1d-start:1.1.1.1.4.4
	v1_1c5:1.1.1.1.4.4
	v1_1dev:1.1.1.1.4.4.0.2
	v1_1c4:1.1.1.1.4.4
	v1_1c3:1.1.1.1.4.4
	v1_1c2:1.1.1.1.4.4
	v1_1c1:1.1.1.1.4.4
	v1_1c0:1.1.1.1.4.4
	v1_1b9_31:1.1.1.1.4.4
	v1_1b9_30:1.1.1.1.4.4
	v1_1b9_28:1.1.1.1.4.4
	v1_1b9_27:1.1.1.1.4.4
	v1_1b9_26:1.1.1.1.4.4
	r1_1b9_25:1.1.1.1.4.4
	r1_1b9_24:1.1.1.1.4.4
	v1_1b9_23:1.1.1.1.4.4
	v1_1b9_22:1.1.1.1.4.4
	v1_1b9_20:1.1.1.1.4.4
	v1_1b9_18:1.1.1.1.4.4
	v1_1b9_16:1.1.1.1.4.4
	v1_1b9_15:1.1.1.1.4.4
	v1_1b9_13:1.1.1.1.4.4
	v1_1b9_12:1.1.1.1.4.4
	v1_1b9_11:1.1.1.1.4.3
	v1_1b9_08:1.1.1.1.4.3
	v1_1b9_07:1.1.1.1.4.3
	r1_1b9:1.1.1.1.4.3
	v1_1b8:1.1.1.1.4.3
	v1_1b7:1.1.1.1.4.2
	v1_1b6:1.1.1.1.4.1
	v1_1r:1.1.1.1.0.4
	v1_1:1.1.1.1
	v1_0r:1.1.1.1.0.2
	v1_0:1.1.1.1
	RUBY:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2002.07.29.06.14.06;	author matz;	state Exp;
branches;
next	1.1;

1.1
date	98.01.16.12.13.07;	author matz;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.16.12.13.07;	author matz;	state Exp;
branches
	1.1.1.1.4.1;
next	1.1.1.2;

1.1.1.2
date	99.01.20.04.59.35;	author matz;	state Exp;
branches;
next	;

1.1.1.1.4.1
date	98.01.16.12.36.05;	author matz;	state Exp;
branches;
next	1.1.1.1.4.2;

1.1.1.1.4.2
date	98.02.06.10.03.24;	author matz;	state Exp;
branches;
next	1.1.1.1.4.3;

1.1.1.1.4.3
date	98.02.18.01.56.47;	author matz;	state Exp;
branches;
next	1.1.1.1.4.4;

1.1.1.1.4.4
date	98.04.20.05.55.38;	author matz;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* numeric.c (num_to_int): default to_int implementaion for every
  numeric class.

* re.c (rb_reg_quote): initial part of the string was never copied
  to the quoted string.
@
text
@#
#		parsearg.rb - parse arguments
#			$Release Version: $
#			$Revision: 1.1.1.2 $
#			$Date: 1999/01/20 04:59:35 $
#			by Yasuo OHBA(SHL Japan Inc. Technology Dept.)
#
# --
#
#	
#

$RCS_ID=%q$Header: /ruby/ruby/lib/parsearg.rb,v 1.1.1.2 1999/01/20 04:59:35 matz Exp $

require "getopts"

def printUsageAndExit()
  if $USAGE
    eval($USAGE)
  end
  exit()
end

def setParenthesis(ex, opt, c)
  if opt != ""
    ex = sprintf("%s$OPT_%s%s", ex, opt, c)
  else
    ex = sprintf("%s%s", ex, c)
  end
  return ex
end

def setOrAnd(ex, opt, c)
  if opt != ""
    ex = sprintf("%s$OPT_%s %s%s ", ex, opt, c, c)
  else
    ex = sprintf("%s %s%s ", ex, c, c)
  end
  return ex
end

def setExpression(ex, opt, op)
  if !op
    ex = sprintf("%s$OPT_%s", ex, opt)
    return ex
  end
  case op.chr
  when "(", ")"
    ex = setParenthesis(ex, opt, op.chr)
  when "|", "&"
    ex = setOrAnd(ex, opt, op.chr)
  else
    return nil
  end
  return ex
end

def parseArgs(argc, nopt, single_opts, *opts)
  if (noOptions = getopts(single_opts, *opts)) == nil
    printUsageAndExit()
  end
  if nopt
    ex = nil
    pos = 0
    for o in nopt.split(/[()|&]/)
      pos += o.length
      ex = setExpression(ex, o, nopt[pos])
      pos += 1
    end
    begin
      if !eval(ex)
	printUsageAndExit()
      end
    rescue
      print "Format Error!! : \"" + nopt + "\"\t[parseArgs]\n"
      exit!(-1)
    end
  end
  if ARGV.length < argc
    printUsageAndExit()
  end
  return noOptions
end
@


1.1
log
@Initial revision
@
text
@a0 1
#!/usr/local/bin/ruby
d4 2
a5 2
#			$Revision: 1.3 $
#			$Date: 1996/11/12 06:48:51 $
d13 1
a13 1
$RCS_ID="$Header: /home/jammy/current/ruby/RCS/parsearg.rb,v 1.3 1996/11/12 06:48:51 jammy Exp $"
d15 1
a15 1
load("getopts.rb")
d76 1
a76 1
      exit! -1
@


1.1.1.1
log
@
@
text
@@


1.1.1.2
log
@ruby 1.3 cycle
@
text
@d1 1
d5 2
a6 2
#			$Revision: 1.1.1.1.4.4 $
#			$Date: 1998/04/20 05:55:38 $
d14 1
a14 1
$RCS_ID=%q$Header: /home/cvsroot/ruby/lib/parsearg.rb,v 1.1.1.1.4.4 1998/04/20 05:55:38 matz Exp $
d16 1
a16 1
require "getopts"
@


1.1.1.1.4.1
log
@*** empty log message ***
@
text
@d5 2
a6 2
#			$Revision: 1.1.1.1 $
#			$Date: 1998/01/16 04:05:49 $
d14 1
a14 1
$RCS_ID="$Header: /home/cvsroot/ruby/lib/parsearg.rb,v 1.1.1.1 1998/01/16 04:05:49 matz Exp $"
@


1.1.1.1.4.2
log
@-ko for keiju's files
@
text
@d5 2
a6 2
#			$Revision: 1.3 $
#			$Date: 1996/11/12 06:48:51 $
d14 1
a14 1
$RCS_ID=%q$Header: /home/jammy/current/ruby/RCS/parsearg.rb,v 1.3 1996/11/12 06:48:51 jammy Exp $
@


1.1.1.1.4.3
log
@1.1b8pre1
@
text
@d16 1
a16 1
require "getopts"
@


1.1.1.1.4.4
log
@*** empty log message ***
@
text
@d1 1
@
