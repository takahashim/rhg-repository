head	1.2;
access;
symbols
	v1_6_3:1.2
	ruby_1_6:1.2.0.2
	v1_1d1:1.1.1.1.4.3
	v1_1d0:1.1.1.1.4.3
	v1_1c7:1.1.1.1.4.3
	v1_1c6:1.1.1.1.4.3
	v1_1d-start:1.1.1.1.4.3
	v1_1c5:1.1.1.1.4.3
	v1_1dev:1.1.1.1.4.3.0.2
	v1_1c4:1.1.1.1.4.3
	v1_1c3:1.1.1.1.4.3
	v1_1c2:1.1.1.1.4.3
	v1_1c1:1.1.1.1.4.3
	v1_1c0:1.1.1.1.4.3
	v1_1b9_31:1.1.1.1.4.3
	v1_1b9_30:1.1.1.1.4.3
	v1_1b9_28:1.1.1.1.4.1
	v1_1b9_27:1.1.1.1.4.1
	v1_1b9_26:1.1.1.1.4.1
	r1_1b9_25:1.1.1.1.4.1
	r1_1b9_24:1.1.1.1.4.1
	v1_1b9_23:1.1.1.1.4.1
	v1_1b9_22:1.1.1.1.4.1
	v1_1b9_20:1.1.1.1.4.1
	v1_1b9_18:1.1.1.1.4.1
	v1_1b9_16:1.1.1.1.4.1
	v1_1b9_15:1.1.1.1.4.1
	v1_1b9_13:1.1.1.1.4.1
	v1_1b9_12:1.1.1.1.4.1
	v1_1b9_11:1.1.1.1.4.1
	v1_1b9_08:1.1.1.1.4.1
	v1_1b9_07:1.1.1.1.4.1
	r1_1b9:1.1.1.1.4.1
	v1_1b8:1.1.1.1.4.1
	v1_1b7:1.1.1.1.4.1
	v1_1b6:1.1.1.1.4.1
	v1_1r:1.1.1.1.0.4
	v1_1:1.1.1.1
	v1_0r:1.1.1.1.0.2
	v1_0:1.1.1.1
	RUBY:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.08.13.06.09.53;	author matz;	state dead;
branches;
next	1.1;

1.1
date	98.01.16.12.13.07;	author matz;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.16.12.13.07;	author matz;	state Exp;
branches
	1.1.1.1.4.1;
next	;

1.1.1.1.4.1
date	98.01.16.12.36.06;	author matz;	state Exp;
branches;
next	1.1.1.1.4.2;

1.1.1.1.4.2
date	98.07.03.07.06.46;	author matz;	state Exp;
branches;
next	1.1.1.1.4.3;

1.1.1.1.4.3
date	98.07.09.08.40.41;	author matz;	state Exp;
branches;
next	1.1.1.1.4.4;

1.1.1.1.4.4
date	98.11.17.09.12.46;	author matz;	state dead;
branches;
next	;


desc
@@


1.2
log
@remove obsolete files
@
text
@#
#		tkentry.rb - Tk entry classes
#			$Date: 1998/01/16 12:13:07 $
#			by Yukihiro Matsumoto <matz@@caelum.co.jp>

require 'tk.rb'

class TkEntry<TkLabel
  def create_self
    tk_call 'entry', @@path
  end
  def scrollcommand(cmd)
    configure 'scrollcommand', cmd
  end

  def delete(s, e=None)
    tk_send 'delete', s, e
  end

  def cursor
    tk_send 'index', 'insert'
  end
  def cursor=(index)
    tk_send 'icursor', index
  end
  def index(index)
    number(tk_send('index', index))
  end
  def insert(pos,text)
    tk_send 'insert', pos, text
  end
  def mark(pos)
    tk_send 'scan', 'mark', pos
  end
  def dragto(pos)
    tk_send 'scan', 'dragto', pos
  end
  def select_adjust(index)
    tk_send 'select', 'adjust', index
  end
  def select_clear
    tk_send 'select', 'clear', 'end'
  end
  def select_from(index)
    tk_send 'select', 'from', index
  end
  def select_present()
    tk_send('select', 'present') == 1
  end
  def select_range(s, e)
    tk_send 'select', 'range', s, e
  end
  def select_to(index)
    tk_send 'select', 'to', index
  end
  def xview(*index)
    tk_send 'xview', *index
  end

  def value
    tk_send 'get'
  end
  def value= (val)
    tk_send 'delete', 0, 'end'
    tk_send 'insert', 0, val
  end
end
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
#			$Date: 1995/12/07 15:01:10 $
@


1.1.1.1
log
@
@
text
@@


1.1.1.1.4.1
log
@*** empty log message ***
@
text
@d3 1
a3 1
#			$Date: 1998/01/16 04:05:50 $
@


1.1.1.1.4.2
log
@1.1b9_29
@
text
@d3 1
a3 1
#			$Date: 1998/01/16 12:36:06 $
d38 2
a39 2
  def selection_adjust(index)
    tk_send 'selection', 'adjust', index
d41 2
a42 2
  def selection_clear
    tk_send 'selection', 'clear', 'end'
d44 2
a45 2
  def selection_from(index)
    tk_send 'selection', 'from', index
d47 2
a48 2
  def selection_present()
    tk_send('selection', 'present') == 1
d50 2
a51 2
  def selection_range(s, e)
    tk_send 'selection', 'range', s, e
d53 2
a54 2
  def selection_to(index)
    tk_send 'selection', 'to', index
@


1.1.1.1.4.3
log
@1.1b9_30
@
text
@d3 1
a3 1
#			$Date: 1998/07/03 07:06:46 $
a8 6
  WidgetClassName = 'Entry'.freeze
  TkClassBind::WidgetClassNameTBL[WidgetClassName] = self
  def self.to_eval
    WidgetClassName
  end

@


1.1.1.1.4.4
log
@1.1c8
@
text
@d3 1
a3 1
#			$Date: 1998/07/09 08:40:41 $
@


