head	1.1;
branch	1.1.1;
access;
symbols
	v1_6_7:1.1.1.2
	v1_6_6:1.1.1.2
	v1_6_5:1.1.1.2
	v1_6_4:1.1.1.2
	v1_7_1:1.1.1.2
	v1_6_4_preview4:1.1.1.2
	v1_6_4_preview3:1.1.1.2
	v1_6_4_preview2:1.1.1.2
	v1_6_4_preview1:1.1.1.2
	v1_6_3:1.1.1.2
	ruby_m17n:1.1.1.2.0.8
	ruby_1_6:1.1.1.2.0.6
	v1_6_2:1.1.1.2
	v1_6_1:1.1.1.2
	v1_6_0:1.1.1.2
	v1_4_6:1.1.1.2
	v1_4_5:1.1.1.2
	v1_4_4:1.1.1.2
	ruby_1_4_3:1.1.1.2
	ruby1_4_3:1.1.1.2
	v1_4_3:1.1.1.2
	v1_5_0:1.1.1.2
	ruby_1_4_3_pre1:1.1.1.2
	ruby_1_4:1.1.1.2.0.4
	v1_4_2:1.1.1.2
	v1_4_1:1.1.1.2
	v1_4_0:1.1.1.2
	v1_3_7:1.1.1.2
	v1_3_6_repack:1.1.1.2
	v1_3_6:1.1.1.2
	v1_3_5:1.1.1.2
	v1_2_6repack:1.1.1.1.4.2
	v1_3_4_990625:1.1.1.2
	v1_3_4_990624:1.1.1.2
	v1_2_6:1.1.1.1.4.2
	v1_3_4_990611:1.1.1.2
	v1_3_4_990531:1.1.1.2
	v1_3_3_990518:1.1.1.2
	v1_3_3_990513:1.1.1.2
	v1_3_3_990507:1.1.1.2
	v1_2_5:1.1.1.1.4.2
	v1_2_4:1.1.1.1.4.2
	v1_3_1_990225:1.1.1.2
	v1_3_1_990224:1.1.1.2
	v1_3_1_990215:1.1.1.2
	v1_3_1_990212:1.1.1.2
	v1_3_1_990210:1.1.1.2
	v1_3_1_:1.1.1.2
	v1_3_1_990209:1.1.1.2
	v1_3_1_990205:1.1.1.2
	v1_3_1_990203:1.1.1.2
	v1_3_1_990201:1.1.1.2
	v1_3_1"_990201:1.1.1.2
	v1_3_1_990128:1.1.1.2
	v1_3_1_990127:1.1.1.2
	v1_3_1_990126:1.1.1.2
	ruby_1_3:1.1.1.2.0.2
	v1_2_2:1.1.1.1.4.2
	RUBY_1_3:1.1.1.2
	v1_2_2_pr1:1.1.1.1.4.2
	v1_2_1repack:1.1.1.1.4.2
	v1_2_1:1.1.1.1.4.2
	v1_2_stable:1.1.1.1.4.2
	v1_1d1:1.1.1.1.4.2
	v1_1d0:1.1.1.1.4.2
	v1_1c9_1:1.1.1.1.4.2
	v1_1c9:1.1.1.1.4.2
	v1_1c8:1.1.1.1.4.2
	v1_1c7:1.1.1.1.4.2
	v1_1c6:1.1.1.1.4.2
	v1_1d-start:1.1.1.1.4.2
	v1_1c5:1.1.1.1.4.2
	v1_1dev:1.1.1.1.4.2.0.2
	v1_1c4:1.1.1.1.4.2
	v1_1c3:1.1.1.1.4.2
	v1_1c2:1.1.1.1.4.2
	v1_1c1:1.1.1.1.4.2
	v1_1c0:1.1.1.1.4.2
	v1_1b9_31:1.1.1.1.4.2
	v1_1b9_30:1.1.1.1.4.2
	v1_1b9_28:1.1.1.1.4.2
	v1_1b9_27:1.1.1.1.4.2
	v1_1b9_26:1.1.1.1.4.2
	r1_1b9_25:1.1.1.1.4.2
	r1_1b9_24:1.1.1.1.4.2
	v1_1b9_23:1.1.1.1.4.2
	v1_1b9_22:1.1.1.1.4.2
	v1_1b9_20:1.1.1.1.4.2
	v1_1b9_18:1.1.1.1.4.2
	v1_1b9_16:1.1.1.1.4.2
	v1_1b9_15:1.1.1.1.4.2
	v1_1b9_13:1.1.1.1.4.2
	v1_1b9_12:1.1.1.1.4.2
	v1_1b9_11:1.1.1.1.4.1
	v1_1b9_08:1.1.1.1.4.1
	v1_1b9_07:1.1.1.1.4.1
	r1_1b9:1.1.1.1
	v1_1b8:1.1.1.1
	v1_1b7:1.1.1.1
	v1_1b6:1.1.1.1
	v1_1r:1.1.1.1.0.4
	v1_1:1.1.1.1
	v1_0r:1.1.1.1.0.2
	v1_0:1.1.1.1
	RUBY:1.1.1;
locks; strict;
comment	@# @;


1.1
date	98.01.16.12.13.07;	author matz;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.16.12.13.07;	author matz;	state Exp;
branches
	1.1.1.1.4.1;
next	1.1.1.2;

1.1.1.2
date	99.01.20.04.59.35;	author matz;	state Exp;
branches;
next	;

1.1.1.1.4.1
date	98.04.02.10.05.19;	author matz;	state Exp;
branches;
next	1.1.1.1.4.2;

1.1.1.1.4.2
date	98.04.20.06.20.35;	author matz;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@def decode64(str)
  string = ''
  for line in str.split("\n")
    line.delete!('^A-Za-z0-9+/')        # remove non-base64 chars
    line.tr!('A-Za-z0-9+/', ' -_')	# convert to uuencoded format
    len = ["#{32 + line.length * 3 / 4}"].pack("c")
					# compute length byte
    string += "#{len}#{line}".unpack("u") # uudecode and concatenate
  end
  return string
end

def j2e(str)
  while str =~ /\033\$B([^\033]*)\033\(B/
    s = $1
    pre, post = $`, $'
    s.gsub!(/./) { |ch|
      (ch[0]|0x80).chr
    }
    str = pre + s + post
 end
#  str.gsub!(/\033\$B([^\033]*)\033\(B/) {
#    $1.gsub!(/./) { |ch|
#      (ch[0]|0x80).chr
#    }
#  }
  str
end

def decode_b(str)
  str.gsub!(/=\?ISO-2022-JP\?B\?([!->@@-~]+)\?=/i) {
    decode64($1)
  }
  str.gsub!(/\n/, ' ') 
  str.gsub!(/\0/, '')
  j2e(str)
end

def encode64(bin)
  encode = ""
  pad = 0
  [bin].pack("u").each do |uu|
    len = (2 + (uu[0] - 32)* 4) / 3
    encode << uu[1, len].tr('` -_', 'AA-Za-z0-9+/')
    pad += uu.length - 2 - len
  end
  encode + "=" * (pad % 3)
end

def b64encode(bin, len = 60)
  encode64(bin).scan(/.{1,#{len}}/o) do
    print $&, "\n"
  end
end 
@


1.1.1.1
log
@
@
text
@@


1.1.1.2
log
@ruby 1.3 cycle
@
text
@d1 11
a11 1
require "kconv"
d13 15
a27 2
def decode64(str)
  str.unpack("m")[0]
a33 5
  str = Kconv::toeuc(str)
  str.gsub!(/=\?SHIFT_JIS\?B\?([!->@@-~]+)\?=/i) {
    decode64($1)
  }
  str = Kconv::toeuc(str)
d36 1
a36 1
  str
d40 8
a47 1
  [bin].pack("m")
@


1.1.1.1.4.1
log
@some patches
@
text
@a0 2
require "kconv"

d13 17
a33 5
  str = Kconv::toeuc(str)
  str.gsub!(/=\?SHIFT_JIS\?B\?([!->@@-~]+)\?=/i) {
    decode64($1)
  }
  str = Kconv::toeuc(str)
d36 1
a36 1
  str
@


1.1.1.1.4.2
log
@1.1b9_12
@
text
@d4 9
a12 1
  str.unpack("m")[0]
d30 8
a37 1
  [bin].pack("m")
@
