head	1.3;
access;
symbols
	irb_0_9:1.3
	v1_6_7:1.1.2.1
	v1_6_6:1.1.2.1
	v1_6_5:1.1.2.1
	v1_6_4:1.1.2.1
	v1_7_1:1.2
	v1_6_4_preview4:1.1.2.1
	v1_6_4_preview3:1.1.2.1
	v0_7_1:1.1.1.1
	KEIJU:1.1.1
	v1_6_4_preview2:1.1
	v1_6_4_preview1:1.1
	v1_6_3:1.1
	ruby_m17n:1.1.0.4
	ruby_1_6:1.1.0.2
	v1_6_2:1.1
	v1_6_1:1.1
	v1_6_0:1.1;
locks; strict;
comment	@# @;


1.3
date	2002.07.09.11.17.16;	author keiju;	state Exp;
branches;
next	1.2;

1.2
date	2001.04.30.18.25.04;	author knu;	state Exp;
branches;
next	1.1;

1.1
date	2000.05.12.09.07.55;	author matz;	state Exp;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2001.04.30.18.17.39;	author knu;	state Exp;
branches;
next	;

1.1.2.1
date	2001.04.30.18.39.35;	author knu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* irb 0.9
@
text
@#
#   xmp.rb - irb version of gotoken xmp
#   	$Release Version: 0.9$
#   	$Revision: 1.11 $
#   	$Date: 2002/07/09 10:26:48 $
#   	by Keiju ISHITSUKA(Nippon Rational Inc.)
#
# --
#
#   
#

require "irb"
require "irb/frame"

class XMP
  @@RCS_ID='-$Id: xmp.rb,v 1.11 2002/07/09 10:26:48 keiju Exp keiju $-'

  def initialize(bind = nil)
    IRB.init_config(nil)
    #IRB.parse_opts
    #IRB.load_modules

    IRB.conf[:PROMPT_MODE] = :XMP

    bind = IRB::Frame.top(1) unless bind
    ws = IRB::WorkSpace.new(bind)
    @@io = StringInputMethod.new
    @@irb = IRB::Irb.new(ws, @@io)
    @@irb.context.ignore_sigint = false

#    IRB.conf[:IRB_RC].call(@@irb.context) if IRB.conf[:IRB_RC]
    IRB.conf[:MAIN_CONTEXT] = @@irb.context
  end

  def puts(exps)
    @@io.puts exps

    if @@irb.context.ignore_sigint
      begin
	trap_proc_b = trap("SIGINT"){@@irb.signal_handle}
	catch(:IRB_EXIT) do
	  @@irb.eval_input
	end
      ensure
	trap("SIGINT", trap_proc_b)
      end
    else
      catch(:IRB_EXIT) do
	@@irb.eval_input
      end
    end
  end

  class StringInputMethod < IRB::InputMethod
    def initialize
      super
      @@exps = []
    end

    def eof?
      @@exps.empty?
    end

    def gets
      while l = @@exps.shift
	next if /^\s+$/ =~ l
	l.concat "\n"
	print @@prompt, l
	break
      end
      l
    end

    def puts(exps)
      @@exps.concat exps.split(/\n/)
    end
  end
end

def xmp(exps, bind = nil)
  bind = IRB::Frame.top(1) unless bind
  xmp = XMP.new(bind)
  xmp.puts exps
  xmp
end
@


1.2
log
@Merge from irb-tools 0.7.1.
@
text
@d3 3
a5 3
#   	$Release Version: 0.7.1$
#   	$Revision: 1.1 $
#   	$Date: 2000/05/12 09:07:55 $
d13 1
a13 1
require "irb/irb"
d17 1
a17 1
  @@RCS_ID='-$Id: xmp.rb,v 1.1 2000/05/12 09:07:55 matz Exp $-'
d20 1
d24 2
d27 1
a27 1
    main = eval("self", bind)
d29 1
a29 2
    @@irb = IRB::Irb.new(main, bind, @@io)
    @@irb.context.prompt_mode = :XMP
@


1.1
log
@2000-05-12
@
text
@d3 3
a5 3
#   	$Release Version: 0.6$
#   	$Revision: 1.5 $
#   	$Date: 1999/03/05 03:14:32 $
d17 1
a17 1
  @@RCS_ID='-$Id: xmp.rb,v 1.5 1999/03/05 03:14:32 keiju Exp keiju $-'
@


1.1.2.1
log
@* sample/irb.rb, lib/irb.rb, lib/irb/*, doc/irb/*: Merge from irb
0.7.3 and irb-tools 0.7.1.

* instruby.rb: Install help-message's too.

* lib/irb/main.rb: This file is not needed anymore.
@
text
@d3 3
a5 3
#   	$Release Version: 0.7.1$
#   	$Revision: 1.1 $
#   	$Date: 2000/05/12 09:07:55 $
d17 1
a17 1
  @@RCS_ID='-$Id: xmp.rb,v 1.1 2000/05/12 09:07:55 matz Exp $-'
@


1.1.1.1
log
@This is the virgin import of irb-tools 0.7.1.
@
text
@d3 3
a5 3
#   	$Release Version: 0.7.1$
#   	$Revision: 1.8 $
#   	$Date: 2001/04/24 07:48:05 $
d17 1
a17 1
  @@RCS_ID='-$Id: xmp.rb,v 1.8 2001/04/24 07:48:05 keiju Exp keiju $-'
@
