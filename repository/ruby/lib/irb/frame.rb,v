head	1.4;
access;
symbols
	irb_0_9:1.4
	v1_6_7:1.2.2.1
	v1_6_6:1.2.2.1
	v1_6_5:1.2.2.1
	v1_6_4:1.2.2.1
	v1_7_1:1.3
	v1_6_4_preview4:1.2.2.1
	v1_6_4_preview3:1.2.2.1
	v0_7_1:1.1.1.1
	KEIJU:1.1.1
	v1_6_4_preview2:1.2
	v1_6_4_preview1:1.2
	v1_6_3:1.2
	ruby_m17n:1.2.0.4
	ruby_1_6:1.2.0.2
	v1_6_2:1.2
	v1_6_1:1.2
	v1_6_0:1.1;
locks; strict;
comment	@# @;


1.4
date	2002.07.09.11.17.16;	author keiju;	state Exp;
branches;
next	1.3;

1.3
date	2001.04.30.18.25.04;	author knu;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.18.16.28.40;	author matz;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2000.05.12.09.07.53;	author matz;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.04.30.18.17.39;	author knu;	state Exp;
branches;
next	;

1.2.2.1
date	2001.04.30.18.39.35;	author knu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@* irb 0.9
@
text
@#
#   frame.rb - 
#   	$Release Version: 0.9$
#   	$Revision: 1.9 $
#   	$Date: 2002/07/09 10:26:53 $
#   	by Keiju ISHITSUKA(Nihon Rational Software Co.,Ltd)
#
# --
#
#   
#

require "e2mmap"

module IRB
  class Frame
    extend Exception2MessageMapper
    def_exception :FrameOverflow, "frame overflow"
    def_exception :FrameUnderflow, "frame underflow"

    INIT_STACK_TIMES = 3
    CALL_STACK_OFFSET = 3

    def initialize
      @@frames = [TOPLEVEL_BINDING] * INIT_STACK_TIMES
    end

    def trace_func(event, file, line, id, binding)
      case event
      when 'call', 'class'
	@@frames.push binding
      when 'return', 'end'
	@@frames.pop
      end
    end

    def top(n = 0)
      bind = @@frames[-(n + CALL_STACK_OFFSET)]
      Fail FrameUnderflow unless bind
      bind
    end

    def bottom(n = 0)
      bind = @@frames[n]
      Fail FrameOverflow unless bind
      bind
    end

    # singleton functions
    def Frame.bottom(n = 0)
      @@backtrace.bottom(n)
    end

    def Frame.top(n = 0)
      @@backtrace.top(n)
    end

    def Frame.sender
      eval "self", @@backtrace.top
    end

    @@backtrace = Frame.new
    set_trace_func proc{|event, file, line, id, binding, klass|
      @@backtrace.trace_func(event, file, line, id, binding)
    }
  end
end
@


1.3
log
@Merge from irb-tools 0.7.1.
@
text
@d3 3
a5 3
#   	$Release Version: 0.7.1$
#   	$Revision: 1.2 $
#   	$Date: 2000/09/18 16:28:40 $
@


1.2
log
@matz
@
text
@d3 3
a5 3
#   	$Release Version: 0.6$
#   	$Revision: 1.1 $
#   	$Date: 2000/05/12 09:07:53 $
@


1.2.2.1
log
@* sample/irb.rb, lib/irb.rb, lib/irb/*, doc/irb/*: Merge from irb
0.7.3 and irb-tools 0.7.1.

* instruby.rb: Install help-message's too.

* lib/irb/main.rb: This file is not needed anymore.
@
text
@d3 3
a5 3
#   	$Release Version: 0.7.1$
#   	$Revision: 1.2 $
#   	$Date: 2000/09/18 16:28:40 $
@


1.1
log
@2000-05-12
@
text
@d4 2
a5 2
#   	$Revision: 1.3 $
#   	$Date: 1999/03/05 03:14:44 $
d63 1
a63 1
    set_trace_func proc{|event, file, line, id, binding|
@


1.1.1.1
log
@This is the virgin import of irb-tools 0.7.1.
@
text
@d3 3
a5 3
#   	$Release Version: 0.7.1$
#   	$Revision: 1.6 $
#   	$Date: 2001/04/24 07:48:12 $
d63 1
a63 1
    set_trace_func proc{|event, file, line, id, binding, klass|
@
