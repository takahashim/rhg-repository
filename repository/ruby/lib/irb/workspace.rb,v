head	1.3;
access;
symbols
	irb_0_9:1.3
	v1_6_7:1.1.2.2
	v1_6_6:1.1.2.2
	v1_6_5:1.1.2.2
	v1_6_4:1.1.2.2
	v1_7_1:1.2
	v1_6_4_preview4:1.1.2.2
	v1_6_4_preview3:1.1.2.2
	ruby_1_6:1.1.0.2
	v0_7_3:1.1.1.1
	KEIJU:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2002.07.09.11.17.16;	author keiju;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.03.08.55.54;	author knu;	state Exp;
branches;
next	1.1;

1.1
date	2001.04.30.17.38.22;	author knu;	state Exp;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2001.04.30.17.38.22;	author knu;	state Exp;
branches;
next	;

1.1.2.1
date	2001.04.30.18.39.35;	author knu;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.05.03.08.56.49;	author knu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* irb 0.9
@
text
@#
#   irb/workspace-binding.rb - 
#   	$Release Version: 0.9$
#   	$Revision: 1.11 $
#   	$Date: 2002/07/03 10:47:16 $
#   	by Keiju ISHITSUKA(keiju@@ishitsuka.com)
#
# --
#
#   
#
module IRB
  class WorkSpace
    # create new workspace. set self to main if specified, otherwise
    # inherit main from TOPLEVEL_BINDING.
    def initialize(*main)
      if main[0].kind_of?(Binding)
	@@binding = main.shift
      elsif IRB.conf[:SINGLE_IRB]
	@@binding = TOPLEVEL_BINDING
      else
	case IRB.conf[:CONTEXT_MODE]
	when 0	# binding in proc on TOPLEVEL_BINDING
	  @@binding = eval("proc{binding}.call",
		      TOPLEVEL_BINDING, 
		      __FILE__,
		      __LINE__)
	when 1	# binding in loaded file
	  require "tempfile"
	  f = Tempfile.open("irb-binding")
	  f.print <<EOF
	  $binding = binding
EOF
	  f.close
	  load f.path
	  @@binding = $binding

	when 2	# binding in loaded file(thread use)
	  unless defined? BINDING_QUEUE
	    require "thread"
	    
	    IRB.const_set("BINDING_QUEUE", SizedQueue.new(1))
	    Thread.abort_on_exception = true
	    Thread.start do
	      eval "require \"irb/ws-for-case-2\"", TOPLEVEL_BINDING, __FILE__, __LINE__
	    end
	    Thread.pass
	  end
	  @@binding = BINDING_QUEUE.pop

	when 3	# binging in function on TOPLEVEL_BINDING(default)
	  @@binding = eval("def irb_binding; binding; end; irb_binding",
		      TOPLEVEL_BINDING, 
		      __FILE__,
		      __LINE__ - 3)
	end
      end
      if main.empty?
	@@main = eval "self", @@binding
      else
	@@main = main[0]
	IRB.conf[:__MAIN__] = @@main
	case @@main
	when Module
	  @@binding = eval("IRB.conf[:__MAIN__].module_eval('binding', __FILE__, __LINE__)", @@binding, __FILE__, __LINE__)
	else
	  begin 
	    @@binding = eval("IRB.conf[:__MAIN__].instance_eval('binding', __FILE__, __LINE__)", @@binding, __FILE__, __LINE__)
	  rescue TypeError
	    IRB.fail CanNotChangeBinding, @@main.inspect
	  end
	end
      end
      eval("_=nil", @@binding)
    end

    attr_reader :binding
    attr_reader :main

    def evaluate(context, statements, file = __FILE__, line = __LINE__)
      eval(statements, @@binding, file, line)
    end
  
    # error message manupilator
    def filter_backtrace(bt)
      case IRB.conf[:CONTEXT_MODE]
      when 0
	return nil if bt =~ /\(irb_local_binding\)/
      when 1
	if(bt =~ %r!/tmp/irb-binding! or
	   bt =~ %r!irb/.*\.rb! or
	   bt =~ /irb\.rb/)
	  return nil
	end
      when 2
	return nil if bt =~ /irb\/.*\.rb/
      when 3
	return nil if bt =~ /irb\/.*\.rb/
	bt.sub!(/:\s*in `irb_binding'/){""} 
      end
      bt
    end

    def IRB.delete_caller
    end
  end
end
@


1.2
log
@Get rid of Japanese comments and fix English comments as appropriate.
@
text
@d3 3
a5 3
#   	$Release Version: 0.7.3$
#   	$Revision: 1.1 $
#   	$Date: 2001/04/30 17:38:22 $
d14 2
a15 3
    # create new workspace. 
    # set self to main if specified, otherwise inherit main
    # from TOPLEVEL_BINDING.
d17 3
a19 1
      if IRB.conf[:SINGLE_IRB]
d80 2
a81 2
    def evaluate(statements, file = __FILE__, line = __LINE__)
      eval statements, @@binding, file, line
d83 1
a83 1

@


1.1
log
@Initial revision
@
text
@d4 2
a5 2
#   	$Revision: 1.3 $
#   	$Date: 2001/04/16 06:05:28 $
d15 2
a16 2
    # (JP: 新たなworkspaceを作る. mainをselfとする. 省略したら, 
    #      TOPLEVEL_BINDINGのmainをそのまま使う. )
@


1.1.2.1
log
@* sample/irb.rb, lib/irb.rb, lib/irb/*, doc/irb/*: Merge from irb
0.7.3 and irb-tools 0.7.1.

* instruby.rb: Install help-message's too.

* lib/irb/main.rb: This file is not needed anymore.
@
text
@d4 2
a5 2
#   	$Revision: 1.1.1.1 $
#   	$Date: 2001/04/30 17:38:22 $
@


1.1.2.2
log
@Get rid of Japanese comments and fix English comments as appropriate.
@
text
@d4 2
a5 2
#   	$Revision: 1.1.2.1 $
#   	$Date: 2001/04/30 18:39:35 $
d15 2
a16 2
    # set self to main if specified, otherwise inherit main
    # from TOPLEVEL_BINDING.
@


1.1.1.1
log
@This is the virgin import of irb 0.7.3.
@
text
@@
