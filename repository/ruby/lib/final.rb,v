head	1.3;
access;
symbols
	v1_6_7:1.3
	v1_6_6:1.3
	v1_6_5:1.3
	v1_6_4:1.3
	v1_7_1:1.3
	v1_6_4_preview4:1.3
	v1_6_4_preview3:1.3
	v1_6_4_preview2:1.3
	v1_6_4_preview1:1.3
	v1_6_3:1.3
	ruby_m17n:1.3.0.4
	ruby_1_6:1.3.0.2
	v1_6_2:1.3
	v1_6_1:1.3
	v1_6_0:1.3
	v1_4_6:1.2
	v1_4_5:1.2
	v1_4_4:1.2
	ruby_1_4_3:1.2
	ruby1_4_3:1.2
	v1_4_3:1.2
	v1_5_0:1.2
	ruby_1_4_3_pre1:1.2
	ruby_1_4:1.2.0.2
	v1_4_2:1.2
	v1_4_1:1.2
	v1_4_0:1.2
	v1_3_7:1.1.1.1
	v1_3_6_repack:1.1.1.1
	v1_3_6:1.1.1.1
	v1_3_5:1.1.1.1
	v1_2_6repack:1.1.2.3
	v1_3_4_990625:1.1.1.1
	v1_3_4_990624:1.1.1.1
	v1_2_6:1.1.2.3
	v1_3_4_990611:1.1.1.1
	v1_3_4_990531:1.1.1.1
	v1_3_3_990518:1.1.1.1
	v1_3_3_990513:1.1.1.1
	v1_3_3_990507:1.1.1.1
	v1_2_5:1.1.2.3
	v1_2_4:1.1.2.3
	v1_3_1_990225:1.1.1.1
	v1_3_1_990224:1.1.1.1
	v1_3_1_990215:1.1.1.1
	v1_3_1_990212:1.1.1.1
	v1_3_1_990210:1.1.1.1
	v1_3_1_:1.1.1.1
	v1_3_1_990209:1.1.1.1
	v1_3_1_990205:1.1.1.1
	v1_3_1_990203:1.1.1.1
	v1_3_1_990201:1.1.1.1
	v1_3_1"_990201:1.1.1.1
	v1_3_1_990128:1.1.1.1
	v1_3_1_990127:1.1.1.1
	v1_3_1_990126:1.1.1.1
	ruby_1_3:1.1.1.1.0.2
	v1_2_2:1.1.2.3
	RUBY_1_3:1.1.1.1
	RUBY:1.1.1
	v1_2_2_pr1:1.1.2.3
	v1_2_1repack:1.1.2.3
	v1_2_1:1.1.2.3
	v1_2_stable:1.1.2.3
	v1_1d1:1.1.2.3
	v1_1d0:1.1.2.3
	v1_1c9_1:1.1.2.3
	v1_1c9:1.1.2.3
	v1_1c8:1.1.2.3
	v1_1c7:1.1.2.3
	v1_1c6:1.1.2.3
	v1_1d-start:1.1.2.3
	v1_1c5:1.1.2.3
	v1_1dev:1.1.2.3.0.2
	v1_1c4:1.1.2.3
	v1_1c3:1.1.2.3
	v1_1c2:1.1.2.3
	v1_1c1:1.1.2.3
	v1_1c0:1.1.2.3
	v1_1b9_31:1.1.2.3
	v1_1b9_30:1.1.2.3
	v1_1b9_28:1.1.2.3
	v1_1b9_27:1.1.2.3
	v1_1b9_26:1.1.2.3
	r1_1b9_25:1.1.2.3
	r1_1b9_24:1.1.2.3
	v1_1b9_23:1.1.2.2
	v1_1b9_22:1.1.2.2
	v1_1b9_20:1.1.2.2
	v1_1b9_18:1.1.2.2
	v1_1b9_16:1.1.2.2
	v1_1b9_15:1.1.2.2
	v1_1b9_13:1.1.2.2
	v1_1b9_12:1.1.2.2
	v1_1b9_11:1.1.2.2
	v1_1b9_08:1.1.2.2
	v1_1b9_07:1.1.2.2
	r1_1b9:1.1.2.2
	v1_1b8:1.1.2.2
	v1_1b7:1.1.2.2
	v1_1b6:1.1.2.1
	v1_1r:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2000.07.15.13.37.03;	author matz;	state Exp;
branches;
next	1.2;

1.2
date	99.08.13.05.45.16;	author matz;	state Exp;
branches;
next	1.1;

1.1
date	98.01.19.05.08.24;	author matz;	state dead;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	99.01.20.04.59.35;	author matz;	state Exp;
branches;
next	;

1.1.2.1
date	98.01.19.05.08.24;	author matz;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	98.02.02.04.49.13;	author matz;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	98.05.27.04.47.28;	author matz;	state Exp;
branches;
next	;


desc
@@


1.3
log
@matz
@
text
@# $Id: final.rb,v 1.2 1999/08/13 05:45:16 matz Exp $
# Copyright (C) 1998 Yukihiro Matsumoto. All rights reserved. 

# final.rb is integrated into ObjectSpace; no longer needed.
@


1.2
log
@1.4.0
@
text
@d1 1
a1 2
#
# $Id: final.rb,v 1.1.1.1 1999/01/20 04:59:35 matz Exp $
d4 1
a4 37
# The ObjectSpace extension:
#
#  ObjectSpace.define_finalizer(obj, proc=lambda())
#
#    Defines the finalizer for the specified object.
#
#  ObjectSpace.undefine_finalizer(obj)
#
#    Removes the finalizers for the object.  If multiple finalizers are
#    defined for the object,  all finalizers will be removed.
#

module ObjectSpace
  Finalizers = {}
  def define_finalizer(obj, proc=lambda())
    ObjectSpace.call_finalizer(obj)
    if assoc = Finalizers[obj.id]
      assoc.push(proc)
    else
      Finalizers[obj.id] = [proc]
    end
  end
  def undefine_finalizer(obj)
    Finalizers.delete(obj.id)
  end
  module_function :define_finalizer, :undefine_finalizer

  Generic_Finalizer = proc {|id|
    if Finalizers.key? id
      for proc in Finalizers[id]
	proc.call(id)
      end
      Finalizers.delete(id)
    end
  }
  add_finalizer Generic_Finalizer
end
@


1.1
log
@file final.rb was initially added on branch v1_1r.
@
text
@d1 41
@


1.1.1.1
log
@ruby 1.3 cycle
@
text
@a0 41
#
# $Id: final.rb,v 1.1.2.3 1998/05/27 04:47:28 matz Exp $
# Copyright (C) 1998 Yukihiro Matsumoto. All rights reserved. 

# The ObjectSpace extension:
#
#  ObjectSpace.define_finalizer(obj, proc=lambda())
#
#    Defines the finalizer for the specified object.
#
#  ObjectSpace.undefine_finalizer(obj)
#
#    Removes the finalizers for the object.  If multiple finalizers are
#    defined for the object,  all finalizers will be removed.
#

module ObjectSpace
  Finalizers = {}
  def define_finalizer(obj, proc=lambda())
    ObjectSpace.call_finalizer(obj)
    if assoc = Finalizers[obj.id]
      assoc.push(proc)
    else
      Finalizers[obj.id] = [proc]
    end
  end
  def undefine_finalizer(obj)
    Finalizers.delete(obj.id)
  end
  module_function :define_finalizer, :undefine_finalizer

  Generic_Finalizer = proc {|id|
    if Finalizers.key? id
      for proc in Finalizers[id]
	proc.call(id)
      end
      Finalizers.delete(id)
    end
  }
  add_finalizer Generic_Finalizer
end
@


1.1.2.1
log
@Mon Jan 19 14:06:13 JST 1998
@
text
@a0 41
#
# $Id: tempfile.rb,v 1.1.2.2 1998/01/16 12:58:19 matz Exp $
# Copyright (C) 1998 Yukihiro Matsumoto. All rights reserved. 

# The ObjectSpace extention:
#
#  ObjectSpace.define_finalizer(obj, proc=lambda())
#
#    Defines the finalizer for the specified object.
#
#  ObjectSpace.undefine_finalizer(obj)
#
#    Removes the finalizers for the object.  If multiple finalizers are
#    defined for the object,  all finalizers will be removed.
#

module ObjectSpace
  Finalizer = {}
  def define_finalizer(obj, proc=lambda())
    ObjectSpace.call_finalizer(obj)
    if assoc = Finalizer[obj.id]
      assoc.push(proc)
    else
      Finalizer[obj.id] = [proc]
    end
  end
  def undefine_finalizer(obj)
    Finalizer.delete(obj.id)
  end
  module_function :define_finalizer, :remove_finalizer

  Generic_Finalizer = proc {|id|
    if Finalizer.key? id
      for proc in Finalizer[id]
	proc.call(id)
      end
      Finalizer.delete(id)
    end
  }
  add_finalizer Generic_Finalizer
end
@


1.1.2.2
log
@__FILE__,__LINE__
@
text
@d2 1
a2 1
# $Id: final.rb,v 1.1.2.1 1998/01/19 05:08:24 matz Exp $
d18 1
a18 1
  Finalizers = {}
d21 1
a21 1
    if assoc = Finalizers[obj.id]
d24 1
a24 1
      Finalizers[obj.id] = [proc]
d28 1
a28 1
    Finalizers.delete(obj.id)
d30 1
a30 1
  module_function :define_finalizer, :undefine_finalizer
d33 2
a34 2
    if Finalizers.key? id
      for proc in Finalizers[id]
d37 1
a37 1
      Finalizers.delete(id)
@


1.1.2.3
log
@*** empty log message ***
@
text
@d2 1
a2 1
# $Id: final.rb,v 1.1.2.2 1998/02/02 04:49:13 matz Exp $
d5 1
a5 1
# The ObjectSpace extension:
@

