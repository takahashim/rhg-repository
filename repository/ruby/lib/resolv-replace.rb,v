head	1.1;
access;
symbols
	v1_6_7:1.1.2.1
	v1_6_6:1.1.2.1
	v1_6_5:1.1.2.1
	ruby_1_6:1.1.0.2
	v1_7_1:1.1;
locks; strict;
comment	@# @;


1.1
date	2001.05.30.09.10.26;	author matz;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.08.16.10.57.57;	author knu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@* ruby.c (proc_options): unexpected SecurityError happens when -T4.

* regex.c (re_compile_pattern): * \1 .. \9 should be
  backreferences always.

* regex.c (re_match): backreferences corresponding to
  unclosed/unmatched parentheses should fail always.

* string.c (rb_str_cat): use rb_str_buf_cat() if possible. [new]

* string.c (rb_str_append): ditto.

* string.c (rb_str_buf_cat): remove unnecessary check (type,
  taint, modify) to gain performance.

* string.c (rb_str_buf_append): ditto.

* string.c (rb_str_buf_finish): removed.

* string.c (rb_str_buf_new): buffering string function. [new]

* string.c (rb_str_buf_append): ditto.

* string.c (rb_str_buf_cat): ditto.

* string.c (rb_str_buf_finish): ditto.

* time.c (make_time_t): local time adjustment revised.
@
text
@require 'resolv'

class BasicSocket
  alias original_resolv_send send
  def send(mesg, flags, *rest)
    rest[0] = Resolv.getaddress(rest[0]).to_s if 0 < rest.length
    original_resolv_send(mesg, flags, *rest)
  end
end

class << IPSocket
  alias original_resolv_getaddress getaddress
  def getaddress(host)
    return Resolv.getaddress(host).to_s
  end
end

class << TCPSocket
  alias original_resolv_new new
  def new(host, service)
    original_resolv_new(Resolv.getaddress(host).to_s, service)
  end

  alias original_resolv_open open
  def open(host, service)
    original_resolv_open(Resolv.getaddress(host).to_s, service)
  end
end

class UDPSocket
  alias original_resolv_connect connect
  def connect(host, port)
    original_resolv_connect(Resolv.getaddress(host).to_s, port)
  end

  alias original_resolv_send send
  def send(mesg, flags, *rest)
    rest[0] = Resolv.getaddress(rest[0]).to_s if 0 < rest.length
    original_resolv_send(mesg, flags, *rest)
  end
end
@


1.1.2.1
log
@* lib/resolv.rb, lib/resolv-replace.rb: Copy from 1.7.
@
text
@@

