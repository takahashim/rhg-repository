head	1.12;
access;
symbols;
locks; strict;
comment	@# @;


1.12
date	2002.10.24.05.31.25;	author nobu;	state Exp;
branches;
next	1.11;

1.11
date	2002.10.22.04.19.26;	author nobu;	state Exp;
branches;
next	1.10;

1.10
date	2002.10.21.14.11.54;	author nobu;	state Exp;
branches;
next	1.9;

1.9
date	2002.10.21.14.03.46;	author nobu;	state Exp;
branches;
next	1.8;

1.8
date	2002.09.15.12.57.21;	author eban;	state Exp;
branches;
next	1.7;

1.7
date	2002.09.12.14.27.02;	author H_Konishi;	state Exp;
branches;
next	1.6;

1.6
date	2002.09.11.02.38.51;	author usa;	state Exp;
branches;
next	1.5;

1.5
date	2002.09.08.09.04.16;	author eban;	state Exp;
branches;
next	1.4;

1.4
date	2002.09.08.05.46.29;	author H_Konishi;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.29.14.36.29;	author H_Konishi;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.11.04.16.58;	author usa;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.11.01.27.46;	author H_Konishi;	state Exp;
branches;
next	;


desc
@@


1.12
log
@* bcc32/Makefile.sub (.rc.res): directory part may be empty in Borland make.
@
text
@SHELL = $(COMSPEC)

#### Start of system configuration section. ####
OS = bccwin32
RT = $(OS)

## variables may be overridden by $(compile_dir)/Makefile
!ifndef srcdir
srcdir = ..
!endif
!ifndef RUBY_INSTALL_NAME
RUBY_INSTALL_NAME = ruby
!endif
!ifndef RUBYW_INSTALL_NAME
RUBYW_INSTALL_NAME = $(RUBY_INSTALL_NAME:ruby=rubyw)
!elif "$(RUBYW_INSTALL_NAME)" == "$(RUBY_INSTALL_NAME)"
RUBYW_INSTALL_NAME = $(RUBY_INSTALL_NAME:ruby=rubyw)
!endif
!if "$(RUBYW_INSTALL_NAME)" == "$(RUBY_INSTALL_NAME)"
RUBYW_INSTALL_NAME = $(RUBY_INSTALL_NAME)w
!endif
!ifndef RUBY_SO_NAME
RUBY_SO_NAME = $(RT)-$(RUBY_INSTALL_NAME)17
!endif
!ifndef icondirs
!ifdef ICONDIRS
icondirs=$(ICONDIRS)
!endif
!endif
!ifdef icondirs
icondirs=$(icondirs:\=/)
iconinc=-I$(icondirs: = -I)
!endif
###############

VPATH = $(srcdir):$(srcdir)/missing
.SUFFIXES: .y

!ifndef CC
CC = bcc32
!endif
!ifndef CPP
CPP = cpp32
!endif
!ifndef RC
RC = brcc32
!endif
!ifndef YACC
YACC = byacc
!endif
!ifndef AR
AR = tlib
!endif

PURIFY =
AUTOCONF = autoconf

!if !defined(PROCESSOR_ARCHITECTURE)
PROCESSOR_ARCHITECTURE = x86
!endif
MACHINE = $(PROCESSOR_ARCHITECTURE)
!if "$(PROCESSOR_ARCHITECTURE)" == "x86"
!ifndef PROCESSOR_LEVEL
PROCESSOR_LEVEL = 5
!endif
!if 6 < $(PROCESSOR_LEVEL)
PROCESSOR_LEVEL = 6
!endif
PROCESSOR_FLAG = -$(PROCESSOR_LEVEL)
CPU = i$(PROCESSOR_LEVEL)86
ARCH = i386
!else
CPU = $(PROCESSOR_ARCHITECTURE)
ARCH = $(PROCESSOR_ARCHITECTURE)
!endif
!ifndef DEBUGFLAGS
DEBUGFLAGS = 
!endif
!ifndef OPTFLAGS
OPTFLAGS = -O
!endif

!ifndef prefix
prefix = /usr
!endif
!ifndef DESTDIR
DESTDIR = $(prefix)
!endif
!ifndef CFLAGS
CFLAGS = -q -DNT=1 $(DEBUGFLAGS) $(OPTFLAGS) $(PROCESSOR_FLAG) -w-
!endif
!ifndef CPPFLAGS
CPPFLAGS = -I. -I$(srcdir) -I$(srcdir)missing -DLIBRUBY_SO=\"$(LIBRUBY_SO)\"
!endif
!ifndef LDFLAGS
LDFLAGS = -S:$(STACK)
!endif
!ifndef RFLAGS
RFLAGS = $(iconinc)
!endif
!ifndef EXTLIBS
EXTLIBS =
!endif
LIBS = cw32.lib import32.lib ws2_32.lib $(EXTLIBS)
MISSING = acosh.obj crypt.obj win32.obj

!ifndef STACK
STACK = 0x2000000
!endif

XCFLAGS = 

ARFLAGS = /a
LD = ilink32 -q -Gn
LDSHARED  = $(LD)
XLDFLAGS  = -Tpe c0x32.obj
WLDFLAGS  = -Tpe c0w32.obj
DLDFLAGS  = -Tpd c0d32.obj
LIBRUBY_LDSHARED = $(LDSHARED)
LIBRUBY_DLDFLAGS = -Gi $(DLDFLAGS) $(EXTLDFLAGS)
LDOBJECTS = $(MAINOBJ)

SOLIBS = 

EXEEXT = .exe
PROGRAM=$(RUBY_INSTALL_NAME)$(EXEEXT)
WPROGRAM=$(RUBYW_INSTALL_NAME)$(EXEEXT)
RUBYDEF = $(RUBY_SO_NAME).def
MINIRUBY = .\miniruby$(EXEEXT)

ORGLIBPATH = $(LIB)

#### End of system configuration section. ####

LIBRUBY_A     = lib$(RUBY_INSTALL_NAME).lib
LIBRUBY_SO    = $(RUBY_SO_NAME).dll
LIBRUBY       = $(RUBY_SO_NAME).lib
LIBRUBYARG    = $(LIBRUBY)

!ifndef EXTOBJS
EXTOBJS       = dmyext.obj
!endif

MAINOBJ       = main.obj
WINMAINOBJ    = winmain.obj

OBJS          = array.obj \
		bignum.obj \
		class.obj \
		compar.obj \
		dir.obj \
		dln.obj \
		enum.obj \
		error.obj \
		eval.obj \
		file.obj \
		gc.obj \
		hash.obj \
		inits.obj \
		io.obj \
		marshal.obj \
		math.obj \
		numeric.obj \
		object.obj \
		pack.obj \
		parse.obj \
		prec.obj \
		process.obj \
		random.obj \
		range.obj \
		re.obj \
		regex.obj \
		ruby.obj \
		signal.obj \
		sprintf.obj \
		st.obj \
		string.obj \
		struct.obj \
		time.obj \
		util.obj \
		variable.obj \
		version.obj \
		$(MISSING)

all:		miniruby$(EXEEXT) rbconfig.rb \
		$(LIBRUBY) $(MISCLIBS)
		@@.\miniruby$(EXEEXT) $(srcdir)ext/extmk.rb $(EXTSTATIC) $(MAKE) -$(MFLAGS)$(MAKEFLAGS)

ruby: $(PROGRAM)
rubyw: $(WPROGRAM)
lib: $(LIBRUBY)
dll: $(LIBRUBY_SO)

config: config.h config.status

config.h: Makefile $(srcdir)bcc32/Makefile.sub
	@@echo Creating $(@@:.\=)
	@@type > $@@ &&|
\#define HAVE_PROTOTYPES 1
\#define HAVE_STDARG_PROTOTYPES 1
/* \#define HAVE_ATTR_NORETURN 1 */
\#define NORETURN(x) x
\#define TOKEN_PASTE(x,y) x\#\#y
\#define inline __inline
/* \#define HAVE_DIRENT_H 1 */
/* \#define HAVE_UNISTD_H 1 */
\#define HAVE_STDLIB_H 1
\#define HAVE_LIMITS_H 1
/* \#define HAVE_SYS_FILE_H 1 */
\#define HAVE_FCNTL_H 1
/* \#define HAVE_PWD_H 1       */
/* \#define HAVE_SYS_TIME_H 1  */
/* \#define HAVE_SYS_TIMES_H 1 */
/* \#define HAVE_SYS_PARAM_H 1 */
/* \#define HAVE_SYS_WAIT_H 1  */
\#define HAVE_STRING_H 1
\#define HAVE_UTIME_H 1
\#define HAVE_MEMORY_H 1
/* \#define HAVE_ST_BLKSIZE 1  */
\#define HAVE_ST_RDEV 1
/* \#define GETGROUPS_T gid_t */
\#define GETGROUPS_T int
\#define RETSIGTYPE void
\#define HAVE_ALLOCA 1
\#define vfork fork
\#define HAVE_FMOD 1
/* \#define HAVE_RANDOM 1    */
\#define HAVE_WAITPID 1
\#define HAVE_GETCWD 1
/* \#define HAVE_TRUNCATE 1  */
\#define HAVE_CHSIZE 1
\#define HAVE_TIMES 1
/* \#define HAVE_UTIMES 1    */
/* \#define HAVE_FCNTL 1     */
/* \#define HAVE_SETITIMER 1 */
\#define HAVE_GETGROUPS 1
/* \#define HAVE_SIGPROCMASK 1 */
\#define HAVE_GETLOGIN 1
\#define HAVE_TELLDIR 1
\#define HAVE_SEEKDIR 1
\#define HAVE_COSH 1
\#define HAVE_SINH 1
\#define HAVE_TANH 1

\#define RSHIFT(x,y) ((x)>>y)
\#define FILE_COUNT level
\#define FILE_READPTR curp
\#define DEFAULT_KCODE KCODE_NONE
\#define DLEXT ".so"
\#define DLEXT2 ".dll"
\#define RUBY_LIB "/lib/ruby/1.7"
\#define RUBY_SITE_LIB "/lib/ruby/site_ruby"
\#define RUBY_SITE_LIB2 "/lib/ruby/site_ruby/1.7"
\#define RUBY_PLATFORM "$(ARCH)-$(OS)"
\#define RUBY_ARCHLIB "/lib/ruby/1.7/$(ARCH)-$(OS)"
\#define RUBY_SITE_ARCHLIB "/lib/ruby/site_ruby/1.7/$(ARCH)-$(OS)"

\#define SIZEOF_INT     4
\#define SIZEOF_SHORT   2
\#define SIZEOF_LONG    4
\#define SIZEOF___INT64 8
\#define SIZEOF_VOIDP   4
\#define SIZEOF_FLOAT   4
\#define SIZEOF_DOUBLE  8

\#define HAVE_DECL_SYS_NERR 1
\#define HAVE_ISINF         1
\#define HAVE_ISNAN         1
\#define HAVE_MEMMOVE       1
\#define HAVE_MKDIR         1
\#define HAVE_STRCASECMP    1
\#define HAVE_STRNCASECMP   1
\#define HAVE_STRCHR        1
\#define HAVE_STRERROR      1
\#define HAVE_STRFTIME      1
\#define HAVE_STRSTR        1
\#define HAVE_STRTOD        1
\#define HAVE_STRTOUL       1
|

config.status: Makefile $(srcdir)bcc32/Makefile.sub
	@@echo Creating $@@
	@@type > $@@ &&|
# Generated automatically by Makefile.sub.
s,@@SHELL@@,$$(COMSPEC),;t t
s,@@CFLAGS@@,$(CFLAGS),;t t
s,@@CPPFLAGS@@,$(CPPFLAGS),;t t
s,@@CXXFLAGS@@,$(CXXFLAGS),;t t
s,@@FFLAGS@@,$(FFLAGS),;t t
s,@@LDFLAGS@@,,;t t
s,@@LIBS@@,$(LIBS),;t t
s,@@exec_prefix@@,$${prefix},;t t
s,@@prefix@@,,;t t
s,@@program_transform_name@@,s,,,,;t t
s,@@bindir@@,$${exec_prefix}/bin,;t t
s,@@sbindir@@,$${exec_prefix}/sbin,;t t
s,@@libexecdir@@,$${exec_prefix}/libexec,;t t
s,@@datadir@@,$${prefix}/share,;t t
s,@@sysconfdir@@,$${prefix}/etc,;t t
s,@@sharedstatedir@@,/etc,;t t
s,@@localstatedir@@,/var,;t t
s,@@libdir@@,$${exec_prefix}/lib,;t t
s,@@includedir@@,$${prefix}/include,;t t
s,@@oldincludedir@@,/usr/include,;t t
s,@@infodir@@,$${prefix}/info,;t t
s,@@mandir@@,$${prefix}/man,;t t
s,@@build@@,$(CPU)-pc-$(OS),;t t
s,@@build_alias@@,$(CPU)-$(OS),;t t
s,@@build_cpu@@,$(CPU),;t t
s,@@build_vendor@@,pc,;t t
s,@@build_os@@,$(OS),;t t
s,@@host@@,$(CPU)-pc-$(OS),;t t
s,@@host_alias@@,$(CPU)-$(OS),;t t
s,@@host_cpu@@,$(CPU),;t t
s,@@host_vendor@@,pc,;t t
s,@@host_os@@,$(OS),;t t
s,@@target@@,$(ARCH)-pc-$(OS),;t t
s,@@target_alias@@,$(ARCH)-$(OS),;t t
s,@@target_cpu@@,$(ARCH),;t t
s,@@target_vendor@@,pc,;t t
s,@@target_os@@,$(OS),;t t
s,@@CC@@,$(CC),;t t
s,@@CPP@@,cpp32,;t t
s,@@YACC@@,$(YACC),;t t
s,@@RANLIB@@,,;t t
s,@@AR@@,$(AR),;t t
s,@@ARFLAGS@@,$(ARFLAGS) ,;t t
s,@@LN_S@@,$(LN_S),;t t
s,@@SET_MAKE@@,$(SET_MAKE),;t t
s,@@LIBOBJS@@, acosh.obj crypt.obj win32.obj,;t t
s,@@ALLOCA@@,$(ALLOCA),;t t
s,@@DEFAULT_KCODE@@,$(DEFAULT_KCODE),;t t
s,@@EXEEXT@@,.exe,;t t
s,@@OBJEXT@@,obj,;t t
s,@@XLDFLAGS@@,$(XLDFLAGS),;t t
s,@@DLDFLAGS@@,$(DLDFLAGS),;t t
s,@@STATIC@@,$(STATIC),;t t
s,@@CCDLFLAGS@@,-DIMPORT,;t t
s,@@LDSHARED@@,$(LDSHARED),;t t
s,@@DLEXT@@,so,;t t
s,@@DLEXT2@@,dll,;t t
s,@@LIBEXT@@,lib,;t t
s,@@STRIP@@,$(STRIP),;t t
s,@@EXTSTATIC@@,$(EXTSTATIC),;t t
s,@@setup@@,Setup,;t t
s,@@MINIRUBY@@,$(MINIRUBY),;t t
s,@@LIBRUBY_LDSHARED@@,$$(LDSHARED),;t t
s,@@LIBRUBY_DLDFLAGS@@,-Gi $$(DLDFLAGS),;t t
s,@@RUBY_INSTALL_NAME@@,$(RUBY_INSTALL_NAME),;t t
s,@@rubyw_install_name@@,$(RUBYW_INSTALL_NAME),;t t
s,@@RUBYW_INSTALL_NAME@@,$(RUBYW_INSTALL_NAME),;t t
s,@@RUBY_SO_NAME@@,$(RUBY_SO_NAME),;t t
s,@@LIBRUBY_A@@,lib$$(RUBY_INSTALL_NAME).lib,;t t
s,@@LIBRUBY_SO@@,$$(RUBY_SO_NAME).dll,;t t
s,@@LIBRUBY_ALIASES@@,$(LIBRUBY_ALIASES),;t t
s,@@LIBRUBY@@,$$(RUBY_SO_NAME).lib,;t t
s,@@LIBRUBYARG@@,$$(RUBY_SO_NAME).lib,;t t
s,@@SOLIBS@@,$(SOLIBS),;t t
s,@@DLDLIBS@@,$(DLDLIBS),;t t
s,@@ENABLE_SHARED@@,yes,;t t
s,@@OUTFLAG@@,-o,;t t
s,@@CPPOUTFILE@@,,;t t
s,@@LIBPATHFLAG@@, -L%s,;t t
s,@@LIBARG@@,%s.lib,;t t
s,@@LINK_SO@@,$$(LDSHARED) $$(DLDFLAGS) $$(LIBPATH) $$(OBJS), $$@@, nul, $$(LIBS) $$(LOCAL_LIBS), $$(DEFFILE), $$(RESFILE),;t t
s,@@COMPILE_C@@,$$(CC) $$(CFLAGS) $$(CPPFLAGS) -c $$(<:/=\),;t t
s,@@COMPILE_CXX@@,$$(CXX) $$(CXXFLAGS) $$(CPPFLAGS) -P -c $$(<:/=\),;t t
s,@@COMPILE_RULES@@,{$$(srcdir)}.%s{}.%s: .%s.%s:,;t t
s,@@COMMON_LIBS@@,m,;t t
s,@@COMMON_MACROS@@,WIN32_LEAN_AND_MEAN;t t
s,@@COMMON_HEADERS@@,winsock2.h windows.h,;t t
s,@@TRY_LINK@@,$$(CC) -oconftest $$(INCFLAGS) -I$$(hdrdir) $$(CPPFLAGS) $$(CFLAGS) $$(LIBPATH) $$(LDFLAGS) $$(src) $$(LOCAL_LIBS) $$(LIBS),;t t
s,@@EXPORT_PREFIX@@,_,;t t
s,@@arch@@,$(ARCH)-$(OS),;t t
s,@@sitearch@@,$(ARCH)-$(OS),;t t
s,@@sitedir@@,$${prefix}/lib/ruby/site_ruby,;t t
s,@@configure_args@@,--enable-shared $(configure_args),;t t
s,@@configure_input@@,$$configure_input,;t t
s,@@srcdir@@,$(srcdir),;t t
s,@@top_srcdir@@,$(srcdir),;t t
|

miniruby$(EXEEXT):	$(LIBRUBY_A) $(MAINOBJ) dmyext.obj
		@@echo $(LIBS)
		$(LD) $(LDFLAGS) $(XLDFLAGS) $(MAINOBJ) dmyext.obj,$@@,nul,$(LIBRUBY_A) $(LIBS)

$(PROGRAM):	$(MAINOBJ) $(LIBRUBY_SO) $(RUBY_INSTALL_NAME).res
		$(LD) $(LDFLAGS) $(XLDFLAGS) $(MAINOBJ),$@@,nul,$(LIBRUBYARG) $(LIBS),,$(RUBY_INSTALL_NAME).res

$(WPROGRAM):	$(MAINOBJ) $(WINMAINOBJ) $(LIBRUBY_SO) $(RUBYW_INSTALL_NAME).res
		$(LD) $(LDFLAGS) $(WLDFLAGS) $(MAINOBJ) $(WINMAINOBJ),$@@,nul,$(LIBRUBYARG) $(LIBS),,$(RUBYW_INSTALL_NAME).res

$(LIBRUBY_A):	$(OBJS)
		@@-if exist $@@ del $@@
		$(AR) $(ARFLAGS) $@@ $(OBJS)

# $(LIBRUBY):	$(LIBRUBY_SO)
#		implib $@@ $(LIBRUBY_SO)

$(LIBRUBY_SO) $(LIBRUBY): $(LIBRUBY_A) $(EXTOBJS) $(RUBYDEF) $(RUBY_SO_NAME).res
		@@echo $(EXTOBJS)
		$(LIBRUBY_LDSHARED) $(LIBRUBY_DLDFLAGS) $(EXTOBJS:/=\),$(LIBRUBY_SO),nul,$(LIBRUBY_A) $(LIBS),$(RUBYDEF),$(RUBY_SO_NAME).res

$(RUBYDEF):	$(LIBRUBY_A) miniruby$(EXEEXT)
		$(MINIRUBY) $(srcdir)bcc32/mkexports.rb -output=$@@ $(LIBRUBY_A)

install:	rbconfig.rb
		$(MINIRUBY) $(srcdir)instruby.rb -$(MFLAGS)$(MAKEFLAGS) $(DESTDIR)
		$(MINIRUBY) $(srcdir)ext/extmk.rb $(MAKE) -$(MFLAGS)$(MAKEFLAGS) DESTDIR=$(DESTDIR) install

clean:		clean-ext clean-local

clean-local:
		@@if exist $(LIBRUBY_A) del $(LIBRUBY_A)
		@@if exist $(MAINOBJ) del $(MAINOBJ)
		@@if exist rbconfig.rb del rbconfig.rb
		@@if exist ext\extinit.c del ext\extinit.c
		@@if exist ext\extinit.obj del ext\extinit.obj
		@@if exist ext\vc*.pdb del ext\vc*.pdb
		@@if exist *.obj del *.obj
		@@if exist *.res del *.res
		@@if exist *.tds del *.tds
		@@if exist *.il? del *.il?

clean-ext:
		@@-$(MINIRUBY) $(srcdir)ext/extmk.rb $(MAKE) -$(MFLAGS)$(MAKEFLAGS) clean

distclean:	distclean-ext distclean-local

distclean-local:	clean-local
		@@if exist Makefile del Makefile
		@@if exist config.h del config.h
		@@if exist ext\config.cache del ext\config.cache
		@@if exist config.cache del config.cache
		@@if exist config.log del config.log
		@@if exist config.status del config.status
		@@if exist *~ del *~
		@@if exist *.bak del *.bak
		@@if exist *.stackdump del *.stackdump
		@@if exist *.core del *.core
		@@if exist gmon.out del gmon.out
		@@if exist y.tab.c del y.tab.c
		@@if exist y.output del y.output
		@@if exist *.map del *.map
		@@if exist *.pdb del *.pdb
		@@if exist *.ilk del *.ilk
		@@if exist *.exp del *.exp
		@@if exist $(RUBYDEF) del $(RUBYDEF)
		@@if exist $(RUBY_INSTALL_NAME).rc del $(RUBY_INSTALL_NAME).rc
		@@if exist $(RUBYW_INSTALL_NAME).rc del $(RUBYW_INSTALL_NAME).rc
		@@if exist $(RUBY_SO_NAME).rc del $(RUBY_SO_NAME).rc
		@@if exist $(PROGRAM) del $(PROGRAM)
		@@if exist $(WPROGRAM) del $(WPROGRAM)
		@@if exist $(LIBRUBY_SO) del $(LIBRUBY_SO)
		@@if exist $(LIBRUBY) del $(LIBRUBY)
		@@if exist ext\nul if not exist ext\* rmdir ext
		@@if exist miniruby$(EXEEXT) del miniruby$(EXEEXT)

distclean-ext:
		@@-$(MINIRUBY) $(srcdir)ext/extmk.rb $(MAKE) -$(MFLAGS)$(MAKEFLAGS) distclean

realclean:	distclean
		@@if exist parse.c del parse.c
		@@if exist lex.c del lex.c

test:		miniruby$(EXEEXT)
		@@$(MINIRUBY) $(srcdir)rubytest.rb

rbconfig.rb:	miniruby$(EXEEXT) config.status
		@@$(MINIRUBY) $(srcdir)mkconfig.rb -srcdir=$(srcdir) \
			-install_name=$(RUBY_INSTALL_NAME) \
			-so_name=$(RUBY_SO_NAME) rbconfig.rb

$(RUBY_INSTALL_NAME).rc $(RUBYW_INSTALL_NAME).rc $(RUBY_SO_NAME).rc: rbconfig.rb
		@@$(MINIRUBY) $(srcdir)win32/resource.rb \
			-ruby_name=$(RUBY_INSTALL_NAME) \
			-rubyw_name=$(RUBYW_INSTALL_NAME) \
			-so_name=$(RUBY_SO_NAME) \
			. $(icondirs) $(srcdir)win32

#config.status:	$(srcdir)configure
#		$(SHELL) .config.status --recheck

.path.c = .;$(srcdir);$(srcdir)win32;$(srcdir)missing
.path.h = .;$(srcdir);$(srcdir)win32;$(srcdir)missing
.path.y = $(srcdir)

.c.obj:
	$(CC) $(CFLAGS) $(XCFLAGS) -I. $(CPPFLAGS) -c $(<:/=\)

.rc.res:
	$(RC) $(RFLAGS) -I. -I$(<D). $(iconinc) -I$(srcdir)win32 $(RFLAGS) -fo$@@ $(<:/=\)

.y.c:
	$(YACC) $(YFLAGS) $(<:\=/)
	sed -e "s!^extern char \*getenv();!/* & */!;s/^\(#.*\)y\.tab/\1parse/" y.tab.c > $(@@F)
	@@del y.tab.c

parse.c: parse.y

ext/extinit.obj: ext/extinit.c $(SETUP)
	$(CC) $(CFLAGS) $(XCFLAGS) $(CPPFLAGS) -o$@@ -c ext/extinit.c

acosh.obj: acosh.c win32.h
alloca.obj: alloca.c win32.h
crypt.obj: crypt.c win32.h
dup2.obj: dup2.c win32.h
finite.obj: finite.c win32.h
flock.obj: flock.c win32.h
isinf.obj: isinf.c win32.h
isnan.obj: isnan.c win32.h
memcmp.obj: memcmp.c win32.h
memmove.obj: memmove.c win32.h
mkdir.obj: mkdir.c win32.h
vsnprintf.obj: vsnprintf.c win32.h
strcasecmp.obj: strcasecmp.c win32.h
strncasecmp.obj: strncasecmp.c win32.h
strchr.obj: strchr.c win32.h
strdup.obj: strdup.c win32.h
strerror.obj: strerror.c win32.h
strftime.obj: strftime.c win32.h
strstr.obj: strstr.c win32.h
strtod.obj: strtod.c win32.h
strtol.obj: strtol.c win32.h
strtoul.obj: strtoul.c win32.h
nt.obj: nt.c win32.h
x68.obj: x68.c win32.h
os2.obj: os2.c win32.h
dl_os2.obj: dl_os2.c win32.h

# when I use -I., there is confliction at "OpenFile" 
# so, set . into environment varible "include"
win32.obj: win32.c win32.h

###
parse.obj: parse.c ruby.h config.h defines.h intern.h env.h node.h st.h regex.h util.h lex.c win32.h
###
array.obj: array.c ruby.h config.h defines.h intern.h win32.h
bignum.obj: bignum.c ruby.h config.h defines.h intern.h win32.h
class.obj: class.c ruby.h config.h defines.h intern.h node.h st.h win32.h
compar.obj: compar.c ruby.h config.h defines.h intern.h win32.h
dir.obj: dir.c ruby.h config.h defines.h intern.h win32.h
dln.obj: dln.c config.h defines.h dln.h win32.h
dmyext.obj: dmyext.c win32.h
enum.obj: enum.c ruby.h config.h defines.h intern.h win32.h
error.obj: error.c ruby.h config.h defines.h intern.h env.h win32.h
eval.obj: eval.c ruby.h config.h defines.h intern.h node.h env.h rubysig.h st.h dln.h win32.h
file.obj: file.c ruby.h config.h defines.h intern.h rubyio.h rubysig.h win32.h
gc.obj: gc.c ruby.h config.h defines.h intern.h rubysig.h st.h node.h env.h re.h regex.h win32.h
hash.obj: hash.c ruby.h config.h defines.h intern.h st.h rubysig.h util.h win32.h
inits.obj: inits.c ruby.h config.h defines.h intern.h win32.h
io.obj: io.c ruby.h config.h defines.h intern.h rubyio.h rubysig.h env.h win32.h
main.obj: main.c ruby.h config.h defines.h intern.h win32.h
marshal.obj: marshal.c ruby.h config.h defines.h intern.h rubyio.h st.h win32.h
prec.obj: prec.c ruby.h config.h defines.h intern.h win32.h
math.obj: math.c ruby.h config.h defines.h intern.h win32.h
numeric.obj: numeric.c ruby.h config.h defines.h intern.h win32.h
object.obj: object.c ruby.h config.h defines.h intern.h st.h win32.h
pack.obj: pack.c ruby.h config.h defines.h intern.h win32.h
process.obj: process.c ruby.h config.h defines.h intern.h rubysig.h st.h win32.h
random.obj: random.c ruby.h config.h defines.h intern.h win32.h
range.obj: range.c ruby.h config.h defines.h intern.h win32.h
re.obj: re.c ruby.h config.h defines.h intern.h re.h regex.h win32.h
regex.obj: regex.c config.h regex.h util.h win32.h
ruby.obj: ruby.c ruby.h config.h defines.h intern.h dln.h util.h win32.h
signal.obj: signal.c ruby.h config.h defines.h intern.h rubysig.h win32.h
sprintf.obj: sprintf.c ruby.h config.h defines.h intern.h win32.h
st.obj: st.c config.h st.h win32.h
string.obj: string.c ruby.h config.h defines.h intern.h re.h regex.h win32.h
struct.obj: struct.c ruby.h config.h defines.h intern.h win32.h
time.obj: time.c ruby.h config.h defines.h intern.h win32.h
util.obj: util.c ruby.h config.h defines.h intern.h util.h win32.h
variable.obj: variable.c ruby.h config.h defines.h intern.h env.h node.h st.h win32.h
version.obj: version.c ruby.h config.h defines.h intern.h version.h win32.h
@


1.11
log
@* instruby.rb: add dryrun mode.

* ext/extmk.rb (extmake): avoid Borland make's quirk behavior.

* lib/mkmf.rb (link_command): opt is not a makefile macro.

* bcc32/Makefile.sub ($(LIBRUBY_SO) $(LIBRUBY)): EXTOBJS were not
  linked.

* bcc32/Makefile.sub (ext/extinit.obj): missing.

* bcc32/Makefile.sub (TRY_LINK): options have to place before any
  non-option arguments.

* win32/Makefile.sub (TRY_LINK): need -link and -libpath options.

* bcc32/Makefile.sub, win32/Makefile.sub (RANLIB): logical
  operator never work with command.com.
@
text
@d492 1
a492 1
	$(RC) $(RFLAGS) -I. -I$(<D) $(iconinc) -I$(srcdir)win32 $(RFLAGS) -fo$@@ $(<:/=\)
@


1.10
log
@commit miss
@
text
@d113 1
a113 1
ARFLAGS = /a 
d140 1
d142 1
d290 1
a290 1
s,@@LDFLAGS@@,$(LDFLAGS),;t t
d325 1
a325 1
s,@@RANLIB@@,rem,;t t
d327 1
a327 1
s,@@ARFLAGS@@,$(ARFLAGS),;t t
d372 1
d395 1
a395 1
		$(AR) $(ARFLAGS)$@@ $(OBJS)
d400 1
a400 1
$(LIBRUBY_SO) $(LIBRUBY): $(LIBRUBY_A) dmyext.obj $(EXTOBJS) $(RUBYDEF) $(RUBY_SO_NAME).res
d402 1
a402 1
		$(LIBRUBY_LDSHARED) $(LIBRUBY_DLDFLAGS) dmyext.obj,$(LIBRUBY_SO),nul,$(LIBRUBY_A) $(LIBS),$(RUBYDEF),$(RUBY_SO_NAME).res
d408 1
a408 1
		$(MINIRUBY) $(srcdir)instruby.rb $(DESTDIR)
d500 3
@


1.9
log
@* configure.in (XCFLAGS): CFLAGS to comile ruby itself.

* configure.in (LIBEXT): suffix for static libraries.

* configure.in (LIBPATHFLAG): switch template to specify library
  path.

* configure.in (LINK_SO): command to link shared objects.

* configure.in (DEFFILE, ARCHFILE): miscellaneous system dependent
  files.

* configure.in (EXPORT_PREFIX): prefix to exported symbols on
  Windows.

* configure.in (COMMON_LIBS, COMMON_MACROS, COMMON_HEADERS):
  libraries, macros and headers used in common.

* configure.in (RUBYW_INSTALL_NAME, rubyw_install_name): GUI mode
  excutable name.

* Makefile.in (CFLAGS): append XCFLAGS.

* Makefile.in (PREP): miscellaneous system dependent files.

* Makefile.in (ruby.imp, ext/extinit.o): moved from ext/extmk.rb.

* Makefile.in (fake.rb): CROSS_COMPILING keeps building platform.

* Makefile.in (MAKEFILES): depend on *.in and config.status.

* Makefile.in (parse.c): replace "y.tab.c" with actual name for
  byacc.

* ext/extmk.rb, lib/mkmf.rb: integrated.

* ext/extmk.rb: propagate MFLAGS.

* ext/extmk.rb (extmake): make dummy Makefile to clean even if no
  Makefile is made.

* lib/mkmf.rb (older): accept multiple file names and Time
  objects.

* lib/mkmf.rb (xsystem): split and qoute.

* lib/mkmf.rb (cpp_include): make include directives.

* lib/mkmf.rb (try_func): try wheather specified function is
  available.

* lib/mkmf.rb (install_files): default to site-install.

* lib/mkmf.rb (checking_for): added.

* lib/mkmf.rb (find_executable0): just find executable file with
  no message.

* lib/mkmf.rb (create_header): output header file is variable.

* lib/mkmf.rb (create_makefile): separate sections.

* lib/mkmf.rb (init_mkmf): initialize global variables.

* win32/Makefile.sub, bcc32/Makefile.sub (CPP, AR): added.

* bcc32/Makefile.sub (ARCH): fixed to i386.

* win32/Makefile.sub, bcc32/Makefile.sub (miniruby): should not
  link EXTOBJS.

* ext/dl/extconf.rb: use try_cpp to cross compile.

* ext/dl/extconf.rb: not modify files in source directory.
@
text
@d111 1
a111 1
XCFLAGS = -DRUBY_EXPORT
d336 1
a336 1
s,@@CCDLFLAGS@@,,;t t
@


1.8
log
@* configure.in (OUTFLAG, CPPOUTFILE): moved from lib/mkmf.rb.
  check whether ${CPP} accepts the -o option.
* win32/Makefile.sub (OUTFLAG, CPPOUTFILE): ditto.
* bcc32/Makefile.sub (OUTFLAG, CPPOUTFILE): ditto.
* djgpp/config.sed (OUTFLAG, CPPOUTFILE): ditto.
* lib/mkmf.rb (OUTFLAG, CPPOUTFILE): use CONFIG.
  make easy to understand log.
* mkconfig.rb (val): should not strip.
@
text
@d4 2
d23 1
a23 1
RUBY_SO_NAME = rubybcc
d42 3
d51 4
d58 5
a62 1
!if !defined(PROCESSOR_ARCHITECTURE) || "$(PROCESSOR_ARCHITECTURE)" == "x86"
d71 1
a71 1
ARCH = i$(PROCESSOR_LEVEL)86
a81 1
OS = bccwin32
d90 1
a90 1
CFLAGS = -DNT=1 $(DEBUGFLAGS) $(OPTFLAGS) $(PROCESSOR_FLAG) -w-aus -w-par -w-pro
d96 1
a96 4
LDFLAGS = $(CFLAGS)
!endif
!ifndef XLDFLAGS
XLDFLAGS = 
d99 1
a99 1
RFLAGS = -r
d102 1
a102 1
EXTLIBS = # cw32.lib
d104 1
a104 1
LIBS = $(EXTLIBS)
d111 11
a121 5
LDSHARED = ilink32.exe -S:$(STACK)
LINK     = $(LDSHARED) -Tpe C0X32.OBJ
LINK_W   = $(LDSHARED) -Tpe C0W32.OBJ
LINK_SO  = $(LDSHARED) -Tpd C0D32.OBJ
LDOBJECTS = CW32.LIB IMPORT32.LIB $(MAINOBJ)
a122 1
DLDFLAGS = 
d129 1
a129 1
MINIRUBY=miniruby$(EXEEXT)
d185 1
a185 1
		@@.\miniruby$(EXEEXT) $(srcdir)ext/extmk.rb 
d195 2
a196 2
	@@echo Creating config.h
	type > $@@ &&|
d215 1
a215 1
/* \#define HAVE_UTIME_H 1     */
d279 3
a281 3
config.status: Makefile $(srcdir)bcc32/Makefile.sub $(MINIRUBY)
	@@echo Creating config.status
	@@$(MINIRUBY) -pe "~/@@CFLAGS@@/||$$_.sub!(/'$(CFLAGS)'/, '$$(CFLAGS)')" > $@@ &&|
d289 1
a289 1
s,@@LIBS@@,,;t t
d324 2
a325 1
s,@@AR@@,tlib -nologo,;t t
d334 1
a334 1
s,@@DLDFLAGS@@,$$(CFLAGS),;t t
d336 2
a337 2
s,@@CCDLFLAGS@@,-DIMPORT,;t t
s,@@LDSHARED@@,ilink32 -S:$(STACK) -Tpd,;t t
d340 1
d345 2
a346 2
s,@@LIBRUBY_LDSHARED@@,$(LIBRUBY_LDSHARED),;t t
s,@@LIBRUBY_DLDFLAGS@@,$(LIBRUBY_DLDFLAGS),;t t
d348 2
d361 10
d380 1
a380 10
#ext/extmk.rb:	$(srcdir)ext/extmk.rb.in config.status
#		@@echo Creating ext/extmk.rb
#		@@.\miniruby$(EXEEXT) $(srcdir)ext/configsub.rb \
#			-srcdir=$(srcdir) \
#			-install_name=$(RUBY_INSTALL_NAME) \
#			-so_name=$(RUBY_SO_NAME) \
#			-output=$@@ $(srcdir)ext/extmk.rb.in

miniruby$(EXEEXT):	$(OBJS) $(MAINOBJ) $(EXTOBJS) 
		@@echo $(EXTOBJS)
d382 1
a382 1
		$(LINK) $(LDOBJECTS) $(EXTOBJS) $(OBJS) $(LIBS),$@@
d385 1
a385 1
		$(LINK) $(LDOBJECTS),$@@,,$(LIBRUBYARG),,$(RUBY_INSTALL_NAME).res
d388 1
a388 1
		$(LINK_W) $(LDOBJECTS) $(WINMAINOBJ),$@@,,$(LIBRUBYARG),,$(RUBYW_INSTALL_NAME).res
d390 1
a390 1
$(LIBRUBY_A):	$(OBJS) dmyext.obj
d392 1
a392 3
		tlib $@@ /a @@&&|
$(OBJS) dmyext.obj
|
d394 2
a395 5
$(LIBRUBY):	$(LIBRUBY_SO)
		implib $@@ $(LIBRUBY_SO)

$(LIBRUBY_SO):	$(LIBRUBY_A) $(EXTOBJS) $(RUBYDEF) $(RUBY_SO_NAME).res
		$(LINK_SO) $(LDOBJECTS) $(EXTOBJS) $(LIBS),$@@,,$(LIBRUBY_A),$(RUBYDEF), $(RUBY_SO_NAME).res
d397 3
d402 1
a402 1
		.\miniruby$(EXEEXT) $(srcdir)bcc32/mkexports.rb -output=$@@ $(LIBRUBY_A)
d405 2
a406 1
		.\miniruby$(EXEEXT) $(srcdir)instruby.rb $(DESTDIR)
d423 1
a423 1
		@@-.\miniruby$(EXEEXT) $(srcdir)ext/extmk.rb clean
a445 1
		@@if exist pub.def del pub.def
d457 1
a457 1
		@@-.\miniruby$(EXEEXT) $(srcdir)ext/extmk.rb distclean
d464 1
a464 1
		@@.\miniruby$(EXEEXT) $(srcdir)rubytest.rb
d467 1
a467 1
		@@.\miniruby$(EXEEXT) $(srcdir)mkconfig.rb -srcdir=$(srcdir) \
d472 1
a472 1
		@@.\miniruby$(EXEEXT) $(srcdir)win32/resource.rb \
d476 1
a476 1
			. $(icondirs) $(srcdir)/win32
d486 1
a486 1
	$(CC) $(CFLAGS) -I. $(CPPFLAGS) -c $(<:/=\)
d489 1
a489 1
	$(RC) -I. -I$(<D) $(iconinc) -I$(srcdir)win32 $(RFLAGS) -fo$@@ $(<:/=\)
@


1.7
log
@* bcc32/setup.mak    : Control of a message.
* bcc32/makefile.sub : include resource.
@
text
@d341 2
@


1.6
log
@* bcc32/Makefile.sub: remove unnecessary `.dll' from filename of
  dll's resource file.

* cygwin/GNUmakefile.in: ditto. [ruby-dev:17103]

* win32/Makefile.sub: ditto. [ruby-dev:17103]

* win32/resource.rb: ditto. [ruby-dev:17103]
@
text
@d41 1
a41 1
RC = brc32
d102 5
a106 4
LDSHARED = $(CC) -lS:$(STACK)
LINK     = $(LDSHARED) -WC
LINK_W   = $(LDSHARED) -W
LINK_SO  = $(LDSHARED) -WD
d361 1
a361 1
		$(LINK) -e$@@ $(MAINOBJ) $(EXTOBJS) $(OBJS) $(LIBS)
d363 2
a364 2
$(PROGRAM):	$(MAINOBJ) $(LIBRUBY_SO) $(*:.exe=.res)
		$(LINK) -e$@@ $(MAINOBJ) $(LIBRUBYARG)
d366 2
a367 2
$(WPROGRAM):	$(MAINOBJ) $(WINMAINOBJ) $(LIBRUBY_SO) $(*:.exe=.res)
		$(LINK_W) -e$@@ $(MAINOBJ) $(WINMAINOBJ) $(LIBRUBYARG)
d378 3
a380 2
$(LIBRUBY_SO):	$(LIBRUBY_A) $(EXTOBJS) $(RUBYDEF) $(*:.dll=.res)
		$(LINK_SO) -e$@@ $(MAINOBJ) $(EXTOBJS) $(LIBRUBY_A) $(LIBS)
d400 1
@


1.5
log
@* configure.in: modify program_prefix only if specified
  --program-prefix.

* configure.in: don't generate ext/extmk.rb.

* Makefile.in: execute directly $(srcdir)/ext/extmk.rb.
  remove -Cext option, "Dir::chdir 'ext'" in ext/extmk.rb.

* {win32,bccwin32}/Makefile.sub: ditto.

* instruby.rb: ditto.

* ext/extmk.rb: renamed from ext/extmk.rb.in.

* lib/mkmf.rb (module Logging): create log files (mkmf.log)
  in each extension module directories.

* ext/extmk.rb: ditto.

* lib/mkmf.rb (macro_defined?): new method.

* ext/.cvsignore: remove extmk.rb.

* ext/*/.cvsignore: add "*.def".
@
text
@d426 1
a426 1
		@@if exist $(LIBRUBY_SO).rc del $(LIBRUBY_SO).rc
d449 1
a449 1
$(RUBY_INSTALL_NAME).rc $(RUBYW_INSTALL_NAME).rc $(LIBRUBY_SO).rc: rbconfig.rb
d453 1
a453 1
			-so_name=$(LIBRUBY_SO) \
@


1.4
log
@bcc32/configure.bat : Control of a message.
bcc32/makefile.sub  : @@(sitearch) typo.
ext/extmk.rb.in     : [bccwin32] libdir is added to a library path.
lib/mkmf.rb         : ditto.
@
text
@d168 1
a168 1
all:		miniruby$(EXEEXT) rbconfig.rb ext/extmk.rb \
d170 1
a170 1
		@@.\miniruby$(EXEEXT) -Cext extmk.rb 
d327 1
d349 7
a355 7
ext/extmk.rb:	$(srcdir)ext/extmk.rb.in config.status
		@@echo Creating ext/extmk.rb
		@@.\miniruby$(EXEEXT) $(srcdir)ext/configsub.rb \
			-srcdir=$(srcdir) \
			-install_name=$(RUBY_INSTALL_NAME) \
			-so_name=$(RUBY_SO_NAME) \
			-output=$@@ $(srcdir)ext/extmk.rb.in
d400 1
a400 1
		@@-.\miniruby$(EXEEXT) -Cext extmk.rb clean
a405 1
		@@if exist ext\extmk.rb del ext\extmk.rb
d435 1
a435 1
		@@-.\miniruby$(EXEEXT) -Cext extmk.rb distclean
@


1.3
log
@* bcc32/MakeFile.sub (sitearch): add.
@
text
@d340 1
a340 1
s,@@sitearch@@,$(ARCH)-$(RT),;t t
@


1.2
log
@* bcc32/Makefile.sub: set PROCESSOR_LEVEL to 6 if it's too big value.

* win32/Makefile.sub: ditto.
@
text
@d340 1
@


1.1
log
@new platform [bccwin32] merged.
@
text
@d53 3
@
