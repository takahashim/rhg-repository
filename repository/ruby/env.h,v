head	1.10;
access;
symbols
	v1_6_7:1.5
	v1_6_6:1.5
	v1_6_5:1.5
	v1_6_4:1.5
	v1_7_1:1.7
	v1_6_4_preview4:1.5
	v1_6_4_preview3:1.5
	v1_6_4_preview2:1.5
	v1_6_4_preview1:1.5
	v1_6_3:1.5
	ruby_m17n:1.5.0.4
	ruby_1_6:1.5.0.2
	v1_6_2:1.5
	v1_6_1:1.5
	v1_6_0:1.4
	v1_4_6:1.2
	v1_4_5:1.2
	v1_4_4:1.2
	ruby_1_4_3:1.2
	ruby1_4_3:1.2
	v1_4_3:1.2
	v1_5_0:1.2
	ruby_1_4_3_pre1:1.2
	ruby_1_4:1.2.0.2
	v1_4_2:1.2
	v1_4_1:1.2
	v1_4_0:1.2
	v1_3_7:1.1.1.3.2.2
	v1_3_6_repack:1.1.1.3.2.1
	v1_3_6:1.1.1.3.2.1
	v1_3_5:1.1.1.3.2.1
	v1_2_6repack:1.1.1.2.2.2
	v1_3_4_990625:1.1.1.3.2.1
	v1_3_4_990624:1.1.1.3.2.1
	v1_2_6:1.1.1.2.2.2
	v1_3_4_990611:1.1.1.3.2.1
	v1_3_4_990531:1.1.1.3.2.1
	v1_3_3_990518:1.1.1.3.2.1
	v1_3_3_990513:1.1.1.3.2.1
	v1_3_3_990507:1.1.1.3.2.1
	v1_2_5:1.1.1.2.2.2
	v1_2_4:1.1.1.2.2.2
	v1_3_1_990225:1.1.1.3.2.1
	v1_3_1_990224:1.1.1.3.2.1
	v1_3_1_990215:1.1.1.3.2.1
	v1_3_1_990212:1.1.1.3.2.1
	v1_3_1_990210:1.1.1.3.2.1
	v1_3_1_:1.1.1.3.2.1
	v1_3_1_990209:1.1.1.3.2.1
	v1_3_1_990205:1.1.1.3.2.1
	v1_3_1_990203:1.1.1.3.2.1
	v1_3_1_990201:1.1.1.3.2.1
	v1_3_1"_990201:1.1.1.3.2.1
	v1_3_1_990128:1.1.1.3
	v1_3_1_990127:1.1.1.3
	v1_3_1_990126:1.1.1.3
	ruby_1_3:1.1.1.3.0.2
	v1_2_2:1.1.1.2.2.2
	RUBY_1_3:1.1.1.3
	v1_2_2_pr1:1.1.1.2.2.2
	v1_2_1repack:1.1.1.2.2.2
	v1_2_1:1.1.1.2.2.2
	v1_2_stable:1.1.1.2.2.2
	v1_1d1:1.1.1.2.2.2.2.1
	v1_1d0:1.1.1.2.2.2.2.1
	v1_1c9_1:1.1.1.2.2.2
	v1_1c9:1.1.1.2.2.2
	v1_1c8:1.1.1.2.2.2
	v1_1c7:1.1.1.2.2.2
	v1_1c6:1.1.1.2.2.2
	v1_1d-start:1.1.1.2.2.2.2.1
	v1_1c5:1.1.1.2.2.2
	v1_1dev:1.1.1.2.2.2.0.2
	v1_1c4:1.1.1.2.2.2
	v1_1c3:1.1.1.2.2.2
	v1_1c2:1.1.1.2.2.2
	v1_1c1:1.1.1.2.2.2
	v1_1c0:1.1.1.2.2.2
	v1_1b9_31:1.1.1.2.2.2
	v1_1b9_30:1.1.1.2.2.2
	v1_1b9_28:1.1.1.2.2.2
	v1_1b9_27:1.1.1.2.2.2
	v1_1b9_26:1.1.1.2.2.2
	r1_1b9_25:1.1.1.2.2.2
	r1_1b9_24:1.1.1.2.2.2
	v1_1b9_23:1.1.1.2.2.2
	v1_1b9_22:1.1.1.2.2.2
	v1_1b9_20:1.1.1.2.2.2
	v1_1b9_18:1.1.1.2.2.2
	v1_1b9_16:1.1.1.2.2.2
	v1_1b9_15:1.1.1.2.2.2
	v1_1b9_13:1.1.1.2.2.2
	v1_1b9_12:1.1.1.2.2.2
	v1_1b9_11:1.1.1.2.2.2
	v1_1b9_08:1.1.1.2.2.2
	v1_1b9_07:1.1.1.2.2.2
	r1_1b9:1.1.1.2.2.1
	v1_1b8:1.1.1.2.2.1
	v1_1b7:1.1.1.2.2.1
	v1_1b6:1.1.1.2.2.1
	v1_1r:1.1.1.2.0.2
	v1_1:1.1.1.2
	v1_0r:1.1.1.1.0.2
	v1_0:1.1.1.1
	RUBY:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2002.08.15.11.49.39;	author nobu;	state Exp;
branches;
next	1.9;

1.9
date	2002.08.12.07.39.07;	author matz;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.14.06.22.25;	author matz;	state Exp;
branches;
next	1.7;

1.7
date	2001.02.14.05.51.57;	author matz;	state Exp;
branches;
next	1.6;

1.6
date	2001.02.02.11.38.10;	author matz;	state Exp;
branches;
next	1.5;

1.5
date	2000.08.31.08.08.39;	author matz;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.15.09.04.27;	author matz;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.01.09.41.13;	author matz;	state Exp;
branches;
next	1.2;

1.2
date	99.08.13.05.45.04;	author matz;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	98.01.16.12.13.06;	author matz;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.16.12.13.06;	author matz;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.01.16.12.19.09;	author matz;	state Exp;
branches
	1.1.1.2.2.1;
next	1.1.1.3;

1.1.1.3
date	99.01.20.04.59.22;	author matz;	state Exp;
branches
	1.1.1.3.2.1;
next	;

1.1.1.3.2.1
date	99.02.01.07.34.53;	author matz;	state Exp;
branches;
next	1.1.1.3.2.2;

1.1.1.3.2.2
date	99.08.06.06.48.10;	author matz;	state Exp;
branches;
next	1.1.1.3.2.3;

1.1.1.3.2.3
date	99.08.13.05.17.32;	author matz;	state Exp;
branches;
next	;

1.1.1.2.2.1
date	98.01.16.12.35.43;	author matz;	state Exp;
branches;
next	1.1.1.2.2.2;

1.1.1.2.2.2
date	98.03.13.09.04.28;	author matz;	state Exp;
branches
	1.1.1.2.2.2.2.1;
next	;

1.1.1.2.2.2.2.1
date	98.09.08.07.08.38;	author matz;	state Exp;
branches;
next	;

1.2.2.1
date	2000.08.15.08.57.42;	author matz;	state Exp;
branches;
next	;


desc
@@


1.10
log
@* eval.c (ruby_current_node) : added to set sourceline on demand.

* eval.c (error_pos, error_print, rb_longjmp, assign): set source
  file/line.

* eval.c (rb_eval): store current node instead of file/line, and
  preserve it at return.

* eval.c (module_setup): ditto.

* eval.c (struct thread): store node instead of file/line.

* eval.c (rb_thread_raise): ditto.

* intern.h (ruby_current_node): added.

* intern.h (ruby_set_current_source): added.

* parse.y (stmt, arg): not fix position of assignment.

* parse.y (node_assign): ditto.

* parse.y (yycompile): clear current node.
@
text
@/**********************************************************************

  env.h -

  $Author: matz $
  $Date: 2002/08/12 07:39:07 $
  created at: Mon Jul 11 11:53:03 JST 1994

  Copyright (C) 1993-2002 Yukihiro Matsumoto

**********************************************************************/

#ifndef ENV_H
#define ENV_H

extern struct FRAME {
    VALUE self;
    int argc;
    VALUE *argv;
    ID last_func;
    ID orig_func;
    VALUE last_class;
    VALUE cbase;
    struct FRAME *prev;
    struct FRAME *tmp;
    struct RNode *node;
    int iter;
    int flags;
} *ruby_frame;

void rb_gc_mark_frame _((struct FRAME *));

#define FRAME_ALLOCA 0
#define FRAME_MALLOC 1

extern struct SCOPE {
    struct RBasic super;
    ID *local_tbl;
    VALUE *local_vars;
    int flags;
} *ruby_scope;

#define SCOPE_ALLOCA  0
#define SCOPE_MALLOC  1
#define SCOPE_NOSTACK 2
#define SCOPE_DONT_RECYCLE 4

extern int ruby_in_eval;

extern VALUE ruby_class;

struct RVarmap {
    struct RBasic super;
    ID id;
    VALUE val;
    struct RVarmap *next;
};
extern struct RVarmap *ruby_dyna_vars;

#endif /* ENV_H */
@


1.9
log
@* bignum.c (rb_big_cmp): use dbl2big() for Floats, instead of
  big2dbl().

* bignum.c (Init_Bignum): rb_big_zero_p() removed.  There may be
  Bignum zero.

* eval.c (rb_call0): new argument added for original method name.
  preserve original method name in frame->orig_func.

* eval.c (is_defined): use frame->orig_func, not last_func.

* eval.c (rb_eval): ditto.

* eval.c (method_call): supply data->oid also to rb_call0().

* object.c (rb_class_allocate_instance): call rb_obj_alloc() when
  called from alias, thus invoke original "allocate".

* eval.c (remove_method): removing allocate from classes should
  cause NameError.

* hash.c (rb_hash_equal): should check default values.

* ext/socket/socket.c (s_recvfrom): update RSTRING len.
@
text
@d6 1
a6 1
  $Date: 2002/05/14 06:22:25 $
d26 1
a26 2
    char *file;
    int line;
@


1.8
log
@* eval.c (rb_clear_cache_by_class): new function.

* eval.c (set_method_visibility): should have clear cache forq
  updated visibility.

* numeric.c (flo_to_s): default format precision to be "%.16g".

* util.c (ruby_strtod): use own strtod(3) implementation to avoid
  locale hell.  Due to this change "0xff".to_f no longer returns 255.0

* eval.c (avalue_to_yvalue): new function to distinguish yvalue
  (no-arg == Qundef) from svalue (no-arg == Qnil).

* eval.c (rb_yield_0): use avalue_to_yvalue().

* eval.c (assign): warn if val == Qundef where it means rhs is
  void (e.g. yield without value or call without argument).

* parse.y (value_expr): need not to warn for WHILE and UNTIL,
  since they can have return value (via valued break).
@
text
@d6 1
a6 1
  $Date: 2001/02/14 05:51:57 $
d21 1
@


1.7
log
@* dir.c (dir_s_glob): supprt backslash escape of metacharacters
  and delimiters.

* dir.c (remove_backslases): remove backslashes from path before
  calling stat(2).

* dir.c (dir_s_glob): call rb_yield directly (via push_pattern) if
  block is given to the method.

* dir.c (push_pattern): do not call rb_ary_push; yield directly.

* eval.c (blk_copy_prev): reduced ALLOC_N too much.

* eval.c (frame_dup): ditto.
@
text
@d6 1
a6 1
  $Date: 2001/02/02 11:38:10 $
d9 1
a9 1
  Copyright (C) 1993-2001 Yukihiro Matsumoto
@


1.6
log
@* array.c (rb_ary_sort_bang): returns self, even if its length is
  less than 2.

* eval.c (POP_VARS): propagate DVAR_DONT_RECYCLE, if
  SCOPE_DONT_RECYCLE of ruby_scope is set.
@
text
@d6 1
a6 1
  $Date: 2000/08/31 08:08:39 $
d9 1
a9 1
  Copyright (C) 1993-2000 Yukihiro Matsumoto
@


1.5
log
@000831
@
text
@d6 1
a6 1
  $Date: 2000/08/15 09:04:27 $
d40 1
a40 1
    int flag;
@


1.4
log
@matz
@
text
@d6 1
a6 1
  $Date: 2000/05/01 09:41:13 $
d46 1
@


1.3
log
@2000-05-01
@
text
@d6 1
a6 1
  $Date: 1999/08/13 05:45:04 $
d28 1
d32 3
@


1.2
log
@1.4.0
@
text
@d1 1
a1 1
/************************************************
d6 1
a6 1
  $Date: 1999/08/13 05:17:32 $
d9 4
a12 1
************************************************/
@


1.2.2.1
log
@matz
@
text
@d6 1
a6 1
  $Date: 1999/08/13 05:45:04 $
a24 1
    int flags;
a27 3

#define FRAME_ALLOCA 0
#define FRAME_MALLOC 1
@


1.1
log
@Initial revision
@
text
@d6 1
a6 2
  $Revision: 1.8 $
  $Date: 1996/12/25 10:42:30 $
d14 1
d18 1
a18 1
    struct RClass *last_class;
d21 1
d25 3
a27 1
} *the_frame;
d34 1
a34 1
} *the_scope;
d40 1
a40 1
extern int rb_in_eval;
d42 1
a42 1
extern struct RClass *the_class;
d50 1
a50 1
extern struct RVarmap *the_dyna_vars;
@


1.1.1.1
log
@
@
text
@@


1.1.1.2
log
@*** empty log message ***
@
text
@d18 1
a18 1
    VALUE last_class;
a25 2
void gc_mark_frame _((struct FRAME *));

d39 1
a39 1
extern VALUE the_class;
@


1.1.1.3
log
@ruby 1.3 cycle
@
text
@d6 2
a7 2
  $Revision: 1.1.1.2.2.2.2.1 $
  $Date: 1998/09/08 07:08:38 $
a14 1
    VALUE self;
d24 1
a24 1
} *ruby_frame;
d26 1
a26 1
void rb_gc_mark_frame _((struct FRAME *));
d33 1
a33 1
} *ruby_scope;
d41 1
a41 1
extern VALUE ruby_class;
d49 1
a49 1
extern struct RVarmap *ruby_dyna_vars;
@


1.1.1.3.2.1
log
@990201
@
text
@d6 2
a7 2
  $Revision: 1.1.1.3 $
  $Date: 1999/01/20 04:59:22 $
d40 1
a40 1
extern int ruby_in_eval;
@


1.1.1.3.2.2
log
@990806
@
text
@d6 2
a7 2
  $Revision: 1.1.1.3.2.1 $
  $Date: 1999/02/01 07:34:53 $
a21 1
    struct FRAME *tmp;
@


1.1.1.3.2.3
log
@pre 1.4.0
@
text
@d6 2
a7 1
  $Date: 1999/08/06 06:48:10 $
@


1.1.1.2.2.1
log
@*** empty log message ***
@
text
@d6 2
a7 2
  $Revision: 1.1.1.2 $
  $Date: 1998/01/16 04:14:44 $
@


1.1.1.2.2.2
log
@1.1b9_02
@
text
@d6 2
a7 2
  $Revision: 1.1.1.2.2.1 $
  $Date: 1998/01/16 12:35:43 $
a14 1
    VALUE self;
@


1.1.1.2.2.2.2.1
log
@1.1d series
@
text
@d6 2
a7 2
  $Revision: 1.1.1.2.2.2 $
  $Date: 1998/03/13 09:04:28 $
d25 1
a25 1
} *ruby_frame;
d27 1
a27 1
void rb_gc_mark_frame _((struct FRAME *));
d34 1
a34 1
} *ruby_scope;
d42 1
a42 1
extern VALUE ruby_class;
d50 1
a50 1
extern struct RVarmap *ruby_dyna_vars;
@
