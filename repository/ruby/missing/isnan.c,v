head	1.4;
access;
symbols
	v1_6_7:1.3
	v1_6_6:1.3
	v1_6_5:1.3
	v1_6_4:1.3
	v1_7_1:1.4
	v1_6_4_preview4:1.3
	v1_6_4_preview3:1.3
	v1_6_4_preview2:1.3
	v1_6_4_preview1:1.3
	v1_6_3:1.3
	ruby_m17n:1.3.0.4
	ruby_1_6:1.3.0.2
	v1_6_2:1.3
	v1_6_1:1.3
	v1_6_0:1.3
	v1_4_6:1.2.2.1
	v1_4_5:1.2.2.1
	v1_4_4:1.2.2.1
	ruby_1_4_3:1.2
	ruby1_4_3:1.2
	v1_4_3:1.2
	v1_5_0:1.2
	ruby_1_4_3_pre1:1.2
	ruby_1_4:1.2.0.2
	v1_4_2:1.2
	v1_4_1:1.2
	v1_4_0:1.2
	v1_3_7:1.1.2.2
	v1_3_6_repack:1.1.2.2
	v1_3_6:1.1.2.2
	v1_3_5:1.1.2.2
	v1_3_4_990625:1.1.2.1
	v1_3_4_990624:1.1.2.1
	v1_3_4_990611:1.1.2.1
	v1_3_4_990531:1.1.2.1
	v1_3_3_990518:1.1.2.1
	v1_3_3_990513:1.1.2.1
	v1_3_3_990507:1.1.2.1
	ruby_1_3:1.1.0.2;
locks; strict;
comment	@ * @;


1.4
date	2001.03.06.08.17.18;	author matz;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.17.08.37.53;	author matz;	state Exp;
branches;
next	1.2;

1.2
date	99.08.13.05.45.18;	author matz;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	99.04.27.02.56.30;	author matz;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	99.04.27.02.56.30;	author matz;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	99.07.15.07.59.59;	author matz;	state Exp;
branches;
next	;

1.2.2.1
date	2000.01.17.08.24.21;	author matz;	state Exp;
branches;
next	;


desc
@@


1.4
log
@* parse.y (primary): rescue and ensure clauses should be allowed
  to appear in singleton method body.
@
text
@/* public domain rewrite of isnan(3) */

#ifdef _MSC_VER

#include <float.h>
int
isnan(n)
  double n;
{
  return _isnan(n);
}

#else

static int double_ne();

int
isnan(n)
  double n;
{
  return double_ne(n, n);
}

static
int
double_ne(n1, n2)
  double n1, n2;
{
  return n1 != n2;
}
#endif
@


1.3
log
@2000-01-17
@
text
@d1 2
@


1.2
log
@1.4.0
@
text
@d1 12
d29 1
@


1.2.2.1
log
@2000-01-17
@
text
@a0 12
#ifdef _MSC_VER

#include <float.h>
int
isnan(n)
  double n;
{
  return _isnan(n);
}

#else

a16 1
#endif
@


1.1
log
@file isnan.c was initially added on branch ruby_1_3.
@
text
@d1 16
@


1.1.2.1
log
@better AIX support
@
text
@a0 18
static int double_ne();

int
isnan(n)
  double n;
{
  return double_ne(n, n);
}

static
int
double_ne(n1, n2)
  double n1, n2;
{
  return n1 != n2;
}


@


1.1.2.2
log
@990715
@
text
@d17 2
@


