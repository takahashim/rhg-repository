head	1.3;
access;
symbols
	v1_6_7:1.2
	v1_6_6:1.2
	v1_6_5:1.2
	v1_6_4:1.2
	v1_7_1:1.3
	v1_6_4_preview4:1.2
	v1_6_4_preview3:1.2
	v1_6_4_preview2:1.2
	v1_6_4_preview1:1.2
	v1_6_3:1.2
	ruby_m17n:1.2.0.6
	ruby_1_6:1.2.0.4
	v1_6_2:1.2
	v1_6_1:1.2
	v1_6_0:1.2
	v1_4_6:1.2
	v1_4_5:1.2
	v1_4_4:1.2
	ruby_1_4_3:1.2
	ruby1_4_3:1.2
	v1_4_3:1.2
	v1_5_0:1.2
	ruby_1_4_3_pre1:1.2
	ruby_1_4:1.2.0.2
	v1_4_2:1.2
	v1_4_1:1.2
	v1_4_0:1.2
	v1_3_7:1.1.2.4
	v1_3_6_repack:1.1.2.4
	v1_3_6:1.1.2.4
	v1_3_5:1.1.2.4
	v1_3_4_990625:1.1.2.3
	v1_3_4_990624:1.1.2.2
	v1_3_4_990611:1.1.2.1
	v1_3_4_990531:1.1.2.1
	v1_3_3_990518:1.1.2.1
	v1_3_3_990513:1.1.2.1
	v1_3_3_990507:1.1.2.1
	ruby_1_3:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2001.03.06.08.17.18;	author matz;	state Exp;
branches;
next	1.2;

1.2
date	99.08.13.05.45.18;	author matz;	state Exp;
branches;
next	1.1;

1.1
date	99.04.27.02.56.30;	author matz;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	99.04.27.02.56.30;	author matz;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	99.06.24.04.24.08;	author matz;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	99.06.25.09.02.52;	author matz;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	99.07.15.07.59.59;	author matz;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* parse.y (primary): rescue and ensure clauses should be allowed
  to appear in singleton method body.
@
text
@/* public domain rewrite of isinf(3) */

#ifdef __osf__

#define _IEEE 1
#include <nan.h>

int
isinf(n)
    double n;
{
        if (IsNANorINF(n) && IsINF(n)) {
                return 1;
        } else {
                return 0;
        }
}

#else

#include "config.h"
#ifdef HAVE_STRING_H
# include <string.h>
#else
# include <strings.h>
#endif

static double zero()	{ return 0.0; }
static double one()	{ return 1.0; }
static double inf()	{ return one() / zero(); }

int
isinf(n)
    double n;
{
    static double pinf = 0.0;
    static double ninf = 0.0;

    if (pinf == 0.0) {
	pinf = inf();
	ninf = -pinf;
    }
    return memcmp(&n, &pinf, sizeof n) == 0
	|| memcmp(&n, &ninf, sizeof n) == 0;
}
#endif
@


1.2
log
@1.4.0
@
text
@d1 2
@


1.1
log
@file isinf.c was initially added on branch ruby_1_3.
@
text
@d1 44
@


1.1.2.1
log
@better AIX support
@
text
@a0 18
static double zero()	{ return 0.0; }
static double one()	{ return 1.0; }
static double inf()	{ return one() / zero(); }

int
isinf(n)
    double n;
{
    static double pinf = 0.0;
    static double ninf = 0.0;

    if (pinf == 0.0) {
	pinf = inf();
	ninf = -pinf;
    }
    return memcmp(&n, &pinf, sizeof n) == 0
	|| memcmp(&n, &ninf, sizeof n) == 0;
}
@


1.1.2.2
log
@990624
@
text
@a0 6
#ifdef HAVE_STRING_H
# include <string.h>
#else
# include <strings.h>
#endif

@


1.1.2.3
log
@990625
@
text
@a0 1
#include "config.h"
@


1.1.2.4
log
@990715
@
text
@a0 18
#ifdef __osf__

#define _IEEE 1
#include <nan.h>

int
isinf(n)
    double n;
{
        if (IsNANorINF(n) && IsINF(n)) {
                return 1;
        } else {
                return 0;
        }
}

#else

a25 1
#endif
@


