head	1.2;
access;
symbols
	v1_6_3:1.2
	ruby_1_6:1.2.0.2
	v1_2_6repack:1.1.1.1.2.2
	v1_2_6:1.1.1.1.2.2
	v1_1d1:1.1.1.1.2.2
	v1_1d0:1.1.1.1.2.2
	v1_1c6:1.1.1.1.2.2
	gtk_012:1.1.1.1.2.2
	v1_1d-start:1.1.1.1.2.2
	v1_1dev:1.1.1.1.2.2.0.2
	v1_1r:1.1.1.1.0.2
	v1_1:1.1.1.1
	RUBY:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.08.13.05.37.48;	author matz;	state dead;
branches;
next	1.1;

1.1
date	98.01.16.12.19.15;	author matz;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.16.12.19.15;	author matz;	state Exp;
branches
	1.1.1.1.2.1;
next	;

1.1.1.1.2.1
date	98.01.19.05.08.24;	author matz;	state Exp;
branches;
next	1.1.1.1.2.2;

1.1.1.1.2.2
date	98.04.24.09.33.29;	author matz;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove marshal/gtk/kconv
@
text
@require 'gtk'

window = Gtk::Window::new(Gtk::WINDOW_TOPLEVEL)
window.set_title("buttons")
window.border_width(0)

box1 = Gtk::VBox::new(FALSE, 0)
window.add(box1)
box1.show

table = Gtk::Table::new(3, 3, FALSE)
table.set_row_spacings(5)
table.set_col_spacings(5)
table.border_width(10)
box1.pack_start(table, TRUE, TRUE, 0)
table.show

button = []
0.upto(8) do |i|
  button.push Gtk::Button::new("button"+(i+1))
end
0.upto(8) do |i|
  button[i].signal_connect("clicked") do |w|
    if button[i+1].visible?
      button[i+1].hide
    else
      button[i+1].show
    end
  end
  button[i].show
end
table.attach(button[0], 0, 1, 0, 1, nil, nil, 0, 0)
table.attach(button[1], 1, 2, 1, 2, nil, nil, 0, 0)
table.attach(button[2], 2, 3, 2, 3, nil, nil, 0, 0)
table.attach(button[3], 0, 1, 2, 3, nil, nil, 0, 0)
table.attach(button[4], 2, 3, 0, 1, nil, nil, 0, 0)
table.attach(button[5], 1, 2, 2, 3, nil, nil, 0, 0)
table.attach(button[6], 1, 2, 0, 1, nil, nil, 0, 0)
table.attach(button[7], 2, 3, 1, 2, nil, nil, 0, 0)
table.attach(button[8], 0, 1, 1, 2, nil, nil, 0, 0)

separator = Gtk::HSeparator::new()
box1.pack_start(separator, FALSE, TRUE, 0)
separator.show

box2 = Gtk::VBox::new(FALSE, 10)
box2.border_width(10)
box1.pack_start(box2, FALSE, TRUE, 0)
box2.show

close = Gtk::Button::new("close")
close.signal_connect("clicked") do
  window.destroy
  exit
end
box2.pack_start(close, TRUE, TRUE, 0)
close.set_flags(Gtk::CAN_DEFAULT);
close.grab_default
close.show

window.show

Gtk::main()
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@
@
text
@@


1.1.1.1.2.1
log
@Mon Jan 19 14:06:13 JST 1998
@
text
@d24 2
a25 3
    j = (i+1)%9
    if button[j].visible?
      button[j].hide
d27 1
a27 1
      button[j].show
@


1.1.1.1.2.2
log
@gtk/nested local variables
@
text
@d20 1
a20 1
  button.push Gtk::Button::new("button"+(i+1).to_s)
a23 1
    p [i]
@

