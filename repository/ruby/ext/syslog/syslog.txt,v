head	1.2;
access;
symbols
	v1_6_7:1.1.2.2
	v1_6_6:1.1.2.1
	ruby_1_6:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2002.02.25.12.13.30;	author knu;	state Exp;
branches;
next	1.1;

1.1
date	2001.11.26.12.00.40;	author knu;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.12.01.14.23.57;	author knu;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.02.25.12.56.23;	author knu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* ext/syslog/syslog.c: Merge from rough.  Turn Syslog into a
  module keeping backward compatibility intact.
@
text
@.\" syslog.txt -  -*- Indented-Text -*-
$RoughId: syslog.txt,v 1.18 2002/02/25 08:20:14 knu Exp $
$Id: syslog.txt,v 1.1 2001/11/26 12:00:40 knu Exp $

UNIX Syslog extension for Ruby
Amos Gouaux, University of Texas at Dallas
<amos+ruby@@utdallas.edu>
&
Akinori MUSHA
<knu@@ruby-lang.org>

** Syslog(Module)

Included Modules: Syslog::Constants

require 'syslog'

A Simple wrapper for the UNIX syslog system calls that might be handy
if you're writing a server in Ruby.  For the details of the syslog(8)
architecture and constants, see the syslog(3) manual page of your
platform.

Module Methods:

   open(ident = $0, logopt = Syslog::LOG_PID | Syslog::LOG_CONS,
		facility = Syslog::LOG_USER) [{ |syslog| ... }]

	Opens syslog with the given options and returns the module
	itself.  If a block is given, calls it with an argument of
	itself.  If syslog is already opened, raises RuntimeError.

	Example:
	  Syslog.open('ftpd', Syslog::LOG_PID | Syslog::LOG_NDELAY,
			      Syslog::LOG_FTP)

   open!(ident = $0, logopt = Syslog::LOG_PID | Syslog::LOG_CONS,
		facility = Syslog::LOG_USER)
   reopen(ident = $0, logopt = Syslog::LOG_PID | Syslog::LOG_CONS,
		facility = Syslog::LOG_USER)

	Same as open, but does a close first.

   opened?

	Returns true if syslog opened, otherwise false.

   ident
   options
   facility

	Returns the parameters given in the last open, respectively.
	Every call of Syslog::open resets these values.

   log(pri, message, ...)

	Writes message to syslog.

	Example:
	  Syslog.log(Syslog::LOG_CRIT, "the sky is falling in %d seconds!", 10)

   crit(message, ...)
   emerg(message, ...)
   alert(message, ...)
   err(message, ...)
   warning(message, ...)
   notice(message, ...)
   info(message, ...)
   debug(message, ...)

	These are shortcut methods of Syslog::log().  The lineup may
	vary depending on what priorities are defined on your system.

	Example:
	  Syslog.crit("the sky is falling in %d seconds!", 5)
 
   mask
   mask=(mask)

	Returns or sets the log priority mask.  The value of the mask
	is persistent and will not be reset by Syslog::open or
	Syslog::close.

	Example:
	  Syslog.mask = Syslog::LOG_UPTO(Syslog::LOG_ERR)

   close 

	Closes syslog.

   inspect

	Returns the "inspect" string of the Syslog module.

   instance

	Returns the module itself. (Just for backward compatibility)

   LOG_MASK(pri)

	Creates a mask for one priority.

   LOG_UPTO(pri)

	Creates a mask for all priorities up to pri.

** Syslog::Constants(Module)

require 'syslog'
include Syslog::Constants

This module includes the LOG_* constants available on the system.

Module Methods:

   LOG_MASK(pri)

	Creates a mask for one priority.

   LOG_UPTO(pri)

	Creates a mask for all priorities up to pri.
@


1.1
log
@Import the "syslog" module from the rough ruby project.  This module
provides the interface to the UNIX system logger (syslog).
@
text
@d2 2
a3 2
$RoughId: syslog.txt,v 1.15 2001/11/25 21:21:23 knu Exp $
$Id$
d12 1
a12 1
** Syslog(Class)
d14 1
a14 3
Superclass: Object

Mix-ins: Syslog::Constants
d23 1
a23 1
Class Methods:
d28 3
a30 4
	Opens syslog with the given options and returns the singleton
	object of the Syslog class.  If a block is given, calls it
	with an argument of the object.  If syslog is already opened,
	raises RuntimeError.
d33 2
a34 22
	  sl = Syslog.open('ftpd', Syslog::LOG_PID | Syslog::LOG_NDELAY,
			Syslog::LOG_FTP)

   instance

	Returns the singleton object.

   LOG_MASK(pri)

	Creates a mask for one priority.

   LOG_UPTO(pri)

	Creates a mask for all priorities up to pri.

Methods:

   open(ident = $0, logopt = Syslog::LOG_PID | Syslog::LOG_CONS,
		facility = Syslog::LOG_USER)

	Opens syslog with the given options.  If syslog is already
	opened, raises RuntimeError.
d52 1
a52 1
	Every call of Syslog::open/Syslog#open resets those values.
d59 1
a59 1
	  sl.log(Syslog::LOG_CRIT, "the sky is falling in %d seconds!", 10)
d70 1
a70 1
	These are shortcut methods of Syslog#log().  The Lineup may
d74 1
a74 1
	  sl.crit("the sky is falling in %d seconds!",5)
d80 2
a81 2
	is persistent and Syslog::open/Syslog#open/Syslog#close don't
	reset it.
d84 1
a84 1
	  sl.mask = Syslog::LOG_UPTO(Syslog::LOG_ERR)
d92 13
a104 1
	Returns the "inspect" string of the object.
a107 2
Superclass: Object

d112 10
@


1.1.2.1
log
@Add the syslog module.
@
text
@@


1.1.2.2
log
@* ext/syslog/syslog.c: Merge from rough.  Turn Syslog into a
  module keeping backward compatibility intact.
@
text
@d2 2
a3 2
$RoughId: syslog.txt,v 1.18 2002/02/25 08:20:14 knu Exp $
$Id: syslog.txt,v 1.1.2.1 2001/12/01 14:23:57 knu Exp $
d12 1
a12 1
** Syslog(Module)
d14 3
a16 1
Included Modules: Syslog::Constants
d25 1
a25 1
Module Methods:
d30 4
a33 3
	Opens syslog with the given options and returns the module
	itself.  If a block is given, calls it with an argument of
	itself.  If syslog is already opened, raises RuntimeError.
d36 22
a57 2
	  Syslog.open('ftpd', Syslog::LOG_PID | Syslog::LOG_NDELAY,
			      Syslog::LOG_FTP)
d75 1
a75 1
	Every call of Syslog::open resets these values.
d82 1
a82 1
	  Syslog.log(Syslog::LOG_CRIT, "the sky is falling in %d seconds!", 10)
d93 1
a93 1
	These are shortcut methods of Syslog::log().  The lineup may
d97 1
a97 1
	  Syslog.crit("the sky is falling in %d seconds!", 5)
d103 2
a104 2
	is persistent and will not be reset by Syslog::open or
	Syslog::close.
d107 1
a107 1
	  Syslog.mask = Syslog::LOG_UPTO(Syslog::LOG_ERR)
d115 1
a115 1
	Returns the "inspect" string of the Syslog module.
d117 1
a117 1
   instance
d119 1
a119 11
	Returns the module itself. (Just for backward compatibility)

   LOG_MASK(pri)

	Creates a mask for one priority.

   LOG_UPTO(pri)

	Creates a mask for all priorities up to pri.

** Syslog::Constants(Module)
a124 10

Module Methods:

   LOG_MASK(pri)

	Creates a mask for one priority.

   LOG_UPTO(pri)

	Creates a mask for all priorities up to pri.
@


