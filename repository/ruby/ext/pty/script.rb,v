head	1.3;
access;
symbols
	v1_6_7:1.3
	v1_6_6:1.3
	v1_6_5:1.3
	v1_6_4:1.3
	v1_7_1:1.3
	v1_6_4_preview4:1.3
	v1_6_4_preview3:1.3
	v1_6_4_preview2:1.3
	v1_6_4_preview1:1.3
	v1_6_3:1.3
	ruby_m17n:1.3.0.6
	ruby_1_6:1.3.0.4
	v1_6_2:1.3
	v1_6_1:1.3
	v1_6_0:1.3
	v1_4_6:1.3
	v1_4_5:1.3
	v1_4_4:1.3
	ruby_1_4_3:1.3
	ruby1_4_3:1.3
	v1_4_3:1.3
	v1_5_0:1.3
	ruby_1_4_3_pre1:1.3
	ruby_1_4:1.3.0.2
	v1_4_2:1.3
	v1_4_1:1.3
	v1_4_0:1.2
	v1_3_7:1.1.2.2
	v1_3_6_repack:1.1.2.2
	v1_3_6:1.1.2.2
	v1_3_5:1.1.2.2
	v1_3_4_990625:1.1.2.2
	v1_3_4_990624:1.1.2.2
	v1_3_4_990611:1.1.2.2
	v1_3_4_990531:1.1.2.2
	v1_3_3_990518:1.1.2.1
	v1_3_3_990513:1.1.2.1
	v1_3_3_990507:1.1.2.1
	ruby_1_3:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	99.08.24.08.21.54;	author matz;	state Exp;
branches;
next	1.2;

1.2
date	99.08.13.05.37.50;	author matz;	state Exp;
branches;
next	1.1;

1.1
date	99.05.07.08.24.36;	author matz;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	99.05.07.08.24.36;	author matz;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	99.05.25.08.26.19;	author matz;	state Exp;
branches;
next	;


desc
@@


1.3
log
@1.4.1 to be
@
text
@require 'pty'

if ARGV.size == 0 then
  ofile = "typescript"
else
  ofile = ARGV[0]
end

logfile = File.open(ofile,"a")

system "stty -echo raw lnext ^_"

PTY.spawn("/bin/csh") do
  |r_pty,w_pty,pid|

  Thread.new do
    while true
      w_pty.print STDIN.getc.chr
      w_pty.flush
    end
  end
  
  begin
    while true
      c = r_pty.sysread(512)
      break if c.nil?
      print c
      STDOUT.flush
      logfile.print c
    end
  rescue
  #  print $@@,':',$!,"\n"
    logfile.close
  end
end

system "stty echo -raw lnext ^v"

@


1.2
log
@remove marshal/gtk/kconv
@
text
@d25 3
a27 3
      c = r_pty.getc
      next if c.nil?
      print c.chr
d29 1
a29 1
      logfile.print c.chr
@


1.1
log
@file script.rb was initially added on branch ruby_1_3.
@
text
@d1 38
@


1.1.2.1
log
@990507
@
text
@a0 38
require 'pty'

if ARGV.size == 0 then
  ofile = "typescript"
else
  ofile = ARGV[0]
end

logfile = File.open(ofile,"a")

system "stty -echo raw lnext ^_"

PTY.spawn("/bin/csh") do
  |r_pty,w_pty|

  Thread.new do
    while true
      w_pty.print STDIN.getc.chr
      w_pty.flush
    end
  end
  
  begin
    while true
      c = r_pty.getc
      next if c.nil?
      print c.chr
      STDOUT.flush
      logfile.print c.chr
    end
  rescue
  #  print $@@,':',$!,"\n"
    logfile.close
  end
end

system "stty echo -raw lnext ^v"

@


1.1.2.2
log
@regexp null pattern
@
text
@d14 1
a14 1
  |r_pty,w_pty,pid|
@


