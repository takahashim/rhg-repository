head	1.6;
access;
symbols
	v1_6_7:1.6
	v1_6_6:1.6
	v1_6_5:1.6
	v1_6_4:1.6
	v1_7_1:1.6
	v1_6_4_preview4:1.6
	v1_6_4_preview3:1.6
	v1_6_4_preview2:1.6
	v1_6_4_preview1:1.6
	v1_6_3:1.6
	ruby_m17n:1.6.0.4
	ruby_1_6:1.6.0.2
	v1_6_2:1.6
	v1_6_1:1.6
	v1_6_0:1.6
	v1_4_6:1.2
	v1_4_5:1.2
	v1_4_4:1.2
	ruby_1_4_3:1.2
	ruby1_4_3:1.2
	v1_4_3:1.2
	v1_5_0:1.2
	ruby_1_4_3_pre1:1.2
	ruby_1_4:1.2.0.2
	v1_4_2:1.2
	v1_4_1:1.2
	v1_4_0:1.2
	v1_3_7:1.1.2.3
	v1_3_6_repack:1.1.2.3
	v1_3_6:1.1.2.3
	v1_3_5:1.1.2.3
	v1_3_4_990625:1.1.2.3
	v1_3_4_990624:1.1.2.3
	v1_3_4_990611:1.1.2.3
	v1_3_4_990531:1.1.2.2
	v1_3_3_990518:1.1.2.2
	v1_3_3_990513:1.1.2.2
	v1_3_3_990507:1.1.2.2
	ruby_1_3:1.1.0.2;
locks; strict;
comment	@ * @;


1.6
date	2000.08.24.06.29.30;	author eban;	state Exp;
branches;
next	1.5;

1.5
date	2000.07.10.04.49.19;	author matz;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.13.16.12.24;	author eban;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.12.09.07.51;	author matz;	state Exp;
branches;
next	1.2;

1.2
date	99.08.13.05.37.51;	author matz;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	99.04.30.15.16.45;	author matz;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	99.04.30.15.16.45;	author matz;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	99.05.06.08.31.49;	author matz;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	99.06.09.09.21.36;	author matz;	state Exp;
branches;
next	;

1.2.2.1
date	2000.08.24.06.41.34;	author eban;	state Exp;
branches;
next	;


desc
@@


1.6
log
@eban
@
text
@/************************************************

  sockport.h -

  $Author: matz $
  $Date: 2000/07/10 04:49:19 $
  created at: Fri Apr 30 23:19:34 JST 1999

************************************************/

#ifndef SOCKPORT_H
#define SOCKPORT_H

#ifndef SA_LEN
# ifdef HAVE_SA_LEN
#  define SA_LEN(sa) (sa)->sa_len
# else
#  ifdef INET6
#   define SA_LEN(sa) \
	(((sa)->sa_family == AF_INET6) ? sizeof(struct sockaddr_in6) \
				       : sizeof(struct sockaddr))
#  else
    /* by tradition, sizeof(struct sockaddr) covers most of the sockaddrs */
#   define SA_LEN(sa)	(sizeof(struct sockaddr))
#  endif
# endif
#endif

#ifdef HAVE_SA_LEN
# define SET_SA_LEN(sa, len) (sa)->sa_len = (len)
#else
# define SET_SA_LEN(sa, len) (len)
#endif

#ifdef HAVE_SIN_LEN
# define SIN_LEN(si) (si)->sin_len
# define SET_SIN_LEN(si,len) (si)->sin_len = (len)
#else
# define SIN_LEN(si) sizeof(struct sockaddr_in)
# define SET_SIN_LEN(si,len)
#endif

#ifndef IN_MULTICAST
# define IN_CLASSD(i)	(((long)(i) & 0xf0000000) == 0xe0000000)
# define IN_MULTICAST(i)	IN_CLASSD(i)
#endif

#ifndef IN_EXPERIMENTAL
# define IN_EXPERIMENTAL(i) ((((long)(i)) & 0xe0000000) == 0xe0000000)
#endif

#ifndef IN_CLASSA_NSHIFT
# define IN_CLASSA_NSHIFT 24
#endif

#ifndef IN_LOOPBACKNET
# define IN_LOOPBACKNET 127
#endif

#ifndef AF_UNSPEC
# define AF_UNSPEC 0
#endif

#ifndef PF_UNSPEC
# define PF_UNSPEC AF_UNSPEC
#endif

#ifndef PF_INET
# define PF_INET AF_INET
#endif

#if defined(HOST_NOT_FOUND) && !defined(h_errno) && !defined(__CYGWIN__)
extern int h_errno;
#endif

#endif
@


1.5
log
@matz
@
text
@d5 2
a6 2
  $Author: eban $
  $Date: 2000/05/13 16:12:24 $
d70 4
@


1.4
log
@support mingw32.
@
text
@d5 2
a6 2
  $Author: matz $
  $Date: 2000/05/12 09:07:51 $
d46 24
@


1.3
log
@2000-05-12
@
text
@d6 1
a6 1
  $Date: 1999/08/13 05:37:51 $
d41 5
@


1.2
log
@remove marshal/gtk/kconv
@
text
@d6 1
a6 1
  $Date: 1999/06/09 09:21:36 $
d40 1
a40 1
# define SET_SIN_LEN(si,len) (len)
@


1.2.2.1
log
@eban
@
text
@d6 1
a6 1
  $Date: 1999/08/13 05:37:51 $
a40 4
#endif

#if defined(HOST_NOT_FOUND) && !defined(h_errno) && !defined(__CYGWIN__)
extern int h_errno;
@


1.1
log
@file sockport.h was initially added on branch ruby_1_3.
@
text
@d1 43
@


1.1.2.1
log
@*** empty log message ***
@
text
@a0 43
/************************************************

  sockcomm.h -

  $Author: matz $
  $Date: 1999/04/30 08:20:00 $
  created at: Fri Apr 30 23:19:34 JST 1999

************************************************/

#ifndef SOCKCOMM_H
#define SOCKCOMM_H

#ifndef SA_LEN
# ifdef HAVE_SA_LEN
#  define SA_LEN(sa) (sa)->sin_len
# else
#  ifdef INET6
#   define SA_LEN(sa) \
	(((sa)->sa_family == AF_INET6) ? sizeof(struct sockaddr_in6) \
				       : sizeof(struct sockaddr))
#  else
    /* by tradition, sizeof(struct sockaddr) covers most of the sockaddrs */
#   define SA_LEN(sa)	(sizeof(struct sockaddr))
#  endif
# endif
#endif

#ifdef HAVE_SA_LEN
# define SET_SA_LEN(sa, len) (sa)->sin_len = (len)
#else
# define SET_SA_LEN(sa, len) (len)
#endif

#ifdef HAVE_SIN_LEN
# define SIN_LEN(si) (si)->sin_len
# define SET_SIN_LEN(si,len) (si)->sin_len = (len)
#else
# define SIN_LEN(si) sizeof(struct sockaddr_in)
# define SET_SIN_LEN(si,len) (len)
#endif

#endif
@


1.1.2.2
log
@small fixes
@
text
@d6 1
a6 1
  $Date: 1999/04/30 15:16:45 $
d16 1
a16 1
#  define SA_LEN(sa) (sa)->sa_len
d30 1
a30 1
# define SET_SA_LEN(sa, len) (sa)->sa_len = (len)
@


1.1.2.3
log
@thread bugs
@
text
@d3 1
a3 1
  sockport.h -
d6 1
a6 1
  $Date: 1999/05/06 08:31:49 $
d11 2
a12 2
#ifndef SOCKPORT_H
#define SOCKPORT_H
@


