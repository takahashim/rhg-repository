head	1.2;
access;
symbols
	v1_6_3:1.2
	ruby_1_6:1.2.0.2
	v1_3_7:1.1.1.3.2.9
	v1_3_6_repack:1.1.1.3.2.9
	v1_3_6:1.1.1.3.2.9
	v1_3_5:1.1.1.3.2.8
	v1_2_6repack:1.1.1.2.2.1
	v1_3_4_990625:1.1.1.3.2.7
	v1_3_4_990624:1.1.1.3.2.7
	v1_2_6:1.1.1.2.2.1
	v1_3_4_990611:1.1.1.3.2.7
	v1_3_4_990531:1.1.1.3.2.7
	v1_3_3_990518:1.1.1.3.2.7
	v1_3_3_990513:1.1.1.3.2.5
	v1_3_3_990507:1.1.1.3.2.3
	v1_2_5:1.1.1.2.2.1
	v1_2_4:1.1.1.2.2.1
	v1_3_1_990225:1.1.1.3
	v1_3_1_990224:1.1.1.3
	v1_3_1_990215:1.1.1.3
	v1_3_1_990212:1.1.1.3
	v1_3_1_990210:1.1.1.3
	v1_3_1_:1.1.1.3
	v1_3_1_990209:1.1.1.3
	v1_3_1_990205:1.1.1.3
	v1_3_1_990203:1.1.1.3
	v1_3_1_990201:1.1.1.3
	v1_3_1"_990201:1.1.1.3
	v1_3_1_990128:1.1.1.3
	v1_3_1_990127:1.1.1.3
	v1_3_1_990126:1.1.1.3
	ruby_1_3:1.1.1.3.0.2
	v1_2_2:1.1.1.2.2.1
	RUBY_1_3:1.1.1.3
	v1_2_2_pr1:1.1.1.2.2.1
	v1_2_1repack:1.1.1.2.2.1
	v1_2_1:1.1.1.2.2.1
	v1_2_stable:1.1.1.2.2.1
	v1_1d1:1.1.1.2.2.1
	v1_1d0:1.1.1.2.2.1
	v1_1c9_1:1.1.1.2.2.1
	v1_1c9:1.1.1.2.2.1
	v1_1c8:1.1.1.2.2.1
	v1_1c7:1.1.1.2.2.1
	v1_1c6:1.1.1.2.2.1
	v1_1d-start:1.1.1.2.2.1
	v1_1c5:1.1.1.2.2.1
	v1_1dev:1.1.1.2.2.1.0.2
	v1_1c4:1.1.1.2.2.1
	v1_1c3:1.1.1.2.2.1
	v1_1c2:1.1.1.2.2.1
	v1_1c1:1.1.1.2.2.1
	v1_1c0:1.1.1.2.2.1
	v1_1b9_31:1.1.1.2.2.1
	v1_1b9_30:1.1.1.2.2.1
	v1_1b9_28:1.1.1.2.2.1
	v1_1b9_27:1.1.1.2.2.1
	v1_1b9_26:1.1.1.2.2.1
	r1_1b9_25:1.1.1.2
	r1_1b9_24:1.1.1.2
	v1_1b9_23:1.1.1.2
	v1_1b9_22:1.1.1.2
	v1_1b9_20:1.1.1.2
	v1_1b9_18:1.1.1.2
	v1_1b9_16:1.1.1.2
	v1_1b9_15:1.1.1.2
	v1_1b9_13:1.1.1.2
	v1_1b9_12:1.1.1.2
	v1_1b9_11:1.1.1.2
	v1_1b9_08:1.1.1.2
	v1_1b9_07:1.1.1.2
	r1_1b9:1.1.1.2
	v1_1b8:1.1.1.2
	v1_1b7:1.1.1.2
	v1_1b6:1.1.1.2
	v1_1r:1.1.1.2.0.2
	v1_1:1.1.1.2
	v1_0r:1.1.1.1.0.2
	v1_0:1.1.1.1
	RUBY:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.08.13.05.37.46;	author matz;	state dead;
branches;
next	1.1;

1.1
date	98.01.16.12.13.07;	author matz;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.16.12.13.07;	author matz;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.01.16.12.19.14;	author matz;	state Exp;
branches
	1.1.1.2.2.1;
next	1.1.1.3;

1.1.1.3
date	99.01.20.04.59.32;	author matz;	state Exp;
branches
	1.1.1.3.2.1;
next	;

1.1.1.3.2.1
date	99.04.12.09.59.33;	author matz;	state Exp;
branches;
next	1.1.1.3.2.2;

1.1.1.3.2.2
date	99.05.06.08.31.48;	author matz;	state Exp;
branches;
next	1.1.1.3.2.3;

1.1.1.3.2.3
date	99.05.07.08.24.35;	author matz;	state Exp;
branches;
next	1.1.1.3.2.4;

1.1.1.3.2.4
date	99.05.10.08.22.49;	author matz;	state Exp;
branches;
next	1.1.1.3.2.5;

1.1.1.3.2.5
date	99.05.11.01.34.32;	author matz;	state Exp;
branches;
next	1.1.1.3.2.6;

1.1.1.3.2.6
date	99.05.17.09.54.18;	author matz;	state Exp;
branches;
next	1.1.1.3.2.7;

1.1.1.3.2.7
date	99.05.18.06.06.17;	author matz;	state Exp;
branches;
next	1.1.1.3.2.8;

1.1.1.3.2.8
date	99.07.15.07.59.58;	author matz;	state Exp;
branches;
next	1.1.1.3.2.9;

1.1.1.3.2.9
date	99.07.28.09.26.51;	author matz;	state Exp;
branches;
next	1.1.1.3.2.10;

1.1.1.3.2.10
date	99.08.13.05.21.37;	author matz;	state dead;
branches;
next	;

1.1.1.2.2.1
date	98.06.18.07.47.00;	author matz;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove marshal/gtk/kconv
@
text
@#! /usr/local/bin/ruby

if ARGV[0] == 'static'
  $force_static = TRUE
  ARGV.shift
elsif ARGV[0] == 'install'
  $install = TRUE
  ARGV.shift
elsif ARGV[0] == 'clean'
  $clean = TRUE
  ARGV.shift
end

$extlist = []

$cache_mod = FALSE;
$lib_cache = {}
$func_cache = {}
$hdr_cache = {}

$dllopt = '-MD'

if File.exist?("config.cache") then
  f = open("config.cache", "r")
  while f.gets
    case $_
    when /^lib: ([\w_]+) (yes|no)/
      $lib_cache[$1] = $2
    when /^func: ([\w_]+) (yes|no)/
      $func_cache[$1] = $2
    when /^hdr: (.+) (yes|no)/
      $hdr_cache[$1] = $2
    end
  end
  f.close
end

def older(file1, file2)
  if !File.exist?(file1) then
    return TRUE
  end
  if !File.exist?(file2) then
    return FALSE
  end
  if File.mtime(file1) < File.mtime(file2)
    return TRUE
  end
  return FALSE
end

LINK = "cl -o conftest -I../.. -Zi -O -I. %s  %s conftest.c %s >  nul"
CPP = "cl -E  -I../.. -I../../missing -I. -Zi -O %s conftest.c >  nul"

def try_link(libs)
  system(format(LINK, $CFLAGS, $LDFLAGS, libs))
end

def try_cpp
  system(format(CPP, $CFLAGS))
end

def have_library(lib, func)
  if $lib_cache[lib]
    if $lib_cache[lib] == "yes"
      if $libs
	$libs = "-l" + lib + " " + $libs 
      else
	$libs = "-l" + lib
      end
      return TRUE
    else
      return FALSE
    end
  end

  cfile = open("conftest.c", "w")
  cfile.printf "\
int main() { return 0; }
int t() { %s(); return 0; }
", func
  cfile.close

  begin
    if $libs
      libs =  lib + ".lib " + $libs 
    else
      libs =  lib + ".lib"
    end
    unless try_link(libs)
      $lib_cache[lib] = 'no'
      $cache_mod = TRUE
      return FALSE
    end
  ensure
    system "rm -f conftest*"
  end

  $libs = libs
  $lib_cache[lib] = 'yes'
  $cache_mod = TRUE
  return TRUE
end

def have_func(func)
  if $func_cache[func]
    if $func_cache[func] == "yes"
      $defs.push(format("-DHAVE_%s", func.upcase))
      return TRUE
    else
      return FALSE
    end
  end

  cfile = open("conftest.c", "w")
  cfile.printf "\
char %s();
int main() { return 0; }
int t() { %s(); return 0; }
", func, func
  cfile.close

  libs = $libs
  libs = "" if libs == nil

  begin
    unless try_link(libs)
      $func_cache[func] = 'no'
      $cache_mod = TRUE
      return FALSE
    end
  ensure
    system "rm -f conftest*"
  end
  $defs.push(format("-DHAVE_%s", func.upcase))
  $func_cache[func] = 'yes'
  $cache_mod = TRUE
  return TRUE
end

def have_header(header)
  if $hdr_cache[header]
    if $hdr_cache[header] == "yes"
      header.tr!("a-z./\055", "A-Z___")
      $defs.push(format("-DHAVE_%s", header))
      return TRUE
    else
      return FALSE
    end
  end

  cfile = open("conftest.c", "w")
  cfile.printf "\
#include <%s>
", header
  cfile.close

  begin
    unless try_cpp
      $hdr_cache[header] = 'no'
      $cache_mod = TRUE
      return FALSE
    end
  ensure
    system "rm -f conftest*"
  end
  $hdr_cache[header] = 'yes'
  header.tr!("a-z./\055", "A-Z___")
  $defs.push(format("-DHAVE_%s", header))
  $cache_mod = TRUE
  return TRUE
end

def create_header()
  if $defs.length > 0
    hfile = open("extconf.h", "w")
    for line in $defs
      line =~ /^-D(.*)/
      hfile.printf "#define %s 1\n", $1
    end
    hfile.close
  end
end

def create_makefile(target)

  if $libs and "obj" == "obj"
    libs = $libs.split
    for lib in libs
      lib.sub!(/(.*)/, '"lib\1.lib"')
    end
    $defs.push(format("-DEXTLIB='%s'", libs.join(",")))
  end
  $libs = "" unless $libs

  mfile = open("Makefile", "w")
  mfile.printf "\
SHELL = $(COMPSEC)

#### Start of system configuration section. ####

srcdir = .
VPATH = .

CC = cl

CFLAGS   = %s -I../.. -I../../missing -I. -O -DNT %s #$CFLAGS %s

RUBYLIB  = ../../ruby.lib
DLDFLAGS =  /DLL
LDSHARED = 
", if $static then "" else "-fpic" end, $dllopt, $defs.join(" ")

  if $force_static
    print "static\n"
  else
    print "non static\n"
  end

  mfile.printf "\

libdir = /usr/local/lib/ruby/i386-mswin32


#### End of system configuration section. ####
"
  mfile.printf "LOCAL_LIBS = %s\n", $local_libs if $local_libs
  mfile.printf "LIBS = %s\n", $libs
  mfile.printf "OBJS = "
  if !$objs then
    $objs = Dir["*.c"]
    for f in $objs
      f.sub!(/\.c$/, ".obj")
    end
  end
  mfile.printf $objs.join(" ")
  mfile.printf "\n"

  dots = if "ginstall -c" =~ /^\// then "" else "../" end
  mfile.printf "\
TARGET = %s.%s

INSTALL = %sginstall -c

DEFFILE = %s.def

all:            $(TARGET)

clean:;         @@rm -f *.obj *.lib *.exp *.pdb *.bak
		@@rm -f Makefile extconf.h conftest.*

realclean:      clean
", target,
    if $force_static then "lib" else "dll" end, dots, target

  if !$static
    mfile.printf "\

install:        $(libdir)/$(TARGET)

$(libdir)/$(TARGET): $(TARGET)
	@@test -d $(libdir) || mkdir $(libdir)
	$(INSTALL) $(TARGET) $(libdir)/$(TARGET)
"
  else
    mfile.printf "\

install:;
"
  end

  if $force_static
    mfile.printf "\
$(TARGET): $(OBJS)
	lib /OUT:$(TARGET) $(OBJS)
"
  else
      mfile.printf "\
$(DEFFILE):
	echo $(DEFFILE)

$(TARGET): $(OBJS)  $(DEFFILE)
	cl -DLL -o$(TARGET) $(OBJS) $(RUBYLIB) -link /DEF:$(DEFFILE)
"
  end

  if File.exist?("depend")
    dfile = open("depend", "r")
    mfile.printf "###\n"
    while line = dfile.gets()
      mfile.printf "%s", line
    end
    dfile.close
  end
  mfile.close
  if $static
    printf format("push %s,%s\n", $static, target); ##debug print##
    $extlist.push [$static,target]
  end
end

def extmake(target)
  if $force_static or $static_ext[target]
    $static = target
  else
    $static = FALSE
  end

  return if $nodynamic and not $static

  $local_libs = nil
  $libs = nil
  $objs = nil
  $CFLAGS = nil
  $LDFLAGS = nil

  begin
    Dir.chdir target
    if $static_ext.size > 0 ||
      !File.exist?("./Makefile") ||
      older("./Makefile", "../Setup") ||
      older("./Makefile", "../extmk.rb") ||
      older("./Makefile", "./extconf.rb")
    then
      $defs = []
      if File.exist?("extconf.rb")
	load "extconf.rb"
      else
	create_makefile(target);
      end
    end
    if File.exist?("./Makefile")
      if $install
	system "nmake install"
	if File.directory? "./lib"
	  for i in Dir["./lib/*.rb"]
	    system "ginstall -c #{i} /usr/local/lib/ruby/i386-mswin32"
	  end
	end
      elsif $clean
	system "nmake clean"
      else
	system "nmake all"
      end
    end
    if $static
      $extlibs += " " + $LDFLAGS if $LDFLAGS
      $extlibs += " " + $local_libs if $local_libs
      $extlibs += " " + $libs if $libs
    end
  ensure
    Dir.chdir ".."
  end
end

# get static-link modules
$static_ext = {}
if File.file? "./Setup"
  f = open("./Setup") 
  while f.gets()
    $_.chop!
    sub!(/#.*$/, '')
    next if /^\s*$/
	print $_, "\n"
    if /^option +nodynamic/
      $nodynamic = TRUE
      next
    end
    $static_ext[$_.split[0]] = TRUE
  end
  f.close
end

for d in Dir["*"]
  File.directory?(d) || next
  File.file?(d + "/MANIFEST") || next
  
  d = $1 if d =~ /\/([\/]*)$/
  if $install
    print "installing ", d, "\n"
  elsif $clean
    print "cleaning ", d, "\n"
  else
    print "compiling ", d, "\n"
  end
  extmake(d)
end

if $cache_mod
  f = open("config.cache", "w")
  for k,v in $lib_cache
    f.printf "lib: %s %s\n", k, v
  end
  for k,v in $func_cache
    f.printf "func: %s %s\n", k, v
  end
  for k,v in $hdr_cache
    f.printf "hdr: %s %s\n", k, v
  end
  f.close
end

exit if $install or $clean
if $extlist.size > 0
  #for s,t in $extlist
  for s,t in $static_ext
    #f = format("%s/%s.obj", s, t)
    #f = format("%s/%s.obj", s, s)
    l = format("%s/%s.lib", s, s)
	#print format("%s/%s.obj\n", s, s) ##debug print##
    if File.exist?(l)
      $extinit += format("\
\tInit_%s();\n\
\trb_provide(\"%s.o\");\n\
", s, s)
      $extobjs += "ext/"
      #$extobjs += f    # *.obj
      $extobjs += l	# *.lib
      $extobjs += " "
    else
      FALSE
    end
  end

  if older("extinit.c", "Setup")
    f = open("extinit.c", "w")
    f.printf "void Init_ext() {\n"
    f.printf $extinit
    f.printf "}\n"
    f.close
  end
  if older("extinit.obj", "extinit.c")
    cmd = "cl -Zi -O -I. -c extinit.c"
    print cmd, "\n"
    system cmd or exit 1
  end

  Dir.chdir ".."

  if older("ruby.exe", "ext/Setup") or older("ruby.exe", "miniruby.exe")
    `rm -f ruby.exe`
  end

  $extobjs = "ext/extinit.obj " + $extobjs
  $extlibs = ""
  system format('nmake ruby.exe EXTOBJS="%s" EXTLIBS="%s"', $extobjs, $extlibs)
else
  Dir.chdir ".."
  if older("ruby.exe", "miniruby.exe")
    `rm -f ruby.exe`
    `cp miniruby.exe ruby.exe`
  end
end

#template of .def file.
#LIBRARY kconv.dll
#CODE LOADONCALL
#DATA LOADONCALL
#DESCRIPTION 'win32 kconv.dll'
#EXPORTS
#
#        Init_kconv
def makedef(basename)
  defname = sprintf("%s.def", basename)
  f = open(defname, "w")
  f.printf "\
LIBRARY %s.dll
CODE LOADONCALL
DATA LOADONCALL
DESCRIPTION 'win32 %s.dll'
EXPORTS

	Init_%s
", basename, basename
  f.close

end                       

#Local variables:
# mode: ruby
#end:
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@
@
text
@@


1.1.1.2
log
@*** empty log message ***
@
text
@d21 1
a21 2
#$dllopt = '-MD'
$dllopt = ''
d51 2
a52 3
#LINK = "cl -o conftest.exe -I../.. -Zi -O -I. %s  conftest.c %s >  nul"
LINK = "cl -o conftest.exe -Zi -O  %s  conftest.c %s >  nul"
CPP = "cl -E  -I../.. -I../../missing -I../../win32 -I. -Zi -O %s conftest.c >  nul"
d55 1
a55 4
  #print(format("try #{LINK}", $CFLAGS, $LDFLAGS, libs))
  #system(format(LINK, $CFLAGS, $LDFLAGS, libs))
  print(format("try #{LINK}\n", $CFLAGS, libs))
  system(format(LINK, $CFLAGS, libs))
a62 1
  #print format("have_library(%s, %s)\n", lib, func)
d65 2
a66 2
      if $libs#
	$libs = lib + ".lib " + $libs 
d68 1
a68 1
	$libs = lib + ".lib "
a77 2
#include <windows.h>
#include <winsock.h>
a88 1
    #print "libs=#{libs}\n"
a89 1
      #print "fail : #{libs}\n"
d116 1
a116 3
#include <windows.h>
#include <winsock.h>
//char %s();
a125 1
    #print "libs=#{libs}\n"
d189 1
a189 1
      lib.sub!(/(.*)/, '"\1.lib"') if /.lib$/ !~ lib
d206 1
a206 1
CFLAGS   = %s -I../.. -I../../missing -I../../win32 -I. -O -DNT %s #$CFLAGS %s
d214 1
a214 1
  print "static\n"
d216 1
a216 1
  print "non static\n"
d248 1
a248 1
clean:;         @@rm -f *.obj *.lib *.exp vc*.pdb *.bak *.def
d277 2
a278 2
    mfile.printf "\
$(DEFFILE): 
d296 1
a296 1
    #printf format("push %s,%s\n", $static, target); ##debug print##
a300 17
#template of .def file.
def create_def(basename)
  defname = sprintf("%s.def", basename)
  f = open(defname, "w")
  f.printf "\
LIBRARY %s.dll
CODE LOADONCALL
DATA LOADONCALL
DESCRIPTION 'win32 %s.dll'
EXPORTS

	Init_%s
", basename, basename, basename
  f.close

end

a330 5

    if !File.exist?("#{target}.def")
        create_def(target)
    end

a341 1
	#print "!!!make!!!\n"
a345 1
      #$extlibs = " "
d363 1
a363 2
    #print $_, "\n"

d404 2
a405 2
  for s,t in $extlist
  #for s,t in $static_ext
d408 2
a409 1
    l = format("%s/%s.lib", s, s)    
d416 2
a417 2
      #$extobjs += f  # *.obj
      $extobjs += l   # *.lib
d444 1
a444 6
  #$extlibs = ""
  #print "EXTLIBS=#{$extlibs}\n"
  $extlibs.gsub!("-L/usr/local/lib", "") if $extlibs
  $extlibs.gsub!(" +", " ") if $extlibs
  #print "EXTLIBS=#{$extlibs}\n"

d453 25
@


1.1.1.3
log
@ruby 1.3 cycle
@
text
@a2 2
$".push 'mkmf.rb' #"

d382 1
a382 1
      $extlibs = " "
a440 2
$extinit = " " unless $extinit
$extobjs = ""
@


1.1.1.3.2.1
log
@*** empty log message ***
@
text
@d454 1
a454 1
\trb_provide(\"%s.so\");\n\
@


1.1.1.3.2.2
log
@small fixes
@
text
@d3 1
a3 1
$".push 'mkmf.rb'
a9 1
  $destdir = ARGV[1] || ''
a21 8
$top_srcdir = ".."
if $top_srcdir !~ "^/"
  # get absolute path
  $top_srcdir = File.expand_path($top_srcdir)
end
$topdir = File.expand_path("..")
$topdir = File.expand_path($topdir)
$ruby_inc = $top_srcdir
d23 2
a24 1
load "#{$top_srcdir}/lib/find.rb"
d30 1
a30 1
    when /^lib: (.+) (yes|no)/
d43 1
a43 1
    return true
d46 1
a46 1
    return false
d49 1
a49 15
    return true
  end
  return false
end

CFLAGS = "-g -O2"
LINK = "gcc -o conftest -I#$topdir -I#$top_srcdir -I${prefix}/include #{CFLAGS} %s %s conftest.c -ldl -lcrypt -lm  %s"
CPP = "gcc -E  -I#$topdir -I#$top_srcdir -I${prefix}/include #{CFLAGS} %s conftest.c"

$null = open("nul", "w")
$orgerr = $stderr.dup
$orgout = $stdout.dup
def xsystem command
  if $DEBUG
    return system(command)
d51 1
a51 6
  $stderr.reopen($null) 
  $stdout.reopen($null) 
  r = system(command)
  $stderr.reopen($orgerr)
  $stdout.reopen($orgout)
  return r
d54 3
a56 8
def try_link(src, opt="")
  cfile = open("conftest.c", "w")
  cfile.print src
  cfile.close
  begin
    xsystem(format(LINK, $CFLAGS, $LDFLAGS, opt))
  end
end
d58 5
a62 5
def try_cpp(src, opt=$CFLAGS)
  cfile = open("conftest.c", "w")
  cfile.print src
  cfile.close
  xsystem(format(CPP, opt))
d65 2
a66 5
def egrep_cpp(pat, src, opt=$CFLAGS)
  cfile = open("conftest.c", "w")
  cfile.print src
  cfile.close
  xsystem(format(CPP+"|egrep #{pat}", opt))
d69 2
a70 33
def try_run(src, opt="")
  begin
    if try_link(src, opt)
      if xsystem("./conftest")
	true
      else
	false
      end
    else
      nil
    end
  end
end

def install_rb(mfile)
  path = []
  dir = []
  Find.find("lib") do |f|
    next unless /\.rb$/ =~ f
    f = f[4..-1]
    path.push f
    dir |= File.dirname(f)
  end
  for f in dir
    next if f == "."
    mfile.printf "\t@@test -d $(DESTDIR)$(pkglibdir)/%s || mkdir $(DESTDIR)$(pkglibdir)/%s\n", f, f
  end
  for f in path
    mfile.printf "\t$(INSTALL_DATA) lib/%s $(DESTDIR)$(pkglibdir)/%s\n", f, f
  end
end

def have_library(lib, func="main")
d73 2
a74 2
      if $libs
        $libs = "-l" + lib + " " + $libs 
d76 1
a76 1
	$libs = "-l" + lib
d84 10
a93 1
  if func && func != ""
d95 1
a95 1
      libs = "-l" + lib + " " + $libs 
d97 1
a97 1
      libs = "-l" + lib
d99 3
a101 4
    unless try_link(<<"SRC", libs)
int main() { return 0; }
int t() { #{func}(); return 0; }
SRC
d106 2
a107 6
  else
    if $libs
      libs = "-l" + lib + " " + $libs 
    else
      libs = "-l" + lib
    end
d126 10
d139 9
a147 8
  unless try_link(<<"SRC", libs)
char #{func}();
int main() { return 0; }
int t() { #{func}(); return 0; }
SRC
    $func_cache[func] = 'no'
    $cache_mod = TRUE
    return FALSE
d166 14
a179 6
  unless try_cpp(<<"SRC")
#include <#{header}>
SRC
    $hdr_cache[header] = 'no'
    $cache_mod = TRUE
    return FALSE
a187 32
def arg_config(config, default=nil)
  unless defined? $configure_args
    $configure_args = {}
    for arg in " --prefix=/usr --with-dbm-include=/usr/include/db1".split
      next unless /^--/ =~ arg
      if /=/ =~ arg
	$configure_args[$`] = $'
      else
	$configure_args[arg] = default
      end
    end
  end
  $configure_args.fetch(config, default)
end

def with_config(config, default=nil)
  unless /^--with-/ =~ config
    config = '--with-' + config
  end
  arg_config(config, default)
end

def enable_config(config, default=nil)
  if arg_config("--enable-"+config, true)
    true
  elsif arg_config("--disable-"+config, false)
    false
  else
    default
  end
end

d201 1
a201 1
  if $libs and "so" == "o"
d204 1
a204 1
      lib.sub!(/-l(.*)/, '"lib\1.a"')
d208 1
a209 12
  $DLDFLAGS = ''

  if PLATFORM =~ /beos/
    if $libs
      $libs = $libs + " -lruby"
    else
      $libs = "-lruby"
    end
    $DLDFLAGS = $DLDFLAGS + " -L" + $topdir
  end

  $srcdir = $top_srcdir + "/ext/" + $mdir
d212 1
a212 1
SHELL = /bin/sh
d216 2
a217 1
srcdir = #{$srcdir}
d219 1
a219 1
hdrdir = #{$topdir}
d221 1
a221 1
CC = gcc
d223 10
a232 5
prefix = /usr
CFLAGS   = %s -I#{$topdir} -I#{$top_srcdir} -I${prefix}/include #{CFLAGS} #$CFLAGS %s
DLDFLAGS = #$DLDFLAGS #$LDFLAGS
LDSHARED = gcc -shared
", if $static then "" else "-fPIC" end, $defs.join(" ")
d236 1
a236 8
RUBY_INSTALL_NAME = ruby

prefix = /usr
exec_prefix = ${prefix}
libdir = ${exec_prefix}/lib
pkglibdir = $(libdir)/ruby/1.3
archdir = $(pkglibdir)/i586-linux
ruby_inc = #{$ruby_inc}
a239 1

d241 1
a241 1
  mfile.printf "LOCAL_LIBS = %s\n", $local_libs unless $local_libs == ""
d245 3
a247 5
    $objs = []
    for f in Dir["#{$top_srcdir}/ext/#{$mdir}/*.{c,cc}"]
      f = File.basename(f)
      f.sub!(/\.(c|cc)$/, ".o")
      $objs.push f
d253 3
a255 3
  mfile.printf <<EOS
TARGET = #{target}
DLLIB = $(TARGET).#{$static ? "a" : "so"}
d257 1
a257 2
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
d259 1
a259 1
binsuffix = 
d261 1
a261 1
all:		$(DLLIB)
d263 1
a263 1
clean:;		@@rm -f *.o *.a *.so *.sl
a264 1
		@@rm -f core ruby$(binsuffix) *~
d266 3
a268 2
realclean:	clean
EOS
d270 2
a271 1
  mfile.printf <<EOS
d273 7
a279 6
install:
	@@test -d $(DESTDIR)$(libdir) || mkdir $(DESTDIR)$(libdir)
	@@test -d $(DESTDIR)$(pkglibdir) || mkdir $(DESTDIR)$(pkglibdir)
	@@test -d $(DESTDIR)$(archdir) || mkdir $(DESTDIR)$(archdir)
EOS
  if !$static
d281 2
a282 1
	$(INSTALL) $(DLLIB) $(DESTDIR)$(archdir)/$(DLLIB)
a284 2
  install_rb(mfile)
  mfile.printf "\n"
d286 4
a289 5
  if $static
      mfile.printf "\
$(DLLIB): $(OBJS)
	ar cru $(DLLIB) $(OBJS)
	@@-ranlib $(DLLIB) 2> /dev/null || true
d293 5
a297 7
$(DLLIB): $(OBJS)
	$(LDSHARED) $(DLDFLAGS) -o $(DLLIB) $(OBJS) $(LIBS) $(LOCAL_LIBS)
"
  elsif not File.exist?(target + ".c") and not File.exist?(target + ".cc")
    mfile.printf "\
$(DLLIB): $(OBJS)
	ld $(DLDFLAGS) -r -o $(DLLIB) $(OBJS)
d310 21
a330 1
  
d342 2
d345 2
a346 4
  $libs = "-lc"
  $local_libs = ""		# to be assigned in extconf.rb
  $CFLAGS = ""
  $LDFLAGS = ""
a348 1
    system "mkdir", target unless File.directory?(target)
a349 1
    $mdir = target
d352 1
a352 1
      older("./Makefile", "#{$top_srcdir}/ext/Setup") ||
d354 1
a354 1
      older("./Makefile", "#{$top_srcdir}/ext/#{target}/extconf.rb")
d357 2
a358 2
      if File.exist?("#{$top_srcdir}/ext/#{target}/extconf.rb")
	load "#{$top_srcdir}/ext/#{target}/extconf.rb"
d363 5
a368 3
      if $static
	$extlist.push [$static,target]
      end
d370 6
a375 1
	system "make install DESTDIR=#{$destdir}"
d377 1
a377 1
	system "make clean"
d379 2
a380 1
	system "make all" or exit
d384 3
a386 2
      $extlibs ||= ""
      $extlibs += " " + $LDFLAGS unless $LDFLAGS == ""
a387 1
      $extlibs += " " + $local_libs unless $local_libs == ""
a389 1
    system "rm -f conftest*"
d396 11
a406 12
for setup in ["Setup", "#{$top_srcdir}/ext/Setup"]
  if File.file? setup
    f = open(setup) 
    while f.gets()
      $_.chomp!
      sub!(/#.*$/, '')
      next if /^\s*$/
      if /^option +nodynamic/
	$nodynamic = TRUE
	next
      end
      $static_ext[$_.split[0]] = TRUE
d408 1
a408 2
    f.close
    break
d410 1
d413 1
a413 1
for d in Dir["#{$top_srcdir}/ext/*"]
d417 1
a417 1
  d = File.basename(d)
a423 3
    if PLATFORM =~ /-aix/ and older("../ruby.imp", "../miniruby")
      load "#{$top_srcdir}/ext/aix_mksym.rb"
    end
d443 2
a444 5
$extinit = "" unless $extinit

ruby = "ruby"
miniruby = "miniruby"

d447 5
a451 2
    f = format("%s/%s.a", s, t)
    if File.exist?(f)
d455 1
a455 2
", t, t)
      $extobjs = "" unless $extobjs
d457 2
a458 1
      $extobjs += f
d465 1
a465 1
  if older("extinit.c", "#{$top_srcdir}/ext/Setup")
d472 2
a473 2
  if older("extinit.o", "extinit.c")
    cmd = "gcc " + CFLAGS + " -c extinit.c"
d480 2
a481 2
  if older(ruby, "#{$top_srcdir}/ext/Setup") or older(ruby, miniruby)
    system("rm -f #{ruby}")
d484 8
a491 9
  if $extobjs
    $extobjs = "ext/extinit.o " + $extobjs
  else
    $extobjs = "ext/extinit.o "
  end
  if PLATFORM =~ /m68k-human|beos/
    $extlibs.gsub!("-L/usr/local/lib", "") if $extlibs
  end
  system format(%[make #{ruby} EXTOBJS="%s" EXTLIBS="%s"], $extobjs, $extlibs)
d494 3
a496 3
  if older(ruby, miniruby)
    system("rm -f #{ruby}")
    system("make #{ruby}")
a498 1

@


1.1.1.3.2.3
log
@990507
@
text
@d354 1
a354 1
clean:;		@@rm -f *.o *.a *.so *.sl *.a
@


1.1.1.3.2.4
log
@regexp,range,squeeze
@
text
@d6 1
a6 1
  $force_static = true
d9 1
a9 1
  $install = true
d13 1
a13 1
  $clean = true
d19 1
a19 1
$cache_mod = false;
d23 5
a27 2

$top_srcdir = File.expand_path("..")
a33 3
#$dllopt = '-MD'
$dllopt = ''

d38 1
a38 1
    when /^lib: ([\w_]+) (yes|no)/
d62 4
a65 3
#LINK = "cl -o conftest.exe -I../.. -Zi -O -I. %s  conftest.c %s >  nul"
LINK = "cl -o conftest.exe -Zi -O  %s  conftest.c %s >  nul"
CPP = "cl -E  -I../.. -I../../missing -I../../win32 -I. -Zi -O %s conftest.c >  nul"
a66 1

d81 1
a81 1
def try_link0(src, opt="")
a84 4
  xsystem(format(LINK, $CFLAGS, $LDFLAGS, opt))
end

def try_link(src, opt="")
d86 1
a86 3
    try_link0(src, opt)
  ensure
    system "rm -f conftest*"
d94 1
a94 5
  begin
    xsystem(format(CPP, opt))
  ensure
    system "rm -f conftest*"
  end
d101 1
a101 5
  begin
    xsystem(format(CPP+"|egrep #{pat}", opt))
  ensure
    system "rm -f conftest*"
  end
d106 1
a106 1
    if try_link0(src, opt)
a114 2
  ensure
    system "rm -f conftest*"
a136 1
  #print format("have_library(%s, %s)\n", lib, func)
d140 1
a140 1
	$libs = lib + ".lib " + $libs 
d142 1
a142 1
	$libs = lib + ".lib "
d144 1
a144 1
      return true
d146 1
a146 1
      return false
d152 1
a152 1
      libs =  lib + ".lib " + $libs 
d154 1
a154 1
      libs =  lib + ".lib"
a155 1
    #print "libs=#{libs}\n"
a156 3
#include <windows.h>
#include <winsock.h>
//char #{func}();
a159 1
      #print "fail : #{libs}\n"
d161 8
a168 2
      $cache_mod = true
      return false
d174 2
a175 2
  $cache_mod = true
  return true
d182 1
a182 1
      return true
d184 1
a184 1
      return false
a187 10
  cfile = open("conftest.c", "w")
  cfile.printf "\
#include <windows.h>
#include <winsock.h>
//char %s();
int main() { return 0; }
int t() { %s(); return 0; }
", func, func
  cfile.close

d191 8
a198 9
  begin
    #print "libs=#{libs}\n"
    unless try_link(libs)
      $func_cache[func] = 'no'
      $cache_mod = true
      return false
    end
  ensure
    system "rm -f conftest*"
d202 2
a203 2
  $cache_mod = true
  return true
d211 1
a211 1
      return true
d213 1
a213 1
      return false
d221 2
a222 2
    $cache_mod = true
    return false
d227 2
a228 2
  $cache_mod = true
  return true
d234 1
a234 1
    for arg in ENV["CONFIGURE_ARGS"].split
d239 1
a239 1
	$configure_args[arg] = true
d276 1
a276 1
  if $libs
d279 1
a279 1
      lib.sub!(/(.*)/, '"\1.lib"') if /.lib$/ !~ lib
a282 1
  $libs = "" unless $libs
d284 12
d298 1
a298 1
SHELL = $(COMPSEC)
d302 1
a302 2
srcdir = .
VPATH = .
d304 1
a304 1
CC = cl
d306 1
a306 1
CFLAGS   = %s -I../.. -I../../missing -I../../win32 -I. -O -DNT %s #{CFLAGS} #$CFLAGS %s
d308 5
a312 4
RUBYLIB  = ../../ruby.lib
DLDFLAGS =  /DLL
LDSHARED = 
", if $static then "" else "-fpic" end, $dllopt, $defs.join(" ")
d314 1
a314 5
  if $force_static
  print "static\n"
  else
  print "non static\n"
  end
d316 1
a316 1
  mfile.printf "\
d318 6
a323 1
libdir = /usr/local/lib/ruby/i386-mswin32
d327 1
d329 1
a329 1
  mfile.printf "LOCAL_LIBS = %s\n", $LOCAL_LIBS unless $LOCAL_LIBS == ""
d333 5
a337 3
    $objs = Dir["*.{c,cc}"]
    for f in $objs
      f.sub!(/\.(c|cc)$/, ".obj")
d343 8
a350 5
  mfile.printf "\
TARGET = %s
DLLIB = $(TARGET).%s
INSTALL = ginstall -c
DEFFILE = %s.def
d352 1
a352 1
all:            $(DLLIB)
d354 1
a354 1
clean:;         @@rm -f *.obj *.lib *.exp vc*.pdb *.bak *.def
d356 4
d361 1
a361 1
realclean:      clean
d367 1
a367 3
", target,
    if $force_static then "lib" else "dll" end, target

d370 1
a370 1
	$(INSTALL) $(DLLIB) $(libdir)/$(DLLIB)
d373 2
d376 7
a382 1
  if $force_static
d385 1
a385 1
	lib /OUT:$(DLLIB) $(OBJS)
d387 1
a387 1
  else
d389 2
a390 5
$(DEFFILE): 
	echo $(DEFFILE)

$(DLLIB): $(OBJS)  $(DEFFILE)
	cl -DLL -o$(DLLIB) $(OBJS) $(RUBYLIB) -link /DEF:$(DEFFILE)
d403 1
a403 21
  if $static
    #printf format("push %s,%s\n", $static, target); ##debug print##
    $extlist.push [$static,target]
  end
end

#template of .def file.
def create_def(basename)
  defname = sprintf("%s.def", basename)
  f = open(defname, "w")
  f.printf "\
LIBRARY %s.dll
CODE LOADONCALL
DATA LOADONCALL
DESCRIPTION 'win32 %s.dll'
EXPORTS

	Init_%s
", basename, basename, basename
  f.close

d410 1
a410 1
    $static = false
d415 3
a417 3
  $CFLAGS = nil
  $LDFLAGS = nil
  $LOCAL_LIBS = ""		# to be assigned in extconf.rb
d422 1
d424 1
d427 1
a427 1
      older("./Makefile", "../Setup") ||
d429 1
a429 1
      older("./Makefile", "./extconf.rb")
d432 2
a433 2
      if File.exist?("extconf.rb")
	load "extconf.rb"
a437 5

    if !File.exist?("#{target}.def")
        create_def(target)
    end

d439 3
d443 1
a443 6
	system "nmake install DESTDIR=#{$destdir}"
	if File.directory? "./lib"
	  for i in Dir["./lib/*.rb"]
	    system "ginstall -c #{i} /usr/local/lib/ruby/i386-mswin32"
	  end
	end
d445 1
a445 1
	system "nmake clean"
d447 1
a447 2
	#print "!!!make!!!\n"
	system "nmake all"
d451 1
a451 1
      $extlibs = " "
d454 1
a454 1
      $extlibs += " " + $LOCAL_LIBS unless $LOCAL_LIBS == ""
d457 1
d464 12
a475 11
if File.file? "./Setup"
  f = open("./Setup") 
  while f.gets()
    $_.chop!
    sub!(/#.*$/, '')
    next if /^\s*$/
    #print $_, "\n"

    if /^option +nodynamic/
      $nodynamic = true
      next
d477 2
a478 1
    $static_ext[$_.split[0]] = true
a479 1
  f.close
d482 1
a482 1
for d in Dir["*"]
d486 1
a486 1
  d = $1 if d =~ /\/([\/]*)$/
d493 3
d515 5
a519 2
$extinit = " " unless $extinit
$extobjs = ""
d522 2
a523 5
  #for s,t in $static_ext
    #f = format("%s/%s.obj", s, t)
    #f = format("%s/%s.obj", s, s)
    l = format("%s/%s.lib", s, s)    
    if File.exist?(l)
d527 2
a528 1
", s, s)
d530 1
a530 2
      #$extobjs += f  # *.obj
      $extobjs += l   # *.lib
d533 1
a533 1
      false
d537 1
a537 1
  if older("extinit.c", "Setup")
d544 2
a545 2
  if older("extinit.obj", "extinit.c")
    cmd = "cl -Zi -O -I. -c extinit.c"
d552 2
a553 2
  if older("ruby.exe", "ext/Setup") or older("ruby.exe", "miniruby.exe")
    `rm -f ruby.exe`
d556 9
a564 8
  $extobjs = "ext/extinit.obj " + $extobjs
  #$extlibs = ""
  #print "EXTLIBS=#{$extlibs}\n"
  $extlibs.gsub!("-L/usr/local/lib", "") if $extlibs
  $extlibs.gsub!(" +", " ") if $extlibs
  #print "EXTLIBS=#{$extlibs}\n"

  system format('nmake ruby.exe EXTOBJS="%s" EXTLIBS="%s"', $extobjs, $extlibs)
d567 3
a569 3
  if older("ruby.exe", "miniruby.exe")
    `rm -f ruby.exe`
    `cp miniruby.exe ruby.exe`
d572 1
@


1.1.1.3.2.5
log
@.*/.+/.?
@
text
@a258 1
  return default if /mswin32/i =~ PLATFORM
@


1.1.1.3.2.6
log
@arity/strict yield
@
text
@a61 1
CFLAGS = ""
d438 2
@


1.1.1.3.2.7
log
@mbc bug in regex
@
text
@d325 1
a325 1
CFLAGS   = %s -I../.. -I../../missing -I../../win32 -I. -O -DNT %s #{CFLAGS} #{$CFLAGS} %s
a438 1
  $objs = nil
@


1.1.1.3.2.8
log
@990715
@
text
@d64 2
a65 2
LINK = "cl -o conftest.exe -Zi -O  %s  conftest.c %s %s >  nul"
CPP = "cl -E  -I#{$ruby_inc} -I#{$ruby_inc}/missing -I#{$ruby_inc}/win32 -I. -Zi -O %s conftest.c >  nul"
d325 1
a325 1
CFLAGS   = %s -I#{$ruby_inc} -I#{$ruby_inc}/missing -I#{$ruby_inc}/win32 -I. -O -DNT %s #{CFLAGS} #{$CFLAGS} %s
@


1.1.1.3.2.9
log
@990728
@
text
@a16 1
SRC_EXT = ["c", "cc", "m", "cxx", "cpp", "C"]
d19 1
a19 1
$cache_mod = false
d26 1
d63 3
a65 2
LINK = "cl -o conftest.exe %s  conftest.c %s %s"
CPP = "cl -E  -I#{$ruby_inc} -I#{$ruby_inc}/missing -I#{$ruby_inc}/win32 -I. %s conftest.c"
d135 1
a135 3
def install_rb(mfile, srcdir = nil)
  libdir = "lib"
  libdir = srcdir + "/" + libdir if srcdir
d138 1
a138 1
  Find.find(libdir) do |f|
d140 1
a140 1
    f = f[libdir.length+1..-1]
d146 1
a146 1
    mfile.printf "\t@@$(RUBY) -r ftools -e 'File::makedirs(*ARGV)' $(DESTDIR)$(pkglibdir)/%s\n", f
d149 1
a149 9
    mfile.printf "\t@@$(RUBY) -r ftools -e 'File::install(ARGV[0], ARGV[1], 0644, true)' $(srcdir)/lib/%s $(DESTDIR)$(pkglibdir)/%s\n", f, f
  end
end

def append_library(libs, lib)
  if /mswin32/ =~ RUBY_PLATFORM
    lib + ".lib " + libs
  else
    "-l" + lib + " " + libs
d157 5
a161 1
      $libs = append_library($libs, lib)
d169 5
a173 1
    libs = append_library($libs, lib)
d175 1
a175 1
    r = try_link(<<"SRC", libs)
d178 1
a181 9
    unless r
      r = try_link(<<"SRC", libs)
#include <windows.h>
#include <winsock.h>
int main() { return 0; }
int t() { void ((*p)()); p = (void ((*)()))#{func}; return 0; }
SRC
    end
    unless r
d205 2
a206 4
  libs = $libs

  #print "libs=#{libs}\n"
  r = try_link(<<"SRC", libs)
d209 1
d211 16
a226 14
int t() { #{func}(); return 0; }
SRC
  unless r
    try_link(<<"SRC", libs)
#include <windows.h>
#include <winsock.h>
int main() { return 0; }
int t() { void ((*p)()); p = (void ((*)()))#{func}; return 0; }
SRC
  end
  unless r
    $func_cache[func] = 'no'
    $cache_mod = true
    return false
d283 1
a283 1
  if arg_config("--enable-"+config, default)
a303 1
  $target = target
d305 1
a305 1
  if $libs != ""
d312 1
d323 1
a323 2
topdir = #{$topdir}
hdrdir = #{$top_srcdir}
d325 1
a325 1
CC = cl
a326 3
CFLAGS   = %s -I#{$ruby_inc} -I#{$ruby_inc}/missing -I. -O -DNT %s #{CFLAGS} #{$CFLAGS} %s
DLDFLAGS = 
LDSHARED = cl -LD
d328 2
d333 1
a333 1
    print "static\n"
d335 1
a335 1
    print "non static\n"
d340 2
a341 3
libdir = /usr/local/lib
pkglibdir = $(libdir)/ruby/1.3
archdir = $(pkglibdir)/i386-mswin32
d349 3
a351 5
    $objs = []
    for f in Dir["*.{#{SRC_EXT.join(%q{,})}}"]
      f = File.basename(f)
      f.sub!(/(#{SRC_EXT.join(%q{|})})$/, $OBJEXT)
      $objs.push f
d360 2
a361 3
DEFFILE = $(TARGET).def

RUBY = ..\\..\\miniruby.exe
d365 1
a365 1
clean:;         @@rm -f *.#{$OBJEXT} *.lib *.exp vc*.pdb *.bak *.def
d371 3
a373 1
	@@$(RUBY) -r ftools -e 'File::makedirs(*ARGV)' $(DESTDIR)$(libdir) $(DESTDIR)$(pkglibdir) $(DESTDIR)$(archdir)
d375 1
a375 1
    if $force_static then "lib" else "dll" end
d377 1
a377 1
  unless $static
d379 1
a379 1
	@@$(RUBY) -r ftools -e 'File::install(ARGV[0], ARGV[1], 0555, true)' $(DLLIB) $(DESTDIR)$(archdir)/$(DLLIB)
a381 1
  install_rb(mfile, $srcdir)
d390 1
a390 1
$(DEFFILE):
d393 2
a394 2
$(DLLIB): $(OBJS) $(DEFFILE)
	$(LDSHARED) -o $(DLLIB) $(OBJS) $(RUBYLIB) -link /DEF:$(DEFFILE)
d402 1
a402 1
      mfile.printf "%s", line.gsub(/\.o/, ".#{$OBJEXT}")
d407 3
a409 4
  unless $static
    if !File.exist?("#{target}.def")
      create_def(target)
    end
d437 1
a437 3
  unless $install or $clean
    return if $nodynamic and not $static
  end
a438 1
  $OBJEXT = 'obj'
a439 2
  $local_flags = ""
  $libs = ""
d446 11
a456 14
    $target = target
    unless $install or $clean
      if $static_ext.size > 0 ||
	!File.exist?("./Makefile") ||
	older("./Makefile", "../Setup") ||
	older("./Makefile", "../extmk.rb") ||
	older("./Makefile", "./extconf.rb")
      then
	$defs = []
	if File.exist?("extconf.rb")
	  load "extconf.rb"
	else
	  create_makefile(target)
	end
d459 5
a464 3
      if $static
	$extlist.push [$static,$target]
      end
d466 6
a471 1
	system "#{$make} install DESTDIR=#{$destdir}"
d473 1
a473 1
	system "#{$make} clean"
d475 2
a476 1
	system "#{$make} all" or exit
d480 1
a480 1
      $extlibs ||= ""
d482 1
a482 1
      $extlibs += " " + $libs unless $libs == ""
a485 1
    system "rm -f conftest*"
a489 3
$make = ENV["MAKE"]
$make ||= with_config("make-prog", "nmake -nologo")

d539 2
a540 6
$extinit = "" unless $extinit

ruby = "ruby.exe"
miniruby = "miniruby.exe"

$extobjs = "" unless $extobjs
d543 5
a547 2
    f = format("%s/%s.lib", s, t)
    if File.exist?(f)
d551 1
a551 1
", t, t)
d553 2
a554 1
      $extobjs += f
d568 1
a568 1
  if older("extinit.#{$OBJEXT}", "extinit.c")
d576 2
a577 2
  if older(ruby, "ext/Setup") or older(ruby, miniruby)
    system("rm -f #{ruby}")
d580 1
a580 1
  $extobjs = "ext/extinit.#{$OBJEXT} " + $extobjs
d587 1
a587 1
  system format(%[#{$make} #{ruby} EXTOBJS="%s" EXTLIBS="%s"], $extobjs, $extlibs)
d590 3
a592 3
  if older(ruby, miniruby)
    system("rm -f #{ruby}")
    system("#{$make} #{ruby}")
@


1.1.1.3.2.10
log
@remove extmk.rb.nt
@
text
@@


1.1.1.2.2.1
log
@1.1b9_26
@
text
@a2 2
$".push 'mkmf.rb' #"

d382 1
a382 1
      $extlibs = " "
a440 2
$extinit = " " unless $extinit
$extobjs = ""
@

