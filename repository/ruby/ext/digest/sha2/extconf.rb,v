head	1.7;
access;
symbols
	v1_6_7:1.6.2.2
	v1_6_6:1.6.2.2
	v1_6_5:1.6.2.2
	ruby_1_6:1.6.0.2;
locks; strict;
comment	@# @;


1.7
date	2001.08.20.10.55.46;	author eban;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.14.20.05.21;	author knu;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2001.08.14.19.05.37;	author knu;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.14.17.04.00;	author knu;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.14.12.15.21;	author knu;	state Exp;
branches;
next	1.2;

1.2
date	2001.07.14.03.29.50;	author knu;	state Exp;
branches;
next	1.1;

1.1
date	2001.07.13.20.06.14;	author knu;	state Exp;
branches;
next	;

1.6.2.1
date	2001.08.16.07.35.43;	author knu;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2001.08.20.10.56.03;	author eban;	state Exp;
branches;
next	;


desc
@@


1.7
log
@* ext/digest/sha2/extconf.rb: fix support for cross-compiling.
* mkconfig.rb: fix support for autoconf 2.52.
@
text
@# $RoughId: extconf.rb,v 1.4 2001/08/14 19:54:51 knu Exp $
# $Id: extconf.rb,v 1.6 2001/08/14 20:05:21 knu Exp $

require "mkmf"

$CFLAGS << " -DHAVE_CONFIG_H -I#{File.dirname(__FILE__)}/.."

$objs = [
  "sha2.#{$OBJEXT}",
  "sha2hl.#{$OBJEXT}",
  "sha2init.#{$OBJEXT}",
]

have_header("sys/cdefs.h")

have_header("inttypes.h")

have_header("unistd.h")

if try_cpp(<<SRC, $defs.join(' '))
#include "defs.h"
#ifdef NO_UINT64_T
  #error ** Cannot find a 64bit integer type - skipping the SHA2 module.
#endif
SRC
then
  create_makefile("digest/sha2")
end
@


1.6
log
@* ext/digest/*/extconf.rb: really fix so that they build from any
  directory.
@
text
@d2 1
a2 1
# $Id: extconf.rb,v 1.5 2001/08/14 19:05:37 knu Exp $
d20 1
a20 1
if try_run(<<SRC, $defs.join(' '))
a21 1
int main(void) {
d23 1
a23 3
    return 1;
#else
    return 0;
a24 1
}
a27 2
else
  puts "** Cannot find a 64bit integer type - skipping the SHA2 module."
@


1.6.2.1
log
@* LEGAL, ext/Setup*, ext/digest/*: Merge from 1.7: Import digest
  modules.

* ext/md5/*: Move to ext/digest/md5.
@
text
@d2 1
a2 1
# $Id: extconf.rb,v 1.6 2001/08/14 20:05:21 knu Exp $
@


1.6.2.2
log
@* ext/digest/sha2/extconf.rb: fix support for cross-compiling.
* mkconfig.rb: fix support for autoconf 2.52.
@
text
@d2 1
a2 1
# $Id: extconf.rb,v 1.6.2.1 2001/08/16 07:35:43 knu Exp $
d20 1
a20 1
if try_cpp(<<SRC, $defs.join(' '))
d22 1
d24 3
a26 1
  #error ** Cannot find a 64bit integer type - skipping the SHA2 module.
d28 1
d32 2
@


1.5
log
@* ext/digest/sha2/extconf.rb: fix so that they build from any
  directory.
@
text
@d1 2
a2 2
# $RoughId: extconf.rb,v 1.1 2001/07/13 15:38:27 knu Exp $
# $Id: extconf.rb,v 1.4 2001/08/14 17:04:00 knu Exp $
d6 1
a6 1
$CFLAGS << " -DHAVE_CONFIG_H -I$(srcdir)/.."
d20 2
a21 2
if try_run(<<SRC, $defs.join(' ') + " -I#{$srcdir}")
#include "../defs.h"
@


1.4
log
@* ext/digest/defs.h: Define NO_UINT64_T instead of emitting an
  error to fail.

* ext/digest/sha2/extconf.rb: Do not exit on error, and utilize
  NO_UINT64_T to detect if the system has a 64bit integer type.
@
text
@d2 1
a2 1
# $Id: extconf.rb,v 1.3 2001/08/14 12:15:21 knu Exp $
d20 1
a20 1
if try_run(<<SRC, $defs.join(' '))
@


1.3
log
@* ext/digest/sha2/extconf.rb: do not create Makefile when no 64bit
  integer type is detected.
@
text
@d2 1
a2 1
# $Id: extconf.rb,v 1.2 2001/07/14 03:29:50 knu Exp $
d20 1
a20 1
unless try_link(<<SRC, $defs.join(' '))
d22 7
a28 1
main(){}
d30 3
a33 1
  exit 1
a34 2

create_makefile("digest/sha2")
@


1.2
log
@* ext/digest/*/extconf.rb: fix so that they build from any
  directory.
@
text
@d2 1
a2 1
# $Id: extconf.rb,v 1.1 2001/07/13 20:06:14 knu Exp $
d19 8
@


1.1
log
@Import the "digest" module and the submodules, from the Rough Ruby
project.

  ext/digest:
    This module provides the module Digest and the abstract class
    Digest::Base.

  ext/digest/md5 (which obsoletes ext/md5):
    This module provides the class Digest::MD5 which implements the
    MD5 Message-Digest Algorithm.

  ext/digest/rmd160:
    This module provides the class Digest::RMD160 which implements the
    RIPEMD-160 cryptographic hash function.

  ext/digest/sha1 (which obsoletes ext/sha1):
    This module provides the class Digest::SHA1 which implements the
    SHA-1 Secure Hash Algorithm.

  ext/digest/sha2:
    This module provides the classes Digest::SHA256, Digest::SHA384
    and Digest::SHA512 which implement the SHA-256, SHA-384 and
    SHA-512 Secure Hash Algorithms, respectively.

  lib/md5.rb, lib/sha1.rb:
    These files are provided for backward compatibility.

All these classes have the common API, which previously ext/md5 and
ext/sha1 modules provided.  While the new API keeps 100% backward
compatibility, it has been enriched with several utility methods.

Read digest.txt for further details.
@
text
@d2 1
a2 1
# $Id$
d6 1
a6 1
$CFLAGS << " -DHAVE_CONFIG_H -I.."
@

