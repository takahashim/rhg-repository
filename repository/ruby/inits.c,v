head	1.6;
access;
symbols
	v1_6_7:1.4
	v1_6_6:1.4
	v1_6_5:1.4
	v1_6_4:1.4
	v1_7_1:1.5
	v1_6_4_preview4:1.4
	v1_6_4_preview3:1.4
	v1_6_4_preview2:1.4
	v1_6_4_preview1:1.4
	v1_6_3:1.4
	ruby_m17n:1.4.0.4
	ruby_1_6:1.4.0.2
	v1_6_2:1.4
	v1_6_1:1.4
	v1_6_0:1.4
	v1_4_6:1.2.2.1
	v1_4_5:1.2.2.1
	v1_4_4:1.2.2.1
	ruby_1_4_3:1.2
	ruby1_4_3:1.2
	v1_4_3:1.2
	v1_5_0:1.2
	ruby_1_4_3_pre1:1.2
	ruby_1_4:1.2.0.2
	v1_4_2:1.2
	v1_4_1:1.2
	v1_4_0:1.2
	v1_3_7:1.1.1.3.2.2
	v1_3_6_repack:1.1.1.3.2.2
	v1_3_6:1.1.1.3.2.2
	v1_3_5:1.1.1.3.2.2
	v1_2_6repack:1.1.1.2.2.3
	v1_3_4_990625:1.1.1.3.2.2
	v1_3_4_990624:1.1.1.3.2.2
	v1_2_6:1.1.1.2.2.3
	v1_3_4_990611:1.1.1.3.2.2
	v1_3_4_990531:1.1.1.3.2.2
	v1_3_3_990518:1.1.1.3.2.2
	v1_3_3_990513:1.1.1.3.2.2
	v1_3_3_990507:1.1.1.3.2.2
	v1_2_5:1.1.1.2.2.3
	v1_2_4:1.1.1.2.2.3
	v1_3_1_990225:1.1.1.3.2.1
	v1_3_1_990224:1.1.1.3.2.1
	v1_3_1_990215:1.1.1.3.2.1
	v1_3_1_990212:1.1.1.3.2.1
	v1_3_1_990210:1.1.1.3.2.1
	v1_3_1_:1.1.1.3.2.1
	v1_3_1_990209:1.1.1.3.2.1
	v1_3_1_990205:1.1.1.3.2.1
	v1_3_1_990203:1.1.1.3.2.1
	v1_3_1_990201:1.1.1.3.2.1
	v1_3_1"_990201:1.1.1.3.2.1
	v1_3_1_990128:1.1.1.3.2.1
	v1_3_1_990127:1.1.1.3.2.1
	v1_3_1_990126:1.1.1.3.2.1
	ruby_1_3:1.1.1.3.0.2
	v1_2_2:1.1.1.2.2.3
	RUBY_1_3:1.1.1.3
	v1_2_2_pr1:1.1.1.2.2.3
	v1_2_1repack:1.1.1.2.2.3
	v1_2_1:1.1.1.2.2.3
	v1_2_stable:1.1.1.2.2.3
	v1_1d1:1.1.1.2.2.3.2.1
	v1_1d0:1.1.1.2.2.3.2.1
	v1_1c9_1:1.1.1.2.2.3
	v1_1c9:1.1.1.2.2.3
	v1_1c8:1.1.1.2.2.3
	v1_1c7:1.1.1.2.2.3
	v1_1c6:1.1.1.2.2.3
	v1_1d-start:1.1.1.2.2.3
	v1_1c5:1.1.1.2.2.3
	v1_1dev:1.1.1.2.2.3.0.2
	v1_1c4:1.1.1.2.2.3
	v1_1c3:1.1.1.2.2.3
	v1_1c2:1.1.1.2.2.3
	v1_1c1:1.1.1.2.2.3
	v1_1c0:1.1.1.2.2.3
	v1_1b9_31:1.1.1.2.2.3
	v1_1b9_30:1.1.1.2.2.3
	v1_1b9_28:1.1.1.2.2.3
	v1_1b9_27:1.1.1.2.2.3
	v1_1b9_26:1.1.1.2.2.3
	r1_1b9_25:1.1.1.2.2.3
	r1_1b9_24:1.1.1.2.2.3
	v1_1b9_23:1.1.1.2.2.3
	v1_1b9_22:1.1.1.2.2.3
	v1_1b9_20:1.1.1.2.2.3
	v1_1b9_18:1.1.1.2.2.3
	v1_1b9_16:1.1.1.2.2.3
	v1_1b9_15:1.1.1.2.2.3
	v1_1b9_13:1.1.1.2.2.3
	v1_1b9_12:1.1.1.2.2.3
	v1_1b9_11:1.1.1.2.2.3
	v1_1b9_08:1.1.1.2.2.3
	v1_1b9_07:1.1.1.2.2.3
	r1_1b9:1.1.1.2.2.3
	v1_1b8:1.1.1.2.2.2
	v1_1b7:1.1.1.2.2.1
	v1_1b6:1.1.1.2.2.1
	v1_1r:1.1.1.2.0.2
	v1_1:1.1.1.2
	v1_0r:1.1.1.1.0.2
	v1_0:1.1.1.1
	RUBY:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2002.04.18.08.46.18;	author matz;	state Exp;
branches;
next	1.5;

1.5
date	2001.02.14.05.51.57;	author matz;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.01.09.41.20;	author matz;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.05.04.37.04;	author matz;	state Exp;
branches;
next	1.2;

1.2
date	99.08.13.05.45.06;	author matz;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	98.01.16.12.13.06;	author matz;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.16.12.13.06;	author matz;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.01.16.12.19.10;	author matz;	state Exp;
branches
	1.1.1.2.2.1;
next	1.1.1.3;

1.1.1.3
date	99.01.20.04.59.24;	author matz;	state Exp;
branches
	1.1.1.3.2.1;
next	;

1.1.1.3.2.1
date	99.01.26.10.08.12;	author matz;	state Exp;
branches;
next	1.1.1.3.2.2;

1.1.1.3.2.2
date	99.03.24.08.52.28;	author matz;	state Exp;
branches;
next	;

1.1.1.2.2.1
date	98.01.16.12.35.46;	author matz;	state Exp;
branches;
next	1.1.1.2.2.2;

1.1.1.2.2.2
date	98.02.20.08.28.44;	author matz;	state Exp;
branches;
next	1.1.1.2.2.3;

1.1.1.2.2.3
date	98.02.25.06.52.42;	author matz;	state Exp;
branches
	1.1.1.2.2.3.2.1;
next	;

1.1.1.2.2.3.2.1
date	98.10.06.03.28.10;	author matz;	state Exp;
branches;
next	;

1.2.2.1
date	2000.01.17.08.24.02;	author matz;	state Exp;
branches;
next	;


desc
@@


1.6
log
@* re.c (rb_reg_expr_str): should treat backslash specially in
  escaping.

* io.c: complete off_t handling; missing argument for
  fptr_finalize(); polished rb_scan_args call.

* dir.c: wrap multi-statment macro by do { } while (0)

* eval.c, numeric,c, sprintf.c, util.c: ditto.

* bignum.c (rb_big_eq): check `y == x' if y is neither Fixnum,
  Bignum, nor Float.
@
text
@/**********************************************************************

  inits.c -

  $Author: matz $
  $Date: 2001/02/14 05:51:57 $
  created at: Tue Dec 28 16:01:58 JST 1993

  Copyright (C) 1993-2002 Yukihiro Matsumoto

**********************************************************************/

#include "ruby.h"

void Init_Array _((void));
void Init_Bignum _((void));
void Init_Comparable _((void));
void Init_Dir _((void));
void Init_Enumerable _((void));
void Init_Exception _((void));
void Init_eval _((void));
void Init_load _((void));
void Init_Proc _((void));
void Init_Thread _((void));
void Init_File _((void));
void Init_GC _((void));
void Init_Hash _((void));
void Init_IO _((void));
void Init_Math _((void));
void Init_marshal _((void));
void Init_Numeric _((void));
void Init_Object _((void));
void Init_pack _((void));
void Init_Precision _((void));
void Init_sym _((void));
void Init_process _((void));
void Init_Random _((void));
void Init_Range _((void));
void Init_Regexp _((void));
void Init_signal _((void));
void Init_String _((void));
void Init_Struct _((void));
void Init_Time _((void));
void Init_var_tables _((void));
void Init_version _((void));

void
rb_call_inits()
{
    Init_sym();
    Init_var_tables();
    Init_Object();
    Init_Comparable();
    Init_Enumerable();
    Init_Precision();
    Init_eval();
    Init_String();
    Init_Exception();
    Init_Thread();
    Init_Numeric();
    Init_Bignum();
    Init_Array();
    Init_Hash();
    Init_Struct();
    Init_Regexp();
    Init_pack();
    Init_Range();
    Init_IO();
    Init_Dir();
    Init_Time();
    Init_Random();
    Init_signal();
    Init_process();
    Init_load();
    Init_Proc();
    Init_Math();
    Init_GC();
    Init_marshal();
    Init_version();
}
@


1.5
log
@* dir.c (dir_s_glob): supprt backslash escape of metacharacters
  and delimiters.

* dir.c (remove_backslases): remove backslashes from path before
  calling stat(2).

* dir.c (dir_s_glob): call rb_yield directly (via push_pattern) if
  block is given to the method.

* dir.c (push_pattern): do not call rb_ary_push; yield directly.

* eval.c (blk_copy_prev): reduced ALLOC_N too much.

* eval.c (frame_dup): ditto.
@
text
@d6 1
a6 1
  $Date: 2000/05/01 09:41:20 $
d9 1
a9 1
  Copyright (C) 1993-2001 Yukihiro Matsumoto
@


1.4
log
@2000-05-01
@
text
@d6 1
a6 1
  $Date: 2000/01/05 04:37:04 $
d9 1
a9 1
  Copyright (C) 1993-2000 Yukihiro Matsumoto
@


1.3
log
@20000105
@
text
@d1 1
a1 1
/************************************************
d6 1
a6 1
  $Date: 1999/08/13 05:45:06 $
d11 1
a11 1
************************************************/
@


1.2
log
@1.4.0
@
text
@d6 1
a6 1
  $Date: 1999/03/24 08:52:28 $
d9 1
a9 1
  Copyright (C) 1993-1999 Yukihiro Matsumoto
@


1.2.2.1
log
@2000-01-17
@
text
@d6 1
a6 1
  $Date: 1999/08/13 05:45:06 $
d9 1
a9 1
  Copyright (C) 1993-2000 Yukihiro Matsumoto
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
  $Date: 1996/12/25 10:42:38 $
d9 1
a9 1
  Copyright (C) 1993-1996 Yukihiro Matsumoto
d15 32
a52 4
#ifdef THREAD
    Init_Thread();
#endif
    Init_eval();
d55 2
d59 1
d78 1
@


1.1.1.1
log
@
@
text
@@


1.1.1.2
log
@*** empty log message ***
@
text
@a14 31
void Init_Array _((void));
void Init_Bignum _((void));
void Init_Comparable _((void));
void Init_Dir _((void));
void Init_Enumerable _((void));
void Init_Exception _((void));
void Init_eval _((void));
void Init_load _((void));
void Init_Proc _((void));
void Init_Thread _((void));
void Init_File _((void));
void Init_GC _((void));
void Init_Hash _((void));
void Init_IO _((void));
void Init_Math _((void));
void Init_marshal _((void));
void Init_Numeric _((void));
void Init_Object _((void));
void Init_pack _((void));
void Init_sym _((void));
void Init_process _((void));
void Init_Random _((void));
void Init_Range _((void));
void Init_Regexp _((void));
void Init_signal _((void));
void Init_String _((void));
void Init_Struct _((void));
void Init_Time _((void));
void Init_var_tables _((void));
void Init_version _((void));

a20 1
    Init_Exception();
d24 1
a26 1
    Init_eval();
d28 1
a46 1
    Init_marshal();
@


1.1.1.3
log
@ruby 1.3 cycle
@
text
@d6 1
a6 1
  $Date: 1998/10/06 03:28:10 $
d9 1
a9 1
  Copyright (C) 1993-1998 Yukihiro Matsumoto
d52 4
a59 4
    Init_Exception();
#ifdef USE_THREAD
    Init_Thread();
#endif
@


1.1.1.3.2.1
log
@990126
@
text
@d6 1
a6 1
  $Date: 1999/01/20 04:59:24 $
d9 1
a9 1
  Copyright (C) 1993-1999 Yukihiro Matsumoto
a33 1
void Init_Precision _((void));
a53 1
    Init_Precision();
@


1.1.1.3.2.2
log
@990324
@
text
@d6 1
a6 1
  $Date: 1999/01/26 10:08:12 $
d59 1
d61 1
@


1.1.1.2.2.1
log
@*** empty log message ***
@
text
@d6 1
a6 1
  $Date: 1998/01/16 05:04:56 $
d9 1
a9 1
  Copyright (C) 1993-1998 Yukihiro Matsumoto
@


1.1.1.2.2.2
log
@1.1b8pre2
@
text
@d6 1
a6 1
  $Date: 1998/01/16 12:35:46 $
d52 1
a59 1
    Init_Exception();
@


1.1.1.2.2.3
log
@reserved words & etc.
@
text
@d6 1
a6 1
  $Date: 1998/02/20 08:28:44 $
d52 3
a59 3
#ifdef THREAD
    Init_Thread();
#endif
@


1.1.1.2.2.3.2.1
log
@join 1.1c6
@
text
@d6 1
a6 1
  $Date: 1998/02/25 06:52:42 $
d57 1
a57 1
#ifdef USE_THREAD
@
