head	1.19;
access;
symbols
	v1_6_7:1.12.2.2
	v1_6_6:1.12.2.1
	v1_6_5:1.12.2.1
	v1_6_4:1.12.2.1
	v1_7_1:1.14
	v1_6_4_preview4:1.12
	v1_6_4_preview3:1.12
	v1_6_4_preview2:1.12
	v1_6_4_preview1:1.12
	v1_6_3:1.12
	ruby_m17n:1.12.0.4
	ruby_1_6:1.12.0.2
	v1_6_2:1.12
	v1_6_1:1.12
	v1_6_0:1.11
	v1_4_6:1.4.2.1
	v1_4_5:1.4.2.1
	v1_4_4:1.4
	ruby_1_4_3:1.4
	ruby1_4_3:1.4
	v1_4_3:1.4
	v1_5_0:1.4
	ruby_1_4_3_pre1:1.4
	ruby_1_4:1.4.0.2
	v1_4_2:1.3
	v1_4_1:1.3
	v1_4_0:1.2
	v1_3_7:1.1.1.3.2.4
	v1_3_6_repack:1.1.1.3.2.3
	v1_3_6:1.1.1.3.2.3
	v1_3_5:1.1.1.3.2.3
	v1_2_6repack:1.1.1.2.2.6
	v1_3_4_990625:1.1.1.3.2.3
	v1_3_4_990624:1.1.1.3.2.3
	v1_2_6:1.1.1.2.2.6
	v1_3_4_990611:1.1.1.3.2.3
	v1_3_4_990531:1.1.1.3.2.3
	v1_3_3_990518:1.1.1.3.2.3
	v1_3_3_990513:1.1.1.3.2.3
	v1_3_3_990507:1.1.1.3.2.3
	v1_2_5:1.1.1.2.2.6
	v1_2_4:1.1.1.2.2.6
	v1_3_1_990225:1.1.1.3.2.1
	v1_3_1_990224:1.1.1.3.2.1
	v1_3_1_990215:1.1.1.3.2.1
	v1_3_1_990212:1.1.1.3.2.1
	v1_3_1_990210:1.1.1.3.2.1
	v1_3_1_:1.1.1.3.2.1
	v1_3_1_990209:1.1.1.3.2.1
	v1_3_1_990205:1.1.1.3.2.1
	v1_3_1_990203:1.1.1.3.2.1
	v1_3_1_990201:1.1.1.3.2.1
	v1_3_1"_990201:1.1.1.3.2.1
	v1_3_1_990128:1.1.1.3.2.1
	v1_3_1_990127:1.1.1.3.2.1
	v1_3_1_990126:1.1.1.3.2.1
	ruby_1_3:1.1.1.3.0.2
	v1_2_2:1.1.1.2.2.6
	RUBY_1_3:1.1.1.3
	v1_2_2_pr1:1.1.1.2.2.6
	v1_2_1repack:1.1.1.2.2.6
	v1_2_1:1.1.1.2.2.6
	v1_2_stable:1.1.1.2.2.6
	v1_1d1:1.1.1.2.2.5.2.2
	v1_1d0:1.1.1.2.2.5.2.1
	v1_1c9_1:1.1.1.2.2.6
	v1_1c9:1.1.1.2.2.6
	v1_1c8:1.1.1.2.2.6
	v1_1c7:1.1.1.2.2.6
	v1_1c6:1.1.1.2.2.5
	v1_1d-start:1.1.1.2.2.5
	v1_1c5:1.1.1.2.2.5
	v1_1dev:1.1.1.2.2.5.0.2
	v1_1c4:1.1.1.2.2.5
	v1_1c3:1.1.1.2.2.5
	v1_1c2:1.1.1.2.2.5
	v1_1c1:1.1.1.2.2.4
	v1_1c0:1.1.1.2.2.4
	v1_1b9_31:1.1.1.2.2.4
	v1_1b9_30:1.1.1.2.2.4
	v1_1b9_28:1.1.1.2.2.4
	v1_1b9_27:1.1.1.2.2.3
	v1_1b9_26:1.1.1.2.2.3
	r1_1b9_25:1.1.1.2.2.2
	r1_1b9_24:1.1.1.2.2.2
	v1_1b9_23:1.1.1.2.2.2
	v1_1b9_22:1.1.1.2.2.2
	v1_1b9_20:1.1.1.2.2.2
	v1_1b9_18:1.1.1.2.2.1
	v1_1b9_16:1.1.1.2.2.1
	v1_1b9_15:1.1.1.2.2.1
	v1_1b9_13:1.1.1.2.2.1
	v1_1b9_12:1.1.1.2.2.1
	v1_1b9_11:1.1.1.2.2.1
	v1_1b9_08:1.1.1.2.2.1
	v1_1b9_07:1.1.1.2.2.1
	r1_1b9:1.1.1.2.2.1
	v1_1b8:1.1.1.2.2.1
	v1_1b7:1.1.1.2.2.1
	v1_1b6:1.1.1.2.2.1
	v1_1r:1.1.1.2.0.2
	v1_1:1.1.1.2
	v1_0r:1.1.1.1.0.2
	v1_0:1.1.1.1
	RUBY:1.1.1;
locks; strict;
comment	@ * @;


1.19
date	2002.04.10.08.45.22;	author matz;	state Exp;
branches;
next	1.18;

1.18
date	2002.03.22.07.26.35;	author matz;	state Exp;
branches;
next	1.17;

1.17
date	2002.03.14.06.23.43;	author matz;	state Exp;
branches;
next	1.16;

1.16
date	2002.02.18.09.52.45;	author matz;	state Exp;
branches;
next	1.15;

1.15
date	2002.01.04.14.14.34;	author matz;	state Exp;
branches;
next	1.14;

1.14
date	2001.05.28.16.07.34;	author eban;	state Exp;
branches;
next	1.13;

1.13
date	2001.05.02.04.22.10;	author matz;	state Exp;
branches;
next	1.12;

1.12
date	2000.09.24.15.50.41;	author eban;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2000.07.27.09.49.14;	author matz;	state Exp;
branches;
next	1.10;

1.10
date	2000.05.30.04.23.54;	author matz;	state Exp;
branches;
next	1.9;

1.9
date	2000.05.13.16.12.15;	author eban;	state Exp;
branches;
next	1.8;

1.8
date	2000.05.09.04.52.52;	author matz;	state Exp;
branches;
next	1.7;

1.7
date	2000.02.17.07.11.07;	author matz;	state Exp;
branches;
next	1.6;

1.6
date	2000.02.01.03.11.59;	author matz;	state Exp;
branches;
next	1.5;

1.5
date	2000.01.05.04.36.58;	author matz;	state Exp;
branches;
next	1.4;

1.4
date	99.10.12.04.53.32;	author matz;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	99.08.24.08.21.52;	author matz;	state Exp;
branches;
next	1.2;

1.2
date	99.08.13.05.45.03;	author matz;	state Exp;
branches;
next	1.1;

1.1
date	98.01.16.12.13.06;	author matz;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.16.12.13.06;	author matz;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.01.16.12.19.09;	author matz;	state Exp;
branches
	1.1.1.2.2.1;
next	1.1.1.3;

1.1.1.3
date	99.01.20.04.59.22;	author matz;	state Exp;
branches
	1.1.1.3.2.1;
next	;

1.1.1.3.2.1
date	99.01.26.10.08.10;	author matz;	state Exp;
branches;
next	1.1.1.3.2.2;

1.1.1.3.2.2
date	99.04.09.17.57.37;	author matz;	state Exp;
branches;
next	1.1.1.3.2.3;

1.1.1.3.2.3
date	99.04.20.08.21.35;	author matz;	state Exp;
branches;
next	1.1.1.3.2.4;

1.1.1.3.2.4
date	99.08.06.06.48.09;	author matz;	state Exp;
branches;
next	;

1.1.1.2.2.1
date	98.01.16.12.35.43;	author matz;	state Exp;
branches;
next	1.1.1.2.2.2;

1.1.1.2.2.2
date	98.05.13.07.26.05;	author matz;	state Exp;
branches;
next	1.1.1.2.2.3;

1.1.1.2.2.3
date	98.06.16.04.23.24;	author matz;	state Exp;
branches;
next	1.1.1.2.2.4;

1.1.1.2.2.4
date	98.06.26.07.19.00;	author matz;	state Exp;
branches;
next	1.1.1.2.2.5;

1.1.1.2.2.5
date	98.07.29.09.50.27;	author matz;	state Exp;
branches
	1.1.1.2.2.5.2.1;
next	1.1.1.2.2.6;

1.1.1.2.2.6
date	98.11.09.09.11.48;	author matz;	state Exp;
branches;
next	;

1.1.1.2.2.5.2.1
date	98.11.25.03.31.10;	author matz;	state Exp;
branches;
next	1.1.1.2.2.5.2.2;

1.1.1.2.2.5.2.2
date	98.12.22.09.01.48;	author matz;	state Exp;
branches;
next	;

1.4.2.1
date	2000.05.30.04.21.00;	author matz;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2000.07.31.09.20.55;	author matz;	state Exp;
branches;
next	;

1.12.2.1
date	2001.05.28.16.07.01;	author eban;	state Exp;
branches;
next	1.12.2.2;

1.12.2.2
date	2002.01.04.14.19.47;	author matz;	state Exp;
branches;
next	;


desc
@@


1.19
log
@* variable.c (rb_obj_remove_instance_variable): raise NameError if
  specified instance variable is not defined.

* variable.c (generic_ivar_remove): modified to check ivar
  existence.

* file.c (rb_file_s_extname): new method based on the proposal
  (and patch) from Mike Hall. [new]

* eval.c (error_handle): default to 1 unless status is set.

* eval.c (ruby_options): guard error_handle() with PROT_NONE.

* eval.c (ruby_stop): ditto.

* math.c (math_acosh): added. [new]

* math.c (math_asinh): ditto.

* math.c (math_atanh): ditto.

* struct.c (rb_struct_each_pair): method added. [new]

* class.c (rb_singleton_class): wrong condition; was creating
  unnecessary singleton class.
@
text
@/************************************************

  defines.h -

  $Author: matz $
  $Date: 2002/03/22 07:26:35 $
  created at: Wed May 18 00:21:44 JST 1994

************************************************/
#ifndef DEFINES_H
#define DEFINES_H

#define RUBY

#if !defined(__STDC__) && !defined(_MSC_VER)
# define volatile
#endif

#ifdef __cplusplus
# ifndef  HAVE_PROTOTYPES
#  define HAVE_PROTOTYPES 1
# endif
# ifndef  HAVE_STDARG_PROTOTYPES
#  define HAVE_STDARG_PROTOTYPES 1
# endif
#endif

#undef _
#ifdef HAVE_PROTOTYPES
# define _(args) args
#else
# define _(args) ()
#endif

#undef __
#ifdef HAVE_STDARG_PROTOTYPES
# define __(args) args
#else
# define __(args) ()
#endif

#ifdef __cplusplus
#define ANYARGS ...
#else
#define ANYARGS
#endif

#define xmalloc ruby_xmalloc
#define xcalloc ruby_xcalloc
#define xrealloc ruby_xrealloc
#define xfree ruby_xfree

void *xmalloc _((long));
void *xcalloc _((long,long));
void *xrealloc _((void*,long));
void xfree _((void*));

#if SIZEOF_LONG_LONG > 0
# define LONG_LONG long long
#elif SIZEOF___INT64 > 0
# define HAVE_LONG_LONG 1
# define LONG_LONG __int64
# undef SIZEOF_LONG_LONG
# define SIZEOF_LONG_LONG SIZEOF___INT64
#endif

#if SIZEOF_INT*2 <= SIZEOF_LONG_LONG
# define BDIGIT unsigned int
# define SIZEOF_BDIGITS SIZEOF_INT
# define BDIGIT_DBL unsigned LONG_LONG
# define BDIGIT_DBL_SIGNED LONG_LONG
#elif SIZEOF_INT*2 <= SIZEOF_LONG
# define BDIGIT unsigned int
# define SIZEOF_BDIGITS SIZEOF_INT
# define BDIGIT_DBL unsigned long
# define BDIGIT_DBL_SIGNED long
#else
# define BDIGIT unsigned short
# define SIZEOF_BDIGITS SIZEOF_SHORT
# define BDIGIT_DBL unsigned long
# define BDIGIT_DBL_SIGNED long
#endif

/* define RUBY_USE_EUC/SJIS for default kanji-code */
#ifndef DEFAULT_KCODE
#if defined(MSDOS) || defined(__CYGWIN__) || defined(__human68k__) || defined(__MACOS__) || defined(__EMX__) || defined(OS2) || defined(NT)
#define DEFAULT_KCODE KCODE_SJIS
#else
#define DEFAULT_KCODE KCODE_EUC
#endif
#endif

#ifdef NeXT
#define DYNAMIC_ENDIAN		/* determine endian at runtime */
#ifndef __APPLE__
#define S_IXUSR _S_IXUSR        /* execute/search permission, owner */
#endif
#define S_IXGRP 0000010         /* execute/search permission, group */
#define S_IXOTH 0000001         /* execute/search permission, other */

#define HAVE_SYS_WAIT_H         /* configure fails to find this */
#endif /* NeXT */

#ifdef NT
#include "win32/win32.h"
#endif

#if defined(__VMS)
#include "vms/vms.h"
#endif

#if defined __CYGWIN__
# undef EXTERN
# if defined USEIMPORTLIB
#  define EXTERN extern __declspec(dllimport)
# else
#  define EXTERN extern __declspec(dllexport)
# endif
#endif

#ifndef EXTERN
#define EXTERN extern
#endif

#if defined(sparc) || defined(__sparc__)
# if defined(linux) || defined(__linux__)
#define FLUSH_REGISTER_WINDOWS  asm("ta  0x83")
# else /* Solaris, not sparc linux */
#define FLUSH_REGISTER_WINDOWS  asm("ta  0x03")
# endif /* trap always to flush register windows if we are on a Sparc system */
#else /* Not a sparc, so */
#define FLUSH_REGISTER_WINDOWS  /* empty -- nothing to do here */
#endif 

#if defined(MSDOS) || defined(_WIN32) || defined(__human68k__) || defined(__EMX__)
#define DOSISH 1
#endif

#if defined(MSDOS) || defined(NT) || defined(__human68k__) || defined(OS2)
#define PATH_SEP ";"
#elif defined(riscos)
#define PATH_SEP ","
#else
#define PATH_SEP ":"
#endif
#define PATH_SEP_CHAR PATH_SEP[0]

#if defined(__human68k__)
#undef HAVE_RANDOM
#undef HAVE_SETITIMER
#endif

#if defined(DJGPP) || defined(__BOW__)
#undef HAVE_SETITIMER
#endif

#ifndef RUBY_PLATFORM
#define RUBY_PLATFORM "unknown-unknown"
#endif

#endif
@


1.18
log
@* the VMS support patch submitted by Akiyoshi, Masamichi
  <Masamichi.Akiyoshi@@jp.compaq.com> is merged.

* eval.c (exec_under): changing ruby_class is OK, but should not
  alter cbase.

* eval.c (yield_under_i): ditto.
@
text
@d6 1
a6 1
  $Date: 2002/03/14 06:23:43 $
d65 17
@


1.17
log
@* re.c (rb_reg_match): should clear $~ if operand is nil.

* re.c (rb_reg_match2): ditto.

* configure: merge Jonathan Baker's large file support patch
  [ruby-talk:35316], with read_all patch in [ruby-talk:35470].

* eval.c (rb_f_abort): optional message argument that be printed
  on termination. [new]
@
text
@d6 1
a6 1
  $Date: 2002/02/18 09:52:45 $
d89 4
@


1.16
log
@* parse.y (expr_value, arg_value, primary_value): value_expr()
  check in place.

* eval.c (block_pass): "&nil" should clear block given.

* dir.c (push_braces): remove MAXPATHLEN dependency.

* dir.c (dir_s_globd): ditto.

* dln.c (init_funcname): ditto.

* dln.c (load_1): ditto.

* dln.c (dln_load): ditto.

* configure.in: add GNU/Hurd switches.

* pack.c (pack_pack): allows comment in template strings.

* pack.c (pack_unpack): ditto.
@
text
@d6 1
a6 1
  $Date: 2002/01/04 14:14:34 $
a58 1
# define HAVE_LONG_LONG
d61 1
a61 1
# define HAVE_LONG_LONG
@


1.15
log
@* process.c (rb_f_system): abandon vfork.

* io.c (pipe_open): ditto.

* defines.h: sparc linux needs different FLUSH_REGISTER_WINDOWS

* regex.c (re_search): abandon stclass optimization.

* bignum.c (rb_cstr2inum): deny "0_".

* bignum.c (rb_cstr2inum): allow "0\n" and so on.

* error.c (rb_invalid_str): utility function to show inspect()'ed
  string.

* bignum.c (rb_cstr2inum): prints invalid strings in inspect()'ed
  format.

* object.c (rb_Float): ditto.

* object.c (rb_convert_type): no longer use rb_rescue().

* re.c (rb_reg_search): initialize taint status of match object.
@
text
@d5 2
a6 2
  $Author: eban $
  $Date: 2001/05/28 16:07:34 $
d14 43
@


1.14
log
@* configure.in: remove unnecessary AC_CANONICAL_BUILD
* defins.h: #define HAVE_SETITIMER on Cygwin(bug fixed).
* ruby.c: use relative path from LIBRUBY_SO.
* ruby.c: don't use -mwin32 option on Cygwin.
* cygwin/GNUmakefile.in: ditto.
* ext/sdbm/_sdbm: ditto.
* ext/tcltklib/extconf.rb: ditto.
* ext/tcltklib/stubs.c: ditto.
@
text
@d5 2
a6 2
  $Author: matz $
  $Date: 2001/05/02 04:22:10 $
d62 9
a70 5
#ifdef sparc
#define FLUSH_REGISTER_WINDOWS asm("ta 3")
#else
#define FLUSH_REGISTER_WINDOWS /* empty */
#endif
@


1.13
log
@* eval.c (block_pass): should not downgrade safe level.

* ext/dbm/extconf.rb: allow specifying dbm-type explicitly.

* ext/dbm/extconf.rb: avoid gdbm if possible, because it leaks
  memory, whereas gdbm.so doesn't.  potential incompatibility.

* string.c (rb_str_insert): new method.

* parse.y (yylex): lex_state after RESCUE_MOD should be EXPR_BEG.

* array.c (rb_ary_insert): new method.

* array.c (rb_ary_update): new utility function.

* io.c (set_outfile): should check if closed before assignment.

* eval.c (rb_eval): should preserve value of ruby_errinfo.

* eval.c (rb_thread_schedule): infinite sleep should not cause
  dead lock.

* array.c (rb_ary_flatten_bang): proper recursive detection.

* eval.c (yield_under): need not to prohibit at safe level 4.

* pack.c (pack_pack): p/P packs nil into NULL.

* pack.c (pack_unpack): p/P unpacks NULL into nil.

* pack.c (pack_pack): size check for P template.

* ruby.c (set_arg0): wrong predicate when new $0 value is bigger
  than original space.

* gc.c (id2ref): should use NUM2ULONG()

* object.c (rb_mod_const_get): check whether name is a class
  variable name.

* object.c (rb_mod_const_set): ditto.

* object.c (rb_mod_const_defined): ditto.

* marshal.c (w_float): precision changed to "%.16g"

* eval.c (rb_call0): wrong retry behavior.

* numeric.c (fix_aref): a bug on long>int architecture.

* eval.c (rb_eval_string_wrap): should restore ruby_wrapper.

* regex.c (re_compile_pattern): char class at either edge of range
  should be invalid.

* eval.c (handle_rescue): use === to compare exception match.

* error.c (syserr_eqq): comparison between SytemCallErrors should
  based on their error numbers.

* eval.c (safe_getter): should use INT2NUM().

* bignum.c (rb_big2long): 2**31 cannot fit in 31 bit long.

* regex.c (calculate_must_string): wrong length calculation.

* eval.c (rb_thread_start_0): fixed memory leak.

* parse.y (none): should clear cmdarg_stack too.

* io.c (rb_fopen): use setvbuf() to avoid recursive malloc() on
  some platforms.

* file.c (rb_stat_dev): device functions should honor stat field
  types (except long long such as dev_t).

* eval.c (rb_mod_nesting): should not push nil for nesting array.

* eval.c (rb_mod_s_constants): should not search array by
  rb_mod_const_at() for nil (happens for singleton class).

* class.c (rb_singleton_class_attached): should modify iv_tbl by
  itself, no longer use rb_iv_set() to avoid freeze check error.

* variable.c (rb_const_get): error message "uninitialized constant
  Foo at Bar::Baz" instead of "uninitialized constantBar::Baz::Foo".

* eval.c (rb_mod_included): new hook called from rb_mod_include().

* io.c (opt_i_set): should strdup() inplace_edit string.

* eval.c (exec_under): need to push cref too.

* eval.c (rb_f_missing): raise NameError for "undefined local
  variable or method".

* error.c (Init_Exception): new exception NoMethodError.
  NameError moved under ScriptError again.

* eval.c (rb_f_missing): use NoMethodError instead of NameError.

* file.c (Init_File): should redifine "new" class method.

* eval.c (PUSH_CREF): sharing cref node was problematic.  maintain
  runtime cref list instead.

* eval.c (rb_eval): copy defn node before registering.

* eval.c (rb_load): clear ruby_cref before loading.

* variable.c (rb_const_get): no recursion to show full class path
  for modules.

* eval.c (rb_set_safe_level): should set safe level in curr_thread
  as well.

* eval.c (safe_setter): ditto.

* object.c (rb_obj_is_instance_of): nil belongs to false, not true.

* time.c (make_time_t): proper (I hope) daylight saving time
  handling for both US and Europe.  I HATE DST!

* eval.c (rb_thread_wait_for): non blocked signal interrupt should
  stop the interval.

* eval.c (proc_eq): class check aded.

* eval.c (proc_eq): typo fixed ("return" was ommitted).

* error.c (Init_Exception): move NameError under StandardError.

* class.c (rb_mod_clone): should copy method bodies too.

* bignum.c (bigdivrem): should trim trailing zero bdigits of
  remainder, even if dd == 0.

* file.c (check3rdbyte): safe string check moved here.

* time.c (make_time_t): remove HAVE_TM_ZONE code since it
  sometimes reports wrong time.

* time.c (make_time_t): remove unnecessary range check for
  platforms where negative time_t is available.

* process.c (proc_waitall): should push Process::Status instead of
  Finuxm status.

* process.c (waitall_each): should add all entries in pid_tbl.
  these changes are inspired by Koji Arai.  Thanks.

* process.c (proc_wait): should not iterate if pid_tbl is 0.

* process.c (proc_waitall): ditto.

* numeric.c (flodivmod): a bug in no fmod case.

* process.c (pst_wifsignaled): should apply WIFSIGNALED for status
  (int), not st (VALUE).

* io.c (Init_IO): value of $/ and $\ are no longer restricted to
  strings.  type checks are done on demand.

* class.c (rb_include_module): module inclusion should be check
  taints.

* ruby.h (STR2CSTR): replace to StringType() and StringTypePtr().

* ruby.h (rb_str2cstr): ditto.

* eval.c (rb_load): should not copy topleve local variables.  It
  cause variable/method ambiguity.  Thanks to L. Peter Deutsch.

* class.c (rb_include_module): freeze check at first.

* eval.c (rb_attr): sprintf() and rb_intern() moved into
  conditional body.
@
text
@d5 2
a6 2
  $Author: eban $
  $Date: 2000/09/24 15:50:41 $
d86 1
a86 1
#if defined(DJGPP) || defined(__BOW__) || defined __CYGWIN__
@


1.12
log
@eban
@
text
@d5 2
a6 2
  $Author: matz $
  $Date: 2000/07/27 09:49:14 $
d14 10
@


1.12.2.1
log
@* configure.in: remove unnecessary AC_CANONICAL_BUILD
* defins.h: #define HAVE_SETITIMER on Cygwin(bug fixed).
* ruby.c: use relative path from LIBRUBY_SO.
* ruby.c: don't use -mwin32 option on Cygwin.
* cygwin/GNUmakefile.in: ditto.
* ext/sdbm/_sdbm: ditto.
* ext/tcltklib/extconf.rb: ditto.
* ext/tcltklib/stubs.c: ditto.
@
text
@d5 2
a6 2
  $Author: eban $
  $Date: 2000/09/24 15:50:41 $
d76 1
a76 1
#if defined(DJGPP) || defined(__BOW__)
@


1.12.2.2
log
@forgot to commit everything bug ChangeLog
@
text
@d6 1
a6 1
  $Date: 2001/05/28 16:07:01 $
d52 5
a56 9
#if defined(sparc) || defined(__sparc__)
# if defined(linux) || defined(__linux__)
#define FLUSH_REGISTER_WINDOWS  asm("ta  0x83")
# else /* Solaris, not sparc linux */
#define FLUSH_REGISTER_WINDOWS  asm("ta  0x03")
# endif /* trap always to flush register windows if we are on a Sparc system */
#else /* Not a sparc, so */
#define FLUSH_REGISTER_WINDOWS  /* empty -- nothing to do here */
#endif 
@


1.11
log
@matz
@
text
@d6 1
a6 1
  $Date: 2000/05/30 04:23:54 $
d76 1
a76 1
#if defined(DJGPP) || defined(__BOW__)
@


1.10
log
@2000-05-30
@
text
@d5 2
a6 2
  $Author: eban $
  $Date: 2000/05/13 16:12:15 $
d31 2
@


1.9
log
@support mingw32.
@
text
@d5 2
a6 2
  $Author: matz $
  $Date: 2000/05/09 04:52:52 $
a33 1
#define USHORT _USHORT
a34 1
#undef USHORT
@


1.8
log
@2000-05-09
@
text
@d6 1
a6 1
  $Date: 2000/02/17 07:11:07 $
d34 1
d36 1
d40 1
@


1.7
log
@2000-02-17
@
text
@d6 1
a6 1
  $Date: 2000/02/01 03:11:59 $
d37 8
d73 1
a73 1
#if defined(__CYGWIN__) || defined(DJGPP) || defined(__BOW__)
@


1.6
log
@2000-02-01
@
text
@d6 1
a6 1
  $Date: 2000/01/05 04:36:58 $
d53 2
@


1.5
log
@20000105
@
text
@d6 1
a6 1
  $Date: 1999/10/12 04:53:32 $
d58 1
a58 1
#if defined(__human68k__) || defined(__CYGWIN__)
d60 4
@


1.4
log
@19991012
@
text
@d6 1
a6 1
  $Date: 1999/08/24 08:21:52 $
d17 1
a17 1
#if defined(MSDOS) || defined(__CYGWIN32__) || defined(__human68k__) || defined(__MACOS__) || defined(__EMX__) || defined(OS2) || defined(NT)
d58 1
a58 1
#if defined(__human68k__) || defined(__CYGWIN32__)
@


1.4.2.1
log
@2000-05-30
@
text
@d6 1
a6 1
  $Date: 1999/10/12 04:53:32 $
a34 9
#endif

#if defined __CYGWIN__
# undef EXTERN
# if defined USEIMPORTLIB
#  define EXTERN extern __declspec(dllimport)
# else
#  define EXTERN extern __declspec(dllexport)
# endif
@


1.4.2.2
log
@matz
@
text
@d6 1
a6 1
  $Date: 2000/05/30 04:21:00 $
a30 2

#define HAVE_SYS_WAIT_H         /* configure fails to find this */
@


1.3
log
@1.4.1 to be
@
text
@d6 1
a6 1
  $Date: 1999/08/13 05:45:03 $
d17 1
a17 1
#if defined(MSDOS) || defined(__CYGWIN32__) || defined(__human68k__) || defined(__MACOS__) || defined(__EMX__) || defined(OS2)
@


1.2
log
@1.4.0
@
text
@d6 1
a6 1
  $Date: 1999/08/06 06:48:09 $
d51 1
a51 1
#if defined(MSDOS) || defined(NT) || defined(__human68k__)
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
  $Date: 1996/12/25 10:42:25 $
d15 4
a18 4
/* define EUC/SJIS for default kanji-code */
#if defined(MSDOS) || defined(__CYGWIN32__) || defined(__human68k__)
#undef EUC
#define SJIS
d20 2
a21 2
#define EUC
#undef SJIS
d26 1
d28 1
d34 5
a38 1
#include "missing/nt.h"
d47 12
a58 1
#ifdef __human68k__
@


1.1.1.1
log
@
@
text
@@


1.1.1.2
log
@*** empty log message ***
@
text
@d41 1
a41 1
#if defined(__human68k__) || defined(__CYGWIN32__)
@


1.1.1.3
log
@ruby 1.3 cycle
@
text
@d6 1
a6 1
  $Date: 1998/12/22 09:01:48 $
d15 4
a18 4
/* define RUBY_USE_EUC/SJIS for default kanji-code */
#if defined(MSDOS) || defined(__CYGWIN32__) || defined(__human68k__) || defined(__MACOS__)
#undef RUBY_USE_EUC
#define RUBY_USE_SJIS
d20 2
a21 2
#define RUBY_USE_EUC
#undef RUBY_USE_SJIS
a25 1
#ifndef __APPLE__
a26 1
#endif
a34 4
#ifndef EXTERN
#define EXTERN extern
#endif

a38 6
#endif

#if defined(MSDOS) || defined(NT) || defined(__human68k__) || defined(__MACOS__)
#define RUBY_PATH_SEP ";"
#else
#define RUBY_PATH_SEP ":"
@


1.1.1.3.2.1
log
@990126
@
text
@d6 1
a6 1
  $Date: 1999/01/20 04:59:22 $
d34 1
a34 1
#include "win32/win32.h"
d47 1
a47 1
#if defined(MSDOS) || defined(NT) || defined(__human68k__)
@


1.1.1.3.2.2
log
@*** empty log message ***
@
text
@d6 1
a6 1
  $Date: 1999/01/26 10:08:10 $
d16 1
a16 1
#if defined(MSDOS) || defined(__CYGWIN32__) || defined(__human68k__) || defined(__MACOS__) || defined(__EMX__) || defined(OS2)
@


1.1.1.3.2.3
log
@to open CVS
@
text
@d6 1
a6 1
  $Date: 1999/04/09 17:57:37 $
a15 1
#ifndef DEFAULT_KCODE
d17 2
a18 1
#define DEFAULT_KCODE KCODE_SJIS
d20 2
a21 2
#define DEFAULT_KCODE KCODE_EUC
#endif
@


1.1.1.3.2.4
log
@990806
@
text
@d6 1
a6 1
  $Date: 1999/04/20 08:21:35 $
a46 4
#if defined(MSDOS) || defined(_WIN32) || defined(__human68k__) || defined(__EMX__)
#define DOSISH 1
#endif

d48 1
a48 1
#define PATH_SEP ";"
d50 1
a50 1
#define PATH_SEP ":"
a51 1
#define PATH_SEP_CHAR PATH_SEP[0]
@


1.1.1.2.2.1
log
@*** empty log message ***
@
text
@d6 1
a6 1
  $Date: 1998/01/16 04:14:44 $
@


1.1.1.2.2.2
log
@1.1b9_19
@
text
@d6 1
a6 1
  $Date: 1998/01/16 12:35:43 $
d16 1
a16 1
#if defined(MSDOS) || defined(__CYGWIN32__) || defined(__human68k__) || defined(__MACOS__)
@


1.1.1.2.2.3
log
@baseline
@
text
@d6 1
a6 1
  $Date: 1998/05/13 07:26:05 $
a25 1
#ifndef __Apple__
a26 1
#endif
@


1.1.1.2.2.4
log
@*** empty log message ***
@
text
@d6 1
a6 1
  $Date: 1998/06/16 04:23:24 $
d15 1
a15 1
/* define RUBY_USE_EUC/SJIS for default kanji-code */
d17 2
a18 2
#undef RUBY_USE_EUC
#define RUBY_USE_SJIS
d20 2
a21 2
#define RUBY_USE_EUC
#undef RUBY_USE_SJIS
@


1.1.1.2.2.5
log
@sync ev
@
text
@d6 1
a6 1
  $Date: 1998/06/26 07:19:00 $
d26 1
a26 1
#ifndef __APPLE__
@


1.1.1.2.2.5.2.1
log
@*** empty log message ***
@
text
@d6 1
a6 1
  $Date: 1998/11/09 09:11:48 $
a34 4
#endif

#ifndef EXTERN
#define EXTERN extern
@


1.1.1.2.2.5.2.2
log
@1.1d1
@
text
@d6 1
a6 1
  $Date: 1998/11/25 03:31:10 $
a44 6
#endif

#if defined(MSDOS) || defined(NT) || defined(__human68k__) || defined(__MACOS__)
#define RUBY_LIB_SEP ";"
#else
#define RUBY_LIB_SEP ":"
@


1.1.1.2.2.6
log
@1.1c7
@
text
@d6 1
a6 1
  $Date: 1998/07/29 09:50:27 $
a34 4
#endif

#ifndef EXTERN
#define EXTERN extern
@
