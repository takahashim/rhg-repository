head	1.14;
access;
symbols
	v1_6_7:1.8
	v1_6_6:1.8
	v1_6_5:1.8
	v1_6_4:1.8
	v1_7_1:1.11
	v1_6_4_preview4:1.8
	v1_6_4_preview3:1.8
	v1_6_4_preview2:1.8
	v1_6_4_preview1:1.8
	v1_6_3:1.8
	ruby_m17n:1.8.0.4
	ruby_1_6:1.8.0.2
	v1_6_2:1.8
	v1_6_1:1.8
	v1_6_0:1.8
	v1_4_6:1.2.2.4
	v1_4_5:1.2.2.4
	v1_4_4:1.2.2.2
	ruby_1_4_3:1.2.2.1
	ruby1_4_3:1.2.2.1
	v1_4_3:1.2.2.1
	v1_5_0:1.3
	ruby_1_4_3_pre1:1.2.2.1
	ruby_1_4:1.2.0.2
	v1_4_2:1.2
	v1_4_1:1.2
	v1_4_0:1.2
	v1_3_7:1.1.1.3.2.1
	v1_3_6_repack:1.1.1.3.2.1
	v1_3_6:1.1.1.3.2.1
	v1_3_5:1.1.1.3.2.1
	v1_2_6repack:1.1.1.2.2.3
	v1_3_4_990625:1.1.1.3.2.1
	v1_3_4_990624:1.1.1.3.2.1
	v1_2_6:1.1.1.2.2.3
	v1_3_4_990611:1.1.1.3.2.1
	v1_3_4_990531:1.1.1.3.2.1
	v1_3_3_990518:1.1.1.3.2.1
	v1_3_3_990513:1.1.1.3.2.1
	v1_3_3_990507:1.1.1.3.2.1
	v1_2_5:1.1.1.2.2.3
	v1_2_4:1.1.1.2.2.3
	v1_3_1_990225:1.1.1.3.2.1
	v1_3_1_990224:1.1.1.3.2.1
	v1_3_1_990215:1.1.1.3.2.1
	v1_3_1_990212:1.1.1.3.2.1
	v1_3_1_990210:1.1.1.3.2.1
	v1_3_1_:1.1.1.3.2.1
	v1_3_1_990209:1.1.1.3.2.1
	v1_3_1_990205:1.1.1.3.2.1
	v1_3_1_990203:1.1.1.3.2.1
	v1_3_1_990201:1.1.1.3.2.1
	v1_3_1"_990201:1.1.1.3.2.1
	v1_3_1_990128:1.1.1.3.2.1
	v1_3_1_990127:1.1.1.3.2.1
	v1_3_1_990126:1.1.1.3.2.1
	ruby_1_3:1.1.1.3.0.2
	v1_2_2:1.1.1.2.2.3
	RUBY_1_3:1.1.1.3
	v1_2_2_pr1:1.1.1.2.2.3
	v1_2_1repack:1.1.1.2.2.3
	v1_2_1:1.1.1.2.2.3
	v1_2_stable:1.1.1.2.2.3
	v1_1d1:1.1.1.2.2.2.2.3
	v1_1d0:1.1.1.2.2.2.2.3
	v1_1c9_1:1.1.1.2.2.3
	v1_1c9:1.1.1.2.2.3
	v1_1c8:1.1.1.2.2.2
	v1_1c7:1.1.1.2.2.2
	v1_1c6:1.1.1.2.2.2
	v1_1d-start:1.1.1.2.2.2.2.1
	v1_1c5:1.1.1.2.2.2
	v1_1dev:1.1.1.2.2.2.0.2
	v1_1c4:1.1.1.2.2.2
	v1_1c3:1.1.1.2.2.2
	v1_1c2:1.1.1.2.2.2
	v1_1c1:1.1.1.2.2.2
	v1_1c0:1.1.1.2.2.2
	v1_1b9_31:1.1.1.2.2.2
	v1_1b9_30:1.1.1.2.2.2
	v1_1b9_28:1.1.1.2.2.2
	v1_1b9_27:1.1.1.2.2.2
	v1_1b9_26:1.1.1.2.2.2
	r1_1b9_25:1.1.1.2.2.2
	r1_1b9_24:1.1.1.2.2.2
	v1_1b9_23:1.1.1.2.2.2
	v1_1b9_22:1.1.1.2.2.2
	v1_1b9_20:1.1.1.2.2.2
	v1_1b9_18:1.1.1.2.2.2
	v1_1b9_16:1.1.1.2.2.1
	v1_1b9_15:1.1.1.2.2.1
	v1_1b9_13:1.1.1.2.2.1
	v1_1b9_12:1.1.1.2.2.1
	v1_1b9_11:1.1.1.2.2.1
	v1_1b9_08:1.1.1.2.2.1
	v1_1b9_07:1.1.1.2.2.1
	r1_1b9:1.1.1.2.2.1
	v1_1b8:1.1.1.2.2.1
	v1_1b7:1.1.1.2.2.1
	v1_1b6:1.1.1.2.2.1
	v1_1r:1.1.1.2.0.2
	v1_1:1.1.1.2
	v1_0r:1.1.1.1.0.2
	v1_0:1.1.1.1
	RUBY:1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2002.08.21.15.47.54;	author michal;	state Exp;
branches;
next	1.13;

1.13
date	2002.07.26.06.12.39;	author matz;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.14.06.22.26;	author matz;	state Exp;
branches;
next	1.11;

1.11
date	2001.02.14.05.51.57;	author matz;	state Exp;
branches;
next	1.10;

1.10
date	2001.01.10.10.10.43;	author matz;	state Exp;
branches;
next	1.9;

1.9
date	2001.01.10.07.52.46;	author matz;	state Exp;
branches;
next	1.8;

1.8
date	2000.05.30.04.24.03;	author matz;	state Exp;
branches;
next	1.7;

1.7
date	2000.05.01.09.41.28;	author matz;	state Exp;
branches;
next	1.6;

1.6
date	2000.02.08.08.48.54;	author matz;	state Exp;
branches;
next	1.5;

1.5
date	2000.01.05.04.37.11;	author matz;	state Exp;
branches;
next	1.4;

1.4
date	99.12.14.06.49.51;	author matz;	state Exp;
branches;
next	1.3;

1.3
date	99.11.04.08.39.37;	author matz;	state Exp;
branches;
next	1.2;

1.2
date	99.08.13.05.45.13;	author matz;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	98.01.16.12.13.06;	author matz;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.16.12.13.06;	author matz;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.01.16.12.19.12;	author matz;	state Exp;
branches
	1.1.1.2.2.1;
next	1.1.1.3;

1.1.1.3
date	99.01.20.04.59.25;	author matz;	state Exp;
branches
	1.1.1.3.2.1;
next	;

1.1.1.3.2.1
date	99.01.26.10.08.14;	author matz;	state Exp;
branches;
next	;

1.1.1.2.2.1
date	98.01.16.12.35.47;	author matz;	state Exp;
branches;
next	1.1.1.2.2.2;

1.1.1.2.2.2
date	98.05.06.03.08.57;	author matz;	state Exp;
branches
	1.1.1.2.2.2.2.1;
next	1.1.1.2.2.3;

1.1.1.2.2.3
date	98.11.26.08.25.46;	author matz;	state Exp;
branches;
next	;

1.1.1.2.2.2.2.1
date	98.09.08.07.09.06;	author matz;	state Exp;
branches;
next	1.1.1.2.2.2.2.2;

1.1.1.2.2.2.2.2
date	98.11.25.03.31.16;	author matz;	state Exp;
branches;
next	1.1.1.2.2.2.2.3;

1.1.1.2.2.2.2.3
date	98.12.16.07.30.33;	author matz;	state Exp;
branches;
next	;

1.2.2.1
date	99.11.17.07.29.52;	author matz;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2000.01.17.08.24.11;	author matz;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2000.05.01.09.42.31;	author matz;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	2000.06.05.09.01.02;	author matz;	state Exp;
branches;
next	;


desc
@@


1.14
log
@*.c: Int vs Long cleanup
@
text
@/**********************************************************************

  re.h -

  $Author: matz $
  $Date: 2002/07/26 06:12:39 $
  created at: Thu Sep 30 14:18:32 JST 1993

  Copyright (C) 1993-2002 Yukihiro Matsumoto

**********************************************************************/

#ifndef RE_H
#define RE_H

#include <sys/types.h>
#include <stdio.h>

#include "regex.h"

typedef struct re_pattern_buffer Regexp;

struct RMatch {
    struct RBasic basic;
    VALUE str;
    struct re_registers *regs;
};

#define RMATCH(obj)  (R_CAST(RMatch)(obj))

VALUE rb_reg_regcomp _((VALUE));
long rb_reg_search _((VALUE, VALUE, long, long));
VALUE rb_reg_regsub _((VALUE, VALUE, struct re_registers *));
long rb_reg_adjust_startpos _((VALUE, VALUE, long, long));
void rb_match_busy _((VALUE));
VALUE rb_reg_quote _((VALUE));

EXTERN int ruby_ignorecase;

int rb_reg_mbclen2 _((unsigned int, VALUE));
#define mbclen2(c,re) rb_reg_mbclen2((c),(re))
#endif
@


1.13
log
@* random.c: replace with Mersenne Twister RNG.

* eval.c (jump_tag_but_local_jump): preserve retval in
  LocalJumpError exceptions.

* parse.y (command): no more check for "super outside of method".

* eval.c (rb_mod_define_method): should set last_class and
  last_func in the block->frame.

* eval.c (error_handle): should handle TAG_THROW as well.

* parse.y (yylex): new decimal notation '0d4567'.

* parse.y (yylex): new octal notation '0o777'.

* parse.y (string_content): every string_content node should
  return string only.  use NODE_EVSTR to coercing.

* eval.c (rb_eval): NODE_EVSTR support.

* re.c (rb_reg_quote): avoid unnecessary string allocation.

* string.c (get_pat): quote metachracters before compiling a
  string into a regex.

* string.c (rb_str_split_m): special treatment of strings of size
  1, but AWK emulation.  now uses get_pat().

* string.c (rb_str_match_m): quote metacharacters.

* string.c (rb_str_match2): ditto.

* ext/socket/socket.c (sock_addrinfo): make all 3 versions of
  getaddrinfo happy.  [ruby-core:00184]
@
text
@d6 1
a6 1
  $Date: 2002/05/14 06:22:26 $
d32 1
a32 1
int rb_reg_search _((VALUE, VALUE, int, int));
d34 1
a34 1
int rb_reg_adjust_startpos _((VALUE, VALUE, int, int));
@


1.12
log
@* eval.c (rb_clear_cache_by_class): new function.

* eval.c (set_method_visibility): should have clear cache forq
  updated visibility.

* numeric.c (flo_to_s): default format precision to be "%.16g".

* util.c (ruby_strtod): use own strtod(3) implementation to avoid
  locale hell.  Due to this change "0xff".to_f no longer returns 255.0

* eval.c (avalue_to_yvalue): new function to distinguish yvalue
  (no-arg == Qundef) from svalue (no-arg == Qnil).

* eval.c (rb_yield_0): use avalue_to_yvalue().

* eval.c (assign): warn if val == Qundef where it means rhs is
  void (e.g. yield without value or call without argument).

* parse.y (value_expr): need not to warn for WHILE and UNTIL,
  since they can have return value (via valued break).
@
text
@d6 1
a6 1
  $Date: 2001/02/14 05:51:57 $
d36 1
@


1.11
log
@* dir.c (dir_s_glob): supprt backslash escape of metacharacters
  and delimiters.

* dir.c (remove_backslases): remove backslashes from path before
  calling stat(2).

* dir.c (dir_s_glob): call rb_yield directly (via push_pattern) if
  block is given to the method.

* dir.c (push_pattern): do not call rb_ary_push; yield directly.

* eval.c (blk_copy_prev): reduced ALLOC_N too much.

* eval.c (frame_dup): ditto.
@
text
@d6 1
a6 1
  $Date: 2001/01/10 10:10:43 $
d9 1
a9 1
  Copyright (C) 1993-2001 Yukihiro Matsumoto
@


1.10
log
@mbclen2 fix
@
text
@d6 1
a6 1
  $Date: 2001/01/10 07:52:46 $
d9 1
a9 1
  Copyright (C) 1993-2000 Yukihiro Matsumoto
@


1.9
log
@* m17n baseline.
@
text
@d6 1
a6 1
  $Date: 2000/05/30 04:24:03 $
d39 2
@


1.8
log
@2000-05-30
@
text
@d6 1
a6 1
  $Date: 2000/05/01 09:41:28 $
a30 1
int rb_str_cicmp _((VALUE, VALUE));
a34 2

int rb_kcode _((void));
a38 2
int rb_reg_mbclen2 _((unsigned int, VALUE));
#define mbclen2(c,re) rb_reg_mbclen2((c),(re))
@


1.7
log
@2000-05-01
@
text
@d6 1
a6 1
  $Date: 2000/02/08 08:48:54 $
d40 1
a40 1
extern int ruby_ignorecase;
@


1.6
log
@2000-02-08
@
text
@d1 1
a1 1
/************************************************
d6 1
a6 1
  $Date: 2000/01/05 04:37:11 $
d11 1
a11 1
************************************************/
d42 1
a42 1
int rb_reg_mbclen2 _((unsigned char, VALUE));
@


1.5
log
@20000105
@
text
@d6 1
a6 1
  $Date: 1999/12/14 06:49:51 $
d38 1
d42 2
a43 2
int rb_mbclen2 _((unsigned char, VALUE));
#define mbclen2(c,re) rb_mbclen2((c),(re))
@


1.4
log
@19991214
@
text
@d6 1
a6 1
  $Date: 1999/11/04 08:39:37 $
d9 1
a9 1
  Copyright (C) 1993-1999 Yukihiro Matsumoto
@


1.3
log
@19991104
@
text
@d6 1
a6 1
  $Date: 1999/08/13 05:45:13 $
d35 1
@


1.2
log
@1.4.0
@
text
@d6 1
a6 1
  $Date: 1999/01/26 10:08:14 $
d39 3
@


1.2.2.1
log
@19991117
@
text
@d6 1
a6 1
  $Date: 1999/08/13 05:45:13 $
a38 3

int rb_mbclen2 _((unsigned char, VALUE));
#define mbclen2(c,re) rb_mbclen2((c),(re))
@


1.2.2.2
log
@2000-01-17
@
text
@d6 1
a6 1
  $Date: 1999/11/17 07:29:52 $
d9 1
a9 1
  Copyright (C) 1993-2000 Yukihiro Matsumoto
@


1.2.2.3
log
@2000-05-01
@
text
@d6 1
a6 1
  $Date: 2000/01/17 08:24:11 $
d40 1
a40 1
int rb_mbclen2 _((unsigned int, VALUE));
@


1.2.2.4
log
@2000-06-05
@
text
@d6 1
a6 1
  $Date: 2000/05/01 09:42:31 $
d38 1
a38 1
EXTERN int ruby_ignorecase;
@


1.1
log
@Initial revision
@
text
@d6 1
a6 2
  $Revision: 1.2 $
  $Date: 1996/12/25 09:47:52 $
d9 1
a9 1
  Copyright (C) 1993-1996 Yukihiro Matsumoto
d31 8
a38 2
VALUE re_regcomp();
VALUE re_regsub();
@


1.1.1.1
log
@
@
text
@@


1.1.1.2
log
@*** empty log message ***
@
text
@d32 2
a33 5
int str_cicmp _((VALUE, VALUE));
VALUE reg_regcomp _((VALUE));
int reg_search _((VALUE, VALUE, int, struct re_registers *));
VALUE reg_regsub _((VALUE, VALUE, struct re_registers *));
void reg_free _((Regexp *));
@


1.1.1.3
log
@ruby 1.3 cycle
@
text
@d6 2
a7 1
  $Date: 1998/12/16 07:30:33 $
d10 1
a10 1
  Copyright (C) 1993-1998 Yukihiro Matsumoto
d32 5
a36 8
int rb_str_cicmp _((VALUE, VALUE));
VALUE rb_reg_regcomp _((VALUE));
int rb_reg_search _((VALUE, VALUE, int, int));
VALUE rb_reg_regsub _((VALUE, VALUE, struct re_registers *));

int rb_kcode _((void));

extern int ruby_ignorecase;
@


1.1.1.3.2.1
log
@990126
@
text
@d6 1
a6 1
  $Date: 1999/01/20 04:59:25 $
d9 1
a9 1
  Copyright (C) 1993-1999 Yukihiro Matsumoto
@


1.1.1.2.2.1
log
@*** empty log message ***
@
text
@d6 2
a7 2
  $Revision: 1.1.1.2.2.1 $
  $Date: 1998/01/16 05:13:16 $
d10 1
a10 1
  Copyright (C) 1993-1998 Yukihiro Matsumoto
@


1.1.1.2.2.2
log
@new exception model
@
text
@d7 1
a7 1
  $Date: 1998/01/16 12:35:47 $
d34 1
a34 1
int reg_search _((VALUE, VALUE, int, int));
@


1.1.1.2.2.3
log
@1.1c9 - 1.1c final, hopefully
@
text
@d6 2
a7 2
  $Revision: 1.1.1.2.2.2 $
  $Date: 1998/05/06 03:08:57 $
d36 1
@


1.1.1.2.2.2.2.1
log
@1.1d series
@
text
@d6 2
a7 2
  $Revision: 1.1.1.2.2.2 $
  $Date: 1998/05/06 03:08:57 $
d32 5
a36 4
int rb_str_cicmp _((VALUE, VALUE));
VALUE rb_reg_regcomp _((VALUE));
int rb_reg_search _((VALUE, VALUE, int, int));
VALUE rb_reg_regsub _((VALUE, VALUE, struct re_registers *));
@


1.1.1.2.2.2.2.2
log
@*** empty log message ***
@
text
@d6 2
a7 2
  $Revision: 1.1.1.2.2.2.2.1 $
  $Date: 1998/09/08 07:09:06 $
a35 2

extern int ruby_ignorecase;
@


1.1.1.2.2.2.2.3
log
@first public release of 1.1d (pre1.2) series
@
text
@d6 2
a7 1
  $Date: 1998/11/26 08:25:46 $
@
