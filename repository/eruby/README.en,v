head	1.4;
access;
symbols
	release_0_9_8:1.4
	autoconfiscation-branch:1.4.0.2
	root-of-autoconfiscation:1.4
	release_0_9_7:1.4
	release_0_9_6:1.4
	release_0_9_5:1.4
	release_0_9_4:1.4
	release_0_9_3:1.4
	release_0_9_2:1.3
	release_0_9_1:1.3
	release_0_9_0:1.3
	release_0_1_1:1.1.1.1
	release_0_1_0:1.1.1.1
	start:1.1.1.1
	shugo:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2001.05.16.09.27.08;	author shugo;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.16.09.34.48;	author shugo;	state Exp;
branches;
next	1.2;

1.2
date	2000.10.12.05.41.38;	author shugo;	state Exp;
branches;
next	1.1;

1.1
date	99.05.17.09.29.02;	author shugo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.17.09.29.02;	author shugo;	state Exp;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@=begin

= README for eRuby

== What's eRuby?

eRuby interprets a Ruby code embedded text file. For example, eRuby
enables you to embed a Ruby code to a HTML file.

== Required environment

* Ruby version 1.6.x or later.

== Installation

(1) Type `./configure.rb' to create Makefile.
    (Type `./configure.rb --help' to get a help message.)

(2) Type `make' to compile eRuby.

(3) Type `make install' to install all files.

== Syntax

A Ruby block starts with `<%' and ends with `%>'. eRuby replaces
the block with its output.

  $ cat foo
  Hello, <% print "World!" %>
  $ eruby foo
  Hello, World!

If `<%' is followed by `=', eRuby replaces the block with a value
of the block.

  $ cat bar
  Hello, <%= "World!" %>
  $ eruby bar
  Hello, World!

If `<%' is followed by `#', the block is ignored as a comment.

  $ cat baz
  Hello,<%# this is
  a comment %> World!
  $ eruby baz
  Hello, World!

If a line starts with '%', eRuby evaluates the line as a Ruby
program and replaces the line with its output.

  $ cat quux
  % x = 1 + 1
  1 + 1 = <%= x %>
  $ eruby quux
  1 + 1 = 2

=end

Local variables:
mode: indented-text
mode: auto-fill
fill-column: 70
End:
@


1.3
log
@*** empty log message ***
@
text
@d1 1
a1 1
[README for eRuby]
d3 1
a3 2
What's eRuby?
=============
d5 1
a5 2
  eRuby interprets a Ruby code embedded text file. For example, eRuby
  enables you to embed a Ruby code to a HTML file.
d7 2
d10 1
a10 2
Required environment
====================
d12 1
a12 1
  * Ruby version 1.6.x or later.
d14 1
d16 2
a17 2
Installation
============
d19 1
a19 1
  1) Type `./Makefile.RB' to create Makefile.
d21 1
a21 1
  2) Type `make' to compile eRuby.
d23 1
a23 1
  3) Type `make install' to copy eruby to `bindir'.
d25 2
d28 4
a31 2
Syntax
======
d33 2
a34 2
  A Ruby block starts with `<%' and ends with `%>'. eRuby replaces
  the block with its output.
d36 4
a39 5
  ex1).
    $ cat foo
    Hello, <% print "World!" %>
    $ eruby foo
    Hello, World!
d41 1
a41 2
  If `<%' is followed by `=', eRuby replaces the block with a value
  of the block.
d43 5
a47 5
  ex2).
    $ cat bar
    Hello, <%= "World!" %>
    $ eruby bar
    Hello, World!
d49 2
a50 1
  If `<%' is followed by `#', the block is ignored as a comment.
d52 5
a56 6
  ex3).
    $ cat baz
    Hello,<%# this is
    a comment %> World!
    $ eruby baz
    Hello, World!
d58 1
a58 9
  If a line starts with '%', eRuby evaluates the line as a Ruby
  program and replaces the line with its output.

  ex4).
    $ cat quux
    % x = 1 + 1
    1 + 1 = <%= x %>
    $ eruby quux
    1 + 1 = 2
@


1.2
log
@*** empty log message ***
@
text
@d13 1
a13 1
  * Ruby version 1.3.3 or later.
@


1.1
log
@Initial revision
@
text
@d56 9
@


1.1.1.1
log
@
@
text
@@
