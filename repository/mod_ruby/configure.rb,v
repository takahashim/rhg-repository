head	1.19;
access;
symbols
	release_1_0_1:1.19
	version_1_0-branch:1.19.0.2
	root-of-version_1_0:1.19
	release_1_0_0:1.19
	release_0_9_9:1.18
	release_0_9_8:1.16
	release_0_9_7:1.16
	release_0_9_6:1.16
	release_0_9_5:1.16
	autoconfiscation-branch:1.16.0.2
	root-of-autoconfiscation:1.16
	release_0_9_4:1.16
	release_0_9_3:1.14
	release_0_9_2:1.13
	release_0_9_1:1.13
	release_0_9_0:1.13
	release_0_8_6:1.13
	release_0_8_5:1.13
	release_0_8_4:1.13
	release_0_8_3:1.10
	release_0_8_2:1.10
	start:1.1.1.1
	NaCl:1.1.1;
locks; strict;
comment	@# @;


1.19
date	2002.06.18.08.47.45;	author shugo;	state Exp;
branches;
next	1.18;

1.18
date	2002.05.28.07.19.00;	author shugo;	state Exp;
branches;
next	1.17;

1.17
date	2002.05.07.05.27.55;	author shugo;	state Exp;
branches;
next	1.16;

1.16
date	2001.10.12.03.36.36;	author shugo;	state Exp;
branches
	1.16.2.1;
next	1.15;

1.15
date	2001.10.04.09.19.38;	author shugo;	state Exp;
branches;
next	1.14;

1.14
date	2001.08.24.02.23.39;	author shugo;	state Exp;
branches;
next	1.13;

1.13
date	2001.06.20.09.26.24;	author shugo;	state Exp;
branches;
next	1.12;

1.12
date	2001.06.09.09.50.28;	author shugo;	state Exp;
branches;
next	1.11;

1.11
date	2001.06.08.09.57.00;	author shugo;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.04.03.07.20;	author shugo;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.01.09.10.06;	author shugo;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.29.04.36.58;	author shugo;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.28.08.36.53;	author shugo;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.28.02.36.09;	author shugo;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.25.19.15.11;	author shugo;	state Exp;
branches;
next	1.4;

1.4
date	2001.05.25.10.19.39;	author shugo;	state Exp;
branches;
next	1.3;

1.3
date	2001.05.18.07.18.38;	author shugo;	state Exp;
branches;
next	1.2;

1.2
date	99.05.20.04.15.09;	author shugo;	state dead;
branches;
next	1.1;

1.1
date	99.04.20.08.41.05;	author shugo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.20.08.41.05;	author shugo;	state Exp;
branches;
next	;

1.16.2.1
date	2001.10.19.09.44.42;	author shugo;	state dead;
branches;
next	;


desc
@@


1.19
log
@* configure.rb.in: cause error if both --with-apache and
--with-apxs specified.
* configure.rb.in: cause error if --with-apache is specified for
Apache2.
@
text
@#!/usr/bin/env ruby

# Generated automatically using autoconf.rb version 0.2.3

require "mkmf"

$ac_help = ""
$ac_help += "  --enable-eruby          enable eruby" "\n"
$ac_help += "  --with-apache=DIR       Build static Apache module.  DIR is the path
                          to the top-level Apache source directory" "\n"
$ac_help += "  --with-apxs[=FILE]      Build shared Apache module.  FILE is the optional
                          pathname to the Apache apxs tool; [apxs]" "\n"
$ac_help += "  --with-eruby-includes=DIR   eruby include files are in DIR" "\n"
$ac_help += "  --with-eruby-libraries=DIR  eruby library files are in DIR" "\n"

$ac_sed = {}
$ac_confdefs = {}
$ac_features = {}
$ac_packages = {}
  
def AC_SUBST(variable)
  $ac_sed[variable] = true
end

def AC_DEFINE(variable, value = 1)
  case value
  when true
    value = "1"
  when false
    value = "0"
  when String
    value = value.dump
  else
    value = value.inspect
  end
  $ac_confdefs[variable] = value
end

AC_GIVEN = Object.new
def AC_GIVEN.if_not_given
  # do nothing
end

AC_NOT_GIVEN = Object.new
def AC_NOT_GIVEN.if_not_given
  yield
end

def AC_ENABLE(feature, action = Proc.new)
  if $ac_features[feature]
    yield($ac_features[feature])
    return AC_GIVEN
  else
    return AC_NOT_GIVEN
  end
end

def AC_WITH(package, action = Proc.new)
  if $ac_packages[package]
    yield($ac_packages[package])
    return AC_GIVEN
  else
    return AC_NOT_GIVEN
  end
end

def AC_OUTPUT(*files)
  if $AC_LIST_HEADER
    $DEFS = "-DHAVE_CONFIG_H"
    AC_OUTPUT_HEADER($AC_LIST_HEADER)
  else
    $DEFS = $ac_confdefs.collect {|k, v| "-D#{k}=#{v}" }.join(" ")
  end
  for file in files
    print "creating ", file, "\n"
    open(File.join($srcdir, file + ".in")) do |fin|
      open(file, "w") do |fout|
	while line = fin.gets
	  line.gsub!(/@@([A-Za-z_]+)@@/) do |s|
	    name = $1
	    if $ac_sed.key?(name)
	      eval("$" + name) #"
	    else
	      s
	    end
	  end
	  fout.print(line)
	end
      end
    end
  end
end

def AC_OUTPUT_HEADER(header)
  print "creating ", header, "\n"
  open(File.join($srcdir, header + ".in")) do |fin|
    open(header, "w") do |fout|
      while line = fin.gets
	line.sub!(/^(#define|#undef)\s+([A-Za-z_]+).*$/) do |s|
	  name = $2
	  if $ac_confdefs.key?(name)
	    val = $ac_confdefs[name]
	    "#define #{name} #{val}"
	  else
	    s
	  end
	end
	fout.print(line)
      end
    end
  end
  $ac_confdefs.clear
end

def AC_CONFIG_HEADER(header)
  $AC_LIST_HEADER = header
end

def AC_CHECK(feature)
  AC_MSG_CHECKING(feature)
  AC_MSG_RESULT(yield)
end

def AC_MSG_CHECKING(feature)
  print "checking #{feature}... "
  $stdout.flush
end

def AC_MSG_RESULT(result)
  case result
  when true
    result = "yes"
  when false, nil
    result = "no"
  end
  puts(result)
end

def AC_MSG_WARN(msg)
  $stderr.print("configure.rb: warning: ", msg, "\n")
end

def AC_MSG_ERROR(msg)
  $stderr.print("configure.rb: error: ", msg, "\n")
  exit(1)
end

def AC_CONFIG_AUX_DIR_DEFAULT
  AC_CONFIG_AUX_DIRS($srcdir, "#{$srcdir}/..",  "#{$srcdir}/../..")
end

def AC_CONFIG_AUX_DIRS(*dirs)
  for dir in dirs
    for prog in [ "install-rb", "install.rb" ]
      file = File.join(dir, prog)
      if File.file?(file); then
	$ac_aux_dir = dir
	$ac_install_rb = "#{file} -c"
	return
      end
    end
  end
end

def AC_PROG_INSTALL
  AC_MSG_CHECKING("for a BSD compatible install")
  $ac_cv_path_install = callcc { |c|
    for dir in ENV["PATH"].split(/:/)
      if %r'^(/|\./|/etc/.*|/usr/sbin/.*|/usr/etc/.*|/sbin/.*|/usr/afsws/bin/.*|/usr/ucb/.*)$' =~ dir + "/" # '
	next
      end
      for prog in [ "ginstall", "scoinst", "install" ]
	file = File.join(dir, prog)
	if File.file?(file)
	  if prog == "install" &&
	      `#{file} 2>&1` =~ /dspmsg/
	    # AIX install.  It has an incompatible calling convention.
	  else
	    c.call("#{file} -c")
	  end
	end
      end
    end
    unless $ac_install_rb
      AC_CONFIG_AUX_DIR_DEFAULT()
    end
    $ac_install_rb
  }
  $INSTALL = $ac_cv_path_install
  AC_MSG_RESULT($INSTALL)
  $INSTALL_PROGRAM ||= "$(INSTALL)"
  $INSTALL_SCRIPT ||= "$(INSTALL)"
  $INSTALL_DATA ||= "$(INSTALL) -m 644"
  $INSTALL_DLLIB ||= "$(INSTALL) -m 555"
  $INSTALL_DIR ||= "$(INSTALL) -d"
  AC_SUBST("INSTALL")
  AC_SUBST("INSTALL_PROGRAM")
  AC_SUBST("INSTALL_SCRIPT")
  AC_SUBST("INSTALL_DATA")
  AC_SUBST("INSTALL_DLLIB")
  AC_SUBST("INSTALL_DIR")
end

$stdout.sync = true

drive = File::PATH_SEPARATOR == ';' ? /\A\w:/ : /\A/
prefix = Regexp.new("\\A" + Regexp.quote(CONFIG["prefix"]))
$drive = CONFIG["prefix"] =~ drive ? $& : ''
$prefix = CONFIG["prefix"].sub(drive, '')
$exec_prefix = "$(prefix)"
$bindir = CONFIG["bindir"].sub(prefix, "$(exec_prefix)").sub(drive, '')
$datadir = CONFIG["datadir"].sub(prefix, "$(prefix)").sub(drive, '')
$libdir = CONFIG["libdir"].sub(prefix, "$(exec_prefix)").sub(drive, '')
$archdir = $archdir.sub(prefix, "$(prefix)").sub(drive, '')
$sitelibdir = $sitelibdir.sub(prefix, "$(prefix)").sub(drive, '')
$sitearchdir = $sitearchdir.sub(prefix, "$(prefix)").sub(drive, '')
$includedir = CONFIG["includedir"].sub(prefix, "$(prefix)").sub(drive, '')
$mandir = CONFIG["mandir"].sub(prefix, "$(prefix)").sub(drive, '')

$rubylibdir ||=
  $libdir + "/ruby/" + CONFIG["MAJOR"] + "." + CONFIG["MINOR"]

for option in ARGV
  if option =~ /^-.*?=(.*)/
    optarg = $1
  else
    optarg = nil
  end
  case option
  when /^--prefix/
    $prefix = optarg
  when /^--exec-prefix/
    $exec_prefix = optarg
  when /^--bindir/
    $bindir = optarg
  when /^--datadir/
    $datadir = optarg
  when /^--libdir/
    $libdir = optarg
  when /^--includedir/
    $includedir = optarg
  when /^--mandir/
    $mandir = optarg
  when /^--enable-([^=]+)/
    feature = $1
    if optarg.nil?
      optarg = "yes"
    end
    $ac_features[feature] = optarg
  when /^--with-([^=]+)/
    package = $1
    if optarg.nil?
      optarg = "yes"
    end
    $ac_packages[package] = optarg
  when "--help"
    print <<EOF
Usage: configure.rb [options]
Options: [defaults in brackets after descriptions]
Configuration:
  --help                  print this message
Directory and file names:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [#{$prefix}]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [same as prefix]
  --bindir=DIR            user executables in DIR [EPREFIX/bin]
  --libdir=DIR            object code libraries in DIR [EPREFIX/lib]
  --includedir=DIR        C header files in DIR [PREFIX/include]
  --datadir=DIR           read-only architecture-independent data in DIR
                          [PREFIX/share]
  --mandir=DIR            manual pages in DIR [PREFIX/man]
EOF
    if $ac_help.length > 0
      print "--enable and --with options recognized:\n"
      print $ac_help
    end
    exit(0)
  when /^-.*/
    AC_MSG_ERROR("#{option}: invalid option; use --help to show usage")
  end
end

$srcdir = File.dirname($0)
$VPATH = ""

$arch = CONFIG["arch"]
$ruby_version = Config::CONFIG["ruby_version"] ||
  CONFIG["MAJOR"] + "." + CONFIG["MINOR"]

$CC = CONFIG["CC"]
$AR = CONFIG["AR"]
$LD = "$(CC)"
$RANLIB = CONFIG["RANLIB"]

if CFLAGS.index(CONFIG["CCDLFLAGS"])
  $CFLAGS = CFLAGS
else
  $CFLAGS = CFLAGS + " " + CONFIG["CCDLFLAGS"]
end
$LDFLAGS = CONFIG["LDFLAGS"]
$LIBS = CONFIG["LIBS"]
$XLDFLAGS = CONFIG["XLDFLAGS"]
$DLDFLAGS = CONFIG["DLDFLAGS"]
$LDSHARED = CONFIG["LDSHARED"]

$EXEEXT = CONFIG["EXEEXT"]
$DLEXT = CONFIG["DLEXT"]

$RUBY_INSTALL_NAME = CONFIG["RUBY_INSTALL_NAME"]
$RUBY_SHARED = (CONFIG["ENABLE_SHARED"] == "yes")
$LIBRUBYARG = CONFIG["LIBRUBYARG"]
if $RUBY_SHARED
  $LIBRUBYARG.gsub!(/-L\./, "-L$(libdir)")
else
  if RUBY_PLATFORM !~ /mswin32/
    $LIBRUBYARG = "$(hdrdir)/" + $LIBRUBYARG
  end
end
$LIBRUBY_A = CONFIG["LIBRUBY_A"]
$RUBY_SO_NAME = CONFIG["RUBY_SO_NAME"]

case PLATFORM
when /-aix/
  if $RUBY_SHARED
    $LIBRUBYARG = "-Wl,$(libdir)/" + CONFIG["LIBRUBY_SO"]
    $LIBRUBYARG.sub!(/\.so\.[.0-9]*$/, '.so')
    $XLDFLAGS = ""
  else
    $XLDFLAGS = "-Wl,-bE:$(topdir)/ruby.imp"
  end
  if $DLDFLAGS !~ /-Wl,/
    $LIBRUBYARG.gsub!(/-Wl,/, '')
    $XLDFLAGS.gsub!(/-Wl,/, '')
    $DLDFLAGS.gsub!(/-Wl,/, '')
  end
end

AC_SUBST("srcdir")
AC_SUBST("topdir")
AC_SUBST("hdrdir")
AC_SUBST("VPATH")

AC_SUBST("arch")
AC_SUBST("ruby_version")
AC_SUBST("drive")
AC_SUBST("prefix")
AC_SUBST("exec_prefix")
AC_SUBST("bindir")
AC_SUBST("datadir")
AC_SUBST("libdir")
AC_SUBST("rubylibdir")
AC_SUBST("archdir")
AC_SUBST("sitedir")
AC_SUBST("sitelibdir")
AC_SUBST("sitearchdir")
AC_SUBST("includedir")
AC_SUBST("mandir")

AC_SUBST("CC")
AC_SUBST("AR")
AC_SUBST("LD")
AC_SUBST("RANLIB")

AC_SUBST("CFLAGS")
AC_SUBST("DEFS")
AC_SUBST("LDFLAGS")
AC_SUBST("LIBS")
AC_SUBST("XLDFLAGS")
AC_SUBST("DLDFLAGS")
AC_SUBST("LDSHARED")

AC_SUBST("OBJEXT")
AC_SUBST("EXEEXT")
AC_SUBST("DLEXT")

AC_SUBST("RUBY_INSTALL_NAME")
AC_SUBST("LIBRUBYARG")
AC_SUBST("LIBRUBY_A")
AC_SUBST("RUBY_SO_NAME")

version =
  open(File.join($srcdir, "mod_ruby.h")).grep(/MOD_RUBY_STRING_VERSION/)[0]
$MAJOR, $MINOR, $TEENY = version.scan(/mod_ruby\/(\d+).(\d+).(\d+)/)[0] #/
AC_SUBST("MAJOR")
AC_SUBST("MINOR")
AC_SUBST("TEENY")

AC_PROG_INSTALL()

AC_MSG_CHECKING("whether we are using gcc")
if $CC == "gcc" || `#{$CC} -v 2>&1` =~ /gcc/
  $using_gcc = true
  $CFLAGS += " -Wall"
else
  $using_gcc = false
end
AC_MSG_RESULT($using_gcc)

AC_MSG_CHECKING("Ruby version")
AC_MSG_RESULT(RUBY_VERSION)
if RUBY_VERSION < "1.6"
  AC_MSG_ERROR("mod_ruby requires Ruby 1.6.x or later.")
end
if RUBY_VERSION < "1.6.4"
  AC_MSG_WARN("mod_ruby recommends Ruby 1.6.4 or later.")
end

AC_MSG_CHECKING("for static Apache module support")
AC_WITH("apache") { |withval|
  if withval == "yes"
    AC_MSG_ERROR("You need to specify a directory with --with-apache")
  end
  $APACHE_SRCDIR = File.expand_path(withval)
  if File.file?("#{$APACHE_SRCDIR}/src/include/httpd.h")
    $APACHE_INCLUDES = "-I#{$APACHE_SRCDIR}/src/include -I#{$APACHE_SRCDIR}/src/os/unix"
  elsif File.file?("#{$APACHE_SRCDIR}/include/httpd.h")
    AC_MSG_ERROR("static module is not supported for Apache2. Please use --with-apxs option")
  else
    AC_MSG_ERROR("Unable to locate #{withval}/src/include/httpd.h")
  end
  $TARGET = "libruby.a"
  $INSTALL_TARGET = "install-static"
  st = File.stat($APACHE_SRCDIR)
  $APACHE_SRC_UID = st.uid
  $APACHE_SRC_GID = st.gid
  AC_MSG_RESULT("yes")
}.if_not_given {
  AC_MSG_RESULT("no")
}

AC_MSG_CHECKING("for dynamic Apache module support")
AC_WITH("apxs") { |withval|
  if $TARGET
    AC_MSG_ERROR("--with-apache and --with-apxs are mutually exclusive")
  end
  if withval == "yes"
    $APXS = "apxs"
  else
    $APXS = withval
  end
}.if_not_given {
  unless $TARGET
    $APXS = "apxs"
  end
}

if $APXS
  $CFLAGS += " " + `#{$APXS} -q CFLAGS`.chomp
  $APACHE_INCLUDES = "-I" + `#{$APXS} -q INCLUDEDIR`.chomp
  $APACHE_LIBEXECDIR = `#{$APXS} -q LIBEXECDIR`.chomp
  if $? != 0
    AC_MSG_ERROR("failed to exec #{$APXS}")
  end
  $TARGET = "mod_ruby.so"
  $INSTALL_TARGET = "install-shared"
  AC_MSG_RESULT("yes")
else
  AC_MSG_RESULT("no")
end

AC_SUBST("TARGET")
AC_SUBST("INSTALL_TARGET")
AC_SUBST("APACHE_SRCDIR")
AC_SUBST("APACHE_INCLUDES")
AC_SUBST("APACHE_LIBEXECDIR")
AC_SUBST("APACHE_SRC_UID")
AC_SUBST("APACHE_SRC_GID")

case RUBY_PLATFORM
when /-aix/
  $DLDFLAGS = "-Wl,-bE:mod_ruby.imp -Wl,-bI:httpd.exp -Wl,-bM:SRE -Wl,-bnoentry -lc"
  open("mod_ruby.imp", "w") do |ifile|
    ifile.write <<EOF
#!
ruby_module
EOF
  end
  print <<EOF
To build mod_ruby on the AIX platform, you need to have the apache
export file `httpd.exp' in the current directory.
Please copy <apache-src-directory>/support/httpd.exp to the current
directory before making `mod_ruby.so'.
EOF
#'
when /cygwin/
  if $INSTALL_TARGET == "install-shared"
    $LIBS += ' ' + File.join($APACHE_LIBEXECDIR, "cyghttpd.dll")
  end
end

AC_MSG_CHECKING("for eruby")
$ENABLE_ERUBY = false
AC_ENABLE("eruby") { |enableval|
  if enableval == "yes"
    $ENABLE_ERUBY = true
    $LIBERUBYARG = "-leruby"
    AC_DEFINE("USE_ERUBY")
  end
}
AC_MSG_RESULT($ENABLE_ERUBY)

AC_WITH("eruby-includes") { |withval|
  if $ENABLE_ERUBY
    $ERUBY_INCLUDES = "-I#{withval}"
  end
}

AC_WITH("eruby-libraries") { |withval|
  if $ENABLE_ERUBY
    $LIBERUBYARG = "-L#{withval} #{$LIBERUBYARG}"
  end
}

AC_SUBST("ERUBY_INCLUDES")
AC_SUBST("LIBERUBYARG")

librubyarg = $LIBRUBYARG.dup
Config.expand(librubyarg)
$MODULE_LIBS = "#{$LIBERUBYARG} #{librubyarg} #{$LIBS}"
AC_SUBST("MODULE_LIBS")

AC_OUTPUT("Makefile",
	  "libruby.module")

# Local variables:
# mode: Ruby
# tab-width: 8
# End:
@


1.18
log
@* configure.rb.in: fix for cygwin.
@
text
@d415 5
a419 1
  unless File.file?("#{$APACHE_SRCDIR}/src/include/httpd.h")
a421 1
  $APACHE_INCLUDES = "-I#{$APACHE_SRCDIR}/src/include -I#{$APACHE_SRCDIR}/src/os/unix"
d434 3
@


1.17
log
@* Makefile.in: added datadir.
* configure.rb: added datadir support.
@
text
@d464 1
a464 1
case PLATFORM
d480 4
@


1.16
log
@* configure.rb.in: chomp output of apxs.
@
text
@d212 1
d236 2
d270 2
d350 1
@


1.16.2.1
log
@* autoconfiscated
@
text
@@


1.15
log
@*** empty log message ***
@
text
@d437 3
a439 3
  $CFLAGS += " " + `#{$APXS} -q CFLAGS`
  $APACHE_INCLUDES = "-I" + `#{$APXS} -q INCLUDEDIR`
  $APACHE_LIBEXECDIR = `#{$APXS} -q LIBEXECDIR`
@


1.14
log
@* lib/apache/eruby-run.rb (postrun): do not overwrite r.content_type.
* mod_ruby.c (ruby_require): handle SystemExit correctly.
* request.c (request_method_number): new method.
* apachelib.c: new constants M_GET, M_PUT, ....
* configure.rb: rebuild with autoconf.rb 0.2.3 for Solaris.
@
text
@d378 1
a378 1
$MAJOR, $MINOR, $TEENY = version.scan(/mod_ruby\/(\d+).(\d+).(\d+)/)[0]
d507 2
a508 1
AC_OUTPUT("Makefile", "libruby.module")
@


1.13
log
@* version 0.8.4 released.
@
text
@d3 1
a3 1
# Generated automatically using autoconf.rb version 0.2.1
d169 3
d208 1
d311 3
a313 1
  $LIBRUBYARG = "$(hdrdir)/" + $LIBRUBYARG
d341 1
@


1.12
log
@* configure.rb.in: check for gcc.
* mod_ruby.c (ruby_object_handler_0): call log_error().
* lib/apache/eruby-run.rb (handler): set @@compiler.sourcefile.
@
text
@d369 7
@


1.11
log
@* Makefile.in: libruby.a support.
* configure.rb.in: ditto.
* configure.rb: generated by autoconf.rb version 0.2.
* mod_ruby.c (get_exception_info): don't use str2cstr macro for
Ruby 1.7.
* mod_ruby.c (protect_funcall0): changed type of argument to
VALUE.
* mod_ruby.c (ruby_require): cast rb_require() to VALUE (*)(VALUE).
@
text
@d3 1
a3 1
# Generated automatically using autoconf.rb version 0.2
d119 5
d287 5
a291 1
$CFLAGS = CFLAGS + " " + CONFIG["CCDLFLAGS"]
a302 2
p $RUBY_SHARED
p CONFIG["ENABLE_SHARED"]
d370 9
@


1.10
log
@* lib/auto-reload: new file.
* lib/apache/ruby-run.rb: renamed from ruby/apache/ruby.rb.
* lib/apache/eruby-run.rb: renamed from ruby/apache/eruby.rb.
* lib/apache/rd2html.rb: renamed from ruby/apache/rd2html.rb.
* lib/apache/eruby-run.rb (handler): specify filename for backtrace.
* changed license from GPL to LGPL.
* COPYING: new file.
@
text
@d3 1
a3 1
# Generated automatically using autoconf.rb version 0.1
a272 2
$RUBY_INSTALL_NAME = CONFIG["RUBY_INSTALL_NAME"]
$RUBY_SO_NAME = CONFIG["RUBY_SO_NAME"]
d292 4
d297 3
a299 2
if $LIBRUBYARG =~ /\.a$/
  $RUBY_SHARED = false
a300 3
else
  $RUBY_SHARED = true
  $LIBRUBYARG.gsub!(/-L\./, "-L$(libdir)")
d302 2
a325 2
AC_SUBST("RUBY_INSTALL_NAME")
AC_SUBST("RUBY_SO_NAME")
d357 1
d359 2
a455 3
if $ENABLE_ERUBY
  AC_MSG_WARN("--enable-eruby is obsolete; use Apache::ERubyRun instead")
end
@


1.9
log
@* configure.rb.in: exit if fail to exec apxs.
@
text
@a401 1
AC_MSG_RESULT($APXS)
d412 3
d443 1
a443 1
AC_MSG_CHECKING("whether enable eruby")
d453 3
@


1.8
log
@* configure.rb.in: removed -mwin32 hack.
@
text
@d408 3
@


1.7
log
@*** empty log message ***
@
text
@a420 2
when /-cygwin/
  $CFLAGS.sub!(/-mwin32/, "")	# for Apache
@


1.6
log
@* mod_ruby.c (ruby_startup): don't initialize ruby if
ruby_running(). (for static Apache module)
* mod_ruby.c: use EXTERN.
* libruby.module.in: use MODULE_LIBS to expand LIBRUBYARG.
* configure.rb.in: set $ERUBY_INCLUDES instead of modify $CFLAGS.
* Makefile.in: RUBY_SO_NAME for cygwin.
@
text
@d421 2
@


1.5
log
@* install-rb: new file.
* Makefile.in: change owner and group of $(APACHE_SRCDIR)/
src/modules/ruby/*.
@
text
@d274 1
d325 1
d383 2
a384 2
  $APACHE_SRC_OWNER = st.uid
  $APACHE_SRC_GROUP = st.gid
d417 2
a418 2
AC_SUBST("APACHE_SRC_OWNER")
AC_SUBST("APACHE_SRC_GROUP")
d451 1
a451 1
    $CFLAGS += " -I#{withval}"
d461 1
d464 4
a467 1
$MODULE_LIBS = "#{$LIBERUBYARG} #{Config.expand($LIBRUBYARG)} #{$LIBS}"
d470 5
@


1.4
log
@* Makefile.in: static Apache module support..
@
text
@d143 53
d357 2
d373 2
a374 1
  unless File.file?("#{withval}/src/include/httpd.h")
d377 1
a377 2
  $APACHE_SRCDIR = withval
  $APACHE_INCLUDES = "-I#{withval}/src/include -I#{withval}/src/os/unix"
d379 4
a382 1
  $install = "install-static"
d407 1
a407 1
  $install = "install-shared"
d411 1
a411 1
AC_SUBST("install")
d415 2
@


1.3
log
@* ruby/apache/eruby.rb: do not require "cgi/session".
* configure.rb: new file.
* Makefile.in: new file.
@
text
@d3 2
a5 1
require "getoptlong"
d7 91
a97 26
def usage
  $stderr.print(<<EOS)
usage: configure.rb [options]

  --help                      print this message

  --prefix=PREFIX             install architecture-independent files in PREFIX
                              [#{CONFIG["prefix"]}]
  --exec-prefix=EPREFIX       install architecture-dependent files in EPREFIX
                              [same as prefix]
  --bindir=DIR                user executables in DIR [EPREFIX/bin]
  --libdir=DIR                object code libraries in DIR [EPREFIX/lib]
  --includedir=DIR            C header files in DIR [PREFIX/include]
  --mandir=DIR                manual pages in DIR [PREFIX/man]

  --apxs=APXS                 path to apxs command
  --enable-eruby              enable eruby support
  --eruby-includes=DIR        eruby include files are in DIR
  --eruby-libraries=DIR       eruby library files are in DIR
EOS
end

def create_file(filename, config)
  print "creating ", filename, "\n"
  open(filename + ".in") do |fin|
    open(filename, "w") do |fout|
d99 5
a103 4
	line.gsub!(/@@[A-Za-z_]+@@/) do |s|
	  key = s[1..-2]
	  if config.key?(key)
	    config[key]
d112 29
d143 1
a143 4
$APXS = "apxs"
$ENABLE_ERUBY = false
$ERUBY_INCLUDES = nil
$ERUBY_LIBRARIES = nil
d157 26
a182 39
parser = GetoptLong.new
parser.set_options(["--help", GetoptLong::NO_ARGUMENT],
		   ["--prefix", GetoptLong::OPTIONAL_ARGUMENT],
		   ["--exec-prefix", GetoptLong::OPTIONAL_ARGUMENT],
		   ["--bindir", GetoptLong::OPTIONAL_ARGUMENT],
		   ["--libdir", GetoptLong::OPTIONAL_ARGUMENT],
		   ["--includedir", GetoptLong::OPTIONAL_ARGUMENT],
		   ["--mandir", GetoptLong::OPTIONAL_ARGUMENT],
		   ['--apxs', GetoptLong::OPTIONAL_ARGUMENT],
		   ['--enable-eruby', GetoptLong::OPTIONAL_ARGUMENT],
		   ['--eruby-includes', GetoptLong::OPTIONAL_ARGUMENT],
		   ['--eruby-libraries', GetoptLong::OPTIONAL_ARGUMENT])

begin
  parser.each_option do |name, arg|
    case name
    when "--prefix"
      $prefix = arg
    when "--exec-prefix"
      $exec_prefix = arg
    when "--bindir"
      $bindir = arg
    when "--libdir"
      $libdir = arg
    when "--includedir"
      $includedir = arg
    when "--mandir"
      $mandir = arg
    when "--apxs"
      $APXS = arg
    when "--enable-eruby"
      $ENABLE_ERUBY = true
    when "--eruby-includes"
      $ERUBY_INCLUDES = arg
    when "--eruby-libraries"
      $ERUBY_LIBRARIES = arg
    when "--help"
      usage
      exit(1)
d184 30
a214 3
rescue
  usage
  exit(1)
d217 22
a238 1
config = {}
d240 2
a241 44
config["srcdir"] = File.dirname($0)
config["topdir"] = $topdir
config["hdrdir"] = $hdrdir
config["VPATH"] = ""

config["RUBY_INSTALL_NAME"] = CONFIG["RUBY_INSTALL_NAME"]
config["arch"] = CONFIG["arch"]
config["ruby_version"] = Config::CONFIG["ruby_version"]

config["prefix"] = $prefix
config["exec_prefix"] = $exec_prefix

config["bindir"] = $bindir
config["libdir"] = $libdir
config["rubylibdir"] = $rubylibdir ||
  $libdir + "/ruby/" + CONFIG["MAJOR"] + "." + CONFIG["MINOR"]
config["archdir"] = $archdir
config["sitedir"] = $sitedir
config["sitelibdir"] = $sitelibdir
config["sitearchdir"] = $sitearchdir
config["includedir"] = $includedir
config["mandir"] = $mandir

config["CC"] = CONFIG["CC"]
config["AR"] = CONFIG["AR"]
config["AROPT"] = "rcu $@@"
config["LD"] = "$(CC)"
config["RANLIB"] = CONFIG["RANLIB"]

config["CFLAGS"] = CFLAGS + " " + CONFIG["CCDLFLAGS"]
config["LDFLAGS"] = CONFIG["LDFLAGS"]
config["LIBS"] = CONFIG["LIBS"]
config["XLDFLAGS"] = $XLDFLAGS
config["DLDFLAGS"] = $DLDFLAGS
config["LDSHARED"] = CONFIG["LDSHARED"]

config["OBJEXT"] = $OBJEXT

begin
  config["LIBRUBYARG"] = Config.expand(CONFIG["LIBRUBYARG"])
rescue
  config["LIBRUBYARG"] = CONFIG["LIBRUBYARG"]
end
if config["LIBRUBYARG"] =~ /\.a$/
d243 1
a243 1
  config["LIBRUBYARG"] = $hdrdir + "/" + config["LIBRUBYARG"]
d246 1
a246 1
  config["LIBRUBYARG"].gsub!(/-L\./, "-L#{CONFIG['prefix']}/lib")
a250 1
  config["DLDFLAGS"] = "-Wl,-bE:mod_ruby.imp -Wl,-bI:httpd.exp -Wl,-bM:SRE -Wl,-bnoentry -lc"
d252 111
a362 14
    config["LIBRUBYARG"] = "-Wl," + CONFIG["libdir"] + "/" + CONFIG["LIBRUBY_SO"]
    config["LIBRUBYARG"].sub!(/\.so\.[.0-9]*$/, '.so')
    config["XLDFLAGS"] = ""
  else
    config["XLDFLAGS"] = "-Wl,-bE:#{$topdir}/ruby.imp"
  end
  if CONFIG["DLDFLAGS"] !~ /-Wl,/
    config["LIBRUBYARG"].gsub!(/-Wl,/, '')
    config["XLDFLAGS"].gsub!(/-Wl,/, '')
    config["DLDFLAGS"].gsub!(/-Wl,/, '')
  end
  ifile = open("mod_ruby.imp", "w")
  begin
    ifile.write <<EOIF
d365 1
a365 3
EOIF
  ensure
    ifile.close
d367 1
a367 1
  print <<EOM
d372 1
a372 1
EOM
d376 10
a385 3
config["CFLAGS"] += " " + `#{$APXS} -q CFLAGS`
config["APACHE_INCLUDEDIR"] = `#{$APXS} -q INCLUDEDIR`
config["APACHE_LIBEXECDIR"] = `#{$APXS} -q LIBEXECDIR`
d387 3
a389 5
if $ENABLE_ERUBY
  if $ERUBY_INCLUDES
    config["CFLAGS"] += " -DUSE_ERUBY -I#{$ERUBY_INCLUDES}"
  else
    config["CFLAGS"] += " -DUSE_ERUBY"
d391 5
a395 4
  if $ERUBY_LIBRARIES
    config["LIBERUBYARG"] = "-L#{$ERUBY_LIBRARIES} -leruby"
  else
    config["LIBERUBYARG"] = "-leruby"
d397 3
a399 3
else
  config["LIBERUBYARG"] = ""
end
d401 1
a401 1
create_file("Makefile", config)
d403 1
a403 4
# Local variables:
# mode: Ruby
# tab-width: 8
# End:
@


1.2
log
@*** empty log message ***
@
text
@d1 1
a1 3
# !/usr/bin/ruby
# $Id: configure.rb,v 1.1 1999/04/20 08:41:05 shugo Exp $
# Copyright (C) 1998-1999  Network Applied Communication Laboratory, Inc.
d4 1
a4 1
require "getopts"
d6 40
a45 1
getopts(nil, "apachehdr:", "apachelibexec:")
d47 29
a75 8
$apachehdr = $OPT_apachehdr ||
  Dir["/usr/local/apache/include"][0] ||
  Dir["/usr/apache/include"][0] ||
  Dir["/usr/include/apache-1.3"][0]
$apachelibexec = $OPT_apachelibexec || 
  Dir["/usr/local/apache/libexec"][0] ||
  Dir["/usr/apache/libexec"][0] ||
  Dir["/usr/lib/apache/1.3"][0]
d77 31
a107 3
$LIBRUBYARG = CONFIG["LIBRUBYARG"]
if $LIBRUBYARG == "libruby.a"
  $LIBRUBYARG = $hdrdir + "/libruby.a"
d110 40
a149 1
mfile = open("Makefile", "w")
d151 3
a153 46
  mfile.write <<EOMF
apachehdr = #{$apachehdr}
apachelibexec = #{$apachelibexec}
rubyhdr = #{$hdrdir}

CC = #{CONFIG["CC"]}
CFLAGS = #{CONFIG["CCDLFLAGS"]} -I$(rubyhdr) -I$(apachehdr) #{CFLAGS} #{$defs.join(" ")}
DLDFLAGS = #{CONFIG["DLDFLAGS"]}
LDSHARED = #{CONFIG["LDSHARED"]}
INSTALL = #{CONFIG["INSTALL"]}
INSTALL_DATA = #{CONFIG["INSTALL_DATA"]}

LIBRUBYARG = #$LIBRUBYARG
OBJS = ruby_module.o ruby_config.o apachelib.o
TARGET = mod_ruby.#{CONFIG["DLEXT"]}

.c.o:
	$(CC) $(CFLAGS) -c $<

all: $(TARGET)

install: $(TARGET)
	$(INSTALL_DATA) $(TARGET) $(apachelibexec)

clean:
	rm -f $(TARGET) $(OBJS) *~

distclean: clean
	rm -f Makefile

$(TARGET): $(OBJS)
	$(LDSHARED) $(DLDFLAGS) -o $(TARGET) $(OBJS) $(LIBRUBYARG)

ruby_module.o: ruby_module.c ruby_module.h ruby_config.h apachelib.h
ruby_config.o: ruby_config.c ruby_module.h ruby_config.h
apachelib.o: apachelib.c apachelib.h
EOMF
ensure
  mfile.close
end

unless $apachehdr && $apachelibexec
  print <<EOF
I could not find your apache directory.
Please edit Makefile manually.
EOF
d155 66
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# $Id: configure.rb,v 1.1.1.1 1999/04/20 07:13:15 shugo Exp $
@


1.1.1.1
log
@
@
text
@@
