head	1.13;
access;
symbols
	release_1_0_1:1.12.2.1
	version_1_0-branch:1.12.0.2
	root-of-version_1_0:1.12
	release_1_0_0:1.12
	release_0_9_9:1.11
	release_0_9_8:1.11
	release_0_9_7:1.10
	release_0_9_6:1.9
	release_0_9_5:1.8
	autoconfiscation-branch:1.8.0.2
	root-of-autoconfiscation:1.8
	release_0_9_4:1.8
	release_0_9_3:1.8
	release_0_9_2:1.7
	release_0_9_1:1.7
	release_0_9_0:1.6
	release_0_8_6:1.6
	release_0_8_5:1.4
	release_0_8_4:1.2
	release_0_8_3:1.1
	release_0_8_2:1.1;
locks; strict;
comment	@# @;


1.13
date	2002.08.29.04.35.23;	author shugo;	state Exp;
branches;
next	1.12;

1.12
date	2002.07.11.03.46.38;	author shugo;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2002.04.04.06.18.35;	author shugo;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.12.04.04.34;	author shugo;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.16.05.39.29;	author shugo;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.24.02.23.41;	author shugo;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.06.05.39.40;	author shugo;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.29.07.09.48;	author shugo;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.29.06.43.57;	author shugo;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.21.09.42.15;	author shugo;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.21.07.50.35;	author shugo;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.09.09.50.46;	author shugo;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.04.03.22.46;	author shugo;	state Exp;
branches;
next	;

1.12.2.1
date	2002.08.29.04.39.41;	author shugo;	state Exp;
branches;
next	;


desc
@@


1.13
log
@* lib/apache/eruby-run.rb (postrun): do not overwrite r.content_type.
@
text
@=begin

= apache/eruby-run.rb

Copyright (C) 2001  Shugo Maeda <shugo@@modruby.net>
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.

== Overview

Apache::ERubyRun handles eRuby files.

== Example of httpd.conf

  RubyRequire apache/eruby-run
  <Location /eruby>
  SetHandler ruby-object
  RubyHandler Apache::ERubyRun.instance
  </Location>

=end

require "singleton"
require "tempfile"
require "eruby"

module ERuby
  @@@@cgi = nil

  def self.cgi
    return @@@@cgi
  end

  def self.cgi=(cgi)
    @@@@cgi = cgi
  end
end

module Apache
  class ERubyRun
    include Singleton

    def handler(r)
      if r.method_number == M_OPTIONS
	r.allowed |= (1 << M_GET)
	r.allowed |= (1 << M_POST)
	return DECLINED
      end
      if r.finfo.mode == 0
	return NOT_FOUND
      end

      filename = r.filename.dup
      filename.untaint
      code = compile(filename)
      prerun(r)
      begin
	run(code, filename)
      ensure
	postrun(r)
      end

      return OK
    end

    private

    def initialize
      @@compiler = ERuby::Compiler.new
    end

    def compile(filename)
      open(filename) do |f|
	@@compiler.sourcefile = filename
	return @@compiler.compile_file(f)
      end
    end

    def prerun(r)
      ERuby.noheader = false
      ERuby.charset = ERuby.default_charset
      ERuby.cgi = nil
      r.setup_cgi_env
      Apache.chdir_file(r.filename)
    end

    def run(code, filename)
      file = Tempfile.new(File.basename(filename) + ".")
      begin
	file.print(code)
	file.close
	load(file.path, true)
      ensure
	file.close(true)
      end
    end

    def postrun(r)
      unless ERuby.noheader
	if cgi = ERuby.cgi
	  cgi.header("charset" => ERuby.charset)
        elsif r.sync_output or r.sync_header
          # Do nothing: header has already been sent
	else
	  unless r.content_type
	    r.content_type = format("text/html; charset=%s", ERuby.charset)
	  end
	  r.send_http_header
	end
      end
    end
  end
end
@


1.12
log
@* lib/apache/eruby-run.rb (handler): send http header even if
Kernel#exit is called from eRuby scripts.
* lib/apache/eruby-debug.rb (run): ditto.
@
text
@d125 3
a127 1
	  r.content_type = format("text/html; charset=%s", ERuby.charset)
@


1.12.2.1
log
@* merged from trunk.
@
text
@d125 1
a125 3
	  unless r.content_type
	    r.content_type = format("text/html; charset=%s", ERuby.charset)
	  end
@


1.11
log
@* lib/apache/eruby-run.rb: do not send header on sync mode.
* lib/apache/erb-run.rb: ditto.
@
text
@d77 5
a81 2
      run(code, filename)
      postrun(r)
@


1.10
log
@* version 0.9.7 released.
@
text
@d119 2
@


1.9
log
@* apachelib.h (CSTR2OBJ): use rb_tainted_str_new2().
* array_header.c: ditto.
* table.c: ditto.
* server.c: ditto.
* lib/apache/ruby-run.rb: use untaint.
* lib/apache/eruby-run.rb: ditto.
* lib/apache/erb-run.rb: ditto.
* lib/apache/rd2html.rb: ditto.
@
text
@d64 5
@


1.8
log
@* lib/apache/eruby-run.rb (postrun): do not overwrite r.content_type.
* mod_ruby.c (ruby_require): handle SystemExit correctly.
* request.c (request_method_number): new method.
* apachelib.c: new constants M_GET, M_PUT, ....
* configure.rb: rebuild with autoconf.rb 0.2.3 for Solaris.
@
text
@d68 3
a70 1
      code = compile(r.filename)
d72 1
a72 1
      run(code, r.filename)
d115 1
a115 3
	  unless r.content_type
	    r.content_type = format("text/html; charset=%s", ERuby.charset)
	  end
@


1.7
log
@* version 0.9.1 released.
@
text
@d113 3
a115 1
	  r.content_type = format("text/html; charset=%s", ERuby.charset)
@


1.6
log
@* lib/apache/cgi-support.rb: removed.
* lib/apache/eruby-run.rb: use tempfile.
* lib/apache/erb-run.rb: ditto.
@
text
@d5 2
a6 1
Copyright (C) 2000  Shugo Maeda <shugo@@modruby.net>
d8 8
a15 1
This file is part of mod_ruby.
d17 11
a27 14
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
USA.
@


1.5
log
@* use tempfile.
@
text
@a40 1
require "apache/cgi-support"
a56 1
    include CGISupport
d62 6
a67 25
      open(r.filename) do |f|
	ERuby.noheader = false
	ERuby.charset = ERuby.default_charset
	ERuby.cgi = nil
	@@compiler.sourcefile = r.filename
	code = @@compiler.compile_file(f)
	emulate_cgi(r) do
	  file = Tempfile.new(File.basename(r.filename) + ".")
	  begin
	    file.print(code)
	    file.close
	    load(file.path, true)
	  ensure
	    file.close(true)
	  end
	  unless ERuby.noheader
	    if cgi = ERuby.cgi
	      cgi.header("charset" => ERuby.charset)
	    else
	      r.content_type = format("text/html; charset=%s", ERuby.charset)
	      r.send_http_header
	    end
	  end
	end
      end
d75 37
@


1.4
log
@* lib/apache/eruby-run.rb: don't check ExecCGI.
* lib/apache/erb-run.rb: ditto.
@
text
@d39 2
a42 2
require "eruby"

d71 8
a78 1
	  eval(code, TOPLEVEL_BINDING, r.filename)
@


1.3
log
@* mod_ruby.c (ruby_startup): removed Ruby version from version
	component.
* mod_ruby.c (ruby_startup): log error if ruby_require() fails.
* mod_ruby.c (ruby_handler): don't call rb_apache_request_flush()
on error.
* request.c (rb_apache_request_new): should initialize data->server.
* lib/apache/ruby-run.rb (handler): require ExecCGI and exec
permission.
* lib/apache/eruby-run.rb (handler): require ExecCGI.
* lib/apache/cgi-support.rb: new file.
* lib/apache/erb-run.rb: new file, supports ERb.
@
text
@a63 4
      if r.allow_options & OPT_EXECCGI == 0
	r.log_reason("Options ExecCGI is off in this directory", r.filename)
	return FORBIDDEN
      end
@


1.2
log
@* configure.rb.in: check for gcc.
* mod_ruby.c (ruby_object_handler_0): call log_error().
* lib/apache/eruby-run.rb (handler): set @@compiler.sourcefile.
@
text
@d38 3
a41 1
require "apache/ruby-run"
d56 4
a59 1
  class ERubyRun < Apache::RubyRun
d61 21
a81 16
      begin
	open(r.filename) do |f|
	  ERuby.noheader = false
	  ERuby.charset = ERuby.default_charset
	  ERuby.cgi = nil
	  @@compiler.sourcefile = r.filename
	  code = @@compiler.compile_file(f)
	  emulate_cgi(r) do
	    eval(code, TOPLEVEL_BINDING, r.filename)
	    unless ERuby.noheader
	      if cgi = ERuby.cgi
		cgi.header("charset" => ERuby.charset)
	      else
		r.content_type = format("text/html; charset=%s", ERuby.charset)
		r.send_http_header
	      end
a84 5
	return Apache::OK
      rescue Errno::ENOENT
	return Apache::NOT_FOUND
      rescue Errno::EACCES
	return Apache::FORBIDDEN
d86 1
@


1.1
log
@* moved ruby/ to lib/.
@
text
@d61 1
@
