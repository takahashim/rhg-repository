head	1.8;
access;
symbols
	release_1_0_1:1.8
	version_1_0-branch:1.8.0.2
	root-of-version_1_0:1.8
	release_1_0_0:1.8
	release_0_9_9:1.8
	release_0_9_8:1.8
	release_0_9_7:1.6
	release_0_9_6:1.6
	release_0_9_5:1.5
	autoconfiscation-branch:1.5.0.2
	root-of-autoconfiscation:1.5
	release_0_9_4:1.5
	release_0_9_3:1.4
	release_0_9_2:1.4
	release_0_9_1:1.4
	release_0_9_0:1.3
	release_0_8_6:1.3
	release_0_8_5:1.3
	release_0_8_4:1.3
	release_0_8_3:1.2
	release_0_8_2:1.2;
locks; strict;
comment	@ * @;


1.8
date	2002.03.27.05.17.20;	author shugo;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.05.05.57.35;	author shugo;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.16.05.39.28;	author shugo;	state Exp;
branches;
next	1.5;

1.5
date	2001.10.15.03.27.46;	author shugo;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.06.05.39.37;	author shugo;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.11.02.14.15;	author shugo;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.04.03.07.20;	author shugo;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.02.08.52.36;	author shugo;	state Exp;
branches;
next	;


desc
@@


1.8
log
@* request.c (request_set_user): new method.

* request.c (request_set_auth_type): ditto.

* request.c (request_set_auth_name): ditto.

* connection.c (connection_set_user): ditto.

* connection.c (connection_set_auth_type): ditto.

* connection.c (connection_remote_port): fix for Apache2.

* connection.c (connection_local_port): ditto.

* connection.c (connection_remote_port): new method.

* connection.c (connection_local_port): ditto.
@
text
@/*
 * $Id: array_header.c,v 1.7 2002/03/05 05:57:35 shugo Exp $
 * Copyright (C) 2001  Shugo Maeda <shugo@@modruby.net>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "mod_ruby.h"
#include "apachelib.h"

VALUE rb_cApacheArrayHeader;

VALUE rb_apache_array_new(array_header *arr)
{
    return Data_Wrap_Struct(rb_cApacheArrayHeader, NULL, NULL, arr);
}

static VALUE array_length(VALUE self, VALUE idx)
{
    array_header *arr;

    Data_Get_Struct(self, array_header, arr);
    return INT2NUM(arr->nelts);
}

static VALUE array_aref(VALUE self, VALUE idx)
{
    array_header *arr;
    int n;

    Data_Get_Struct(self, array_header, arr);
    n = NUM2INT(idx);
    if (n < 0) {
	n += arr->nelts;
	if (n < 0) {
	    rb_raise(rb_eIndexError, "index %d out of array", n - arr->nelts);
	}
    }
    else if (n >= arr->nelts) {
	rb_raise(rb_eIndexError, "index %d out of array", n);
    }
    return rb_tainted_str_new2(((char **) arr->elts)[n]);
}

static VALUE array_aset(VALUE self, VALUE idx, VALUE val)
{
    array_header *arr;
    int n;

    Check_Type(val, T_STRING);
    Data_Get_Struct(self, array_header, arr);
    n = NUM2INT(idx);
    if (n < 0) {
	n += arr->nelts;
	if (n < 0) {
	    rb_raise(rb_eIndexError, "index %d out of array", n - arr->nelts);
	}
    }
    else if (n >= arr->nelts) {
	rb_raise(rb_eIndexError, "index %d out of array", n);
    }
    ((char **) arr->elts)[n] = ap_pstrndup(arr->pool,
					   RSTRING(val)->ptr,
					   RSTRING(val)->len);
    return val;
}

static VALUE array_each(VALUE self)
{
    array_header *arr;
    int i;

    Data_Get_Struct(self, array_header, arr);
    for (i = 0; i < arr->nelts; i++) {
	rb_yield(rb_tainted_str_new2(((char **) arr->elts)[i]));
    }
    return Qnil;
}

void rb_init_apache_array()
{
    rb_cApacheArrayHeader = rb_define_class_under(rb_mApache, "ArrayHeader",
						  rb_cObject);
    rb_include_module(rb_cApacheArrayHeader, rb_mEnumerable);
    rb_undef_method(CLASS_OF(rb_cApacheArrayHeader), "new");
    rb_define_method(rb_cApacheArrayHeader, "length", array_length, 0);
    rb_define_method(rb_cApacheArrayHeader, "[]", array_aref, 1);
    rb_define_method(rb_cApacheArrayHeader, "[]=", array_aset, 2);
    rb_define_method(rb_cApacheArrayHeader, "each", array_each, 0);
}
@


1.7
log
@* supports Apache 2.0.
@
text
@d2 1
a2 1
 * $Id: array_header.c,v 1.6 2002/01/16 05:39:28 shugo Exp $
d70 1
d82 3
a84 1
    ((char **) arr->elts)[n] = ap_pstrdup(arr->pool, STR2CSTR(val));
@


1.6
log
@* apachelib.h (CSTR2OBJ): use rb_tainted_str_new2().
* array_header.c: ditto.
* table.c: ditto.
* server.c: ditto.
* lib/apache/ruby-run.rb: use untaint.
* lib/apache/eruby-run.rb: ditto.
* lib/apache/erb-run.rb: ditto.
* lib/apache/rd2html.rb: ditto.
@
text
@d2 1
a2 1
 * $Id: array_header.c,v 1.5 2001/10/15 03:27:46 shugo Exp $
d28 1
a28 12
#include "httpd.h"
#include "http_config.h"
#include "http_core.h"
#include "http_log.h"
#include "http_main.h"
#include "http_protocol.h"
#include "util_script.h"
#include "multithread.h"

#include "ruby.h"
#include "version.h"

@


1.5
log
@* mod_ruby.c (ruby_startup): call Init_stack().
* request.c (cleanup_request_object): free RDATA(reqobj)->data.
* request.c (request_headers_in): allow non-auth handlers to
access Authorization header fields.
* request.c (request_get_basic_auth_pw): allow non-auth handlers.
@
text
@d2 1
a2 1
 * $Id: array_header.c,v 1.4 2001/08/06 05:39:37 shugo Exp $
d73 1
a73 1
    return rb_str_new2(((char **) arr->elts)[n]);
d103 1
a103 1
	rb_yield(rb_str_new2(((char **) arr->elts)[i]));
@


1.4
log
@* version 0.9.1 released.
@
text
@d2 2
a3 2
 * $Id$
 * Copyright (C) 2000  Shugo Maeda <shugo@@modruby.net>
@


1.3
log
@* mod_ruby.c (ruby_handler_0): handle SystemExit correctly.
* array_header.c (array_length): new method.
* table.c: renamed ApacheInTable to ApacheRestrictedTable.
* request.c (rb_apache_request_new): don't set content_type.
* request.c (request_headers_in): return non-restricted table for
RubyAuthenHandler.
* request.c (request_notes): removed.
* request.c (request_allow_options): new method.
* request.c (request_allow_overrides): ditto.
* request.c (request_default_type): ditto.
* request.c (request_construct_url): ditto.
* request.c (request_auth_type): ditto.
* request.c (request_auth_name): ditto.
* request.c (request_satisfies): ditto.
* request.c (request_requires): ditto.
* request.c (request_note_auth_failure): ditto.
* request.c (request_note_basic_auth_failure): ditto.
* request.c (request_note_digest_auth_failure): ditto.
* request.c (request_basic_auth_pw): ditto.
@
text
@d2 1
a2 1
 * $Id: array_header.c,v 1.2 2001/06/04 03:07:20 shugo Exp $
d4 1
d6 8
a13 1
 * Author: Shugo Maeda <shugo@@modruby.net>
d15 11
a25 16
 * This file is part of mod_ruby.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
 * USA.
@


1.2
log
@* lib/auto-reload: new file.
* lib/apache/ruby-run.rb: renamed from ruby/apache/ruby.rb.
* lib/apache/eruby-run.rb: renamed from ruby/apache/eruby.rb.
* lib/apache/rd2html.rb: renamed from ruby/apache/rd2html.rb.
* lib/apache/eruby-run.rb (handler): specify filename for backtrace.
* changed license from GPL to LGPL.
* COPYING: new file.
@
text
@d2 1
a2 1
 * $Id: array_header.c,v 1.1 2001/05/02 08:52:36 shugo Exp $
d46 8
d111 1
@


1.1
log
@* array_header.c: new file.
@
text
@d2 1
a2 1
 * $Id$
d9 4
a12 4
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
d16 2
a17 2
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
d19 4
a22 4
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 * 02111-1307, USA
@
