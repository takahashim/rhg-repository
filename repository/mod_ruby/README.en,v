head	1.11;
access;
symbols
	release_1_0_1:1.11
	version_1_0-branch:1.11.0.2
	root-of-version_1_0:1.11
	release_1_0_0:1.11
	release_0_9_9:1.10
	release_0_9_8:1.10
	release_0_9_7:1.9
	release_0_9_6:1.9
	release_0_9_5:1.9
	autoconfiscation-branch:1.9.0.2
	root-of-autoconfiscation:1.9
	release_0_9_4:1.9
	release_0_9_3:1.9
	release_0_9_2:1.9
	release_0_9_1:1.9
	release_0_9_0:1.9
	release_0_8_6:1.9
	release_0_8_5:1.9
	release_0_8_4:1.9
	release_0_8_3:1.9
	release_0_8_2:1.9
	release_0_8_1:1.6
	release_0_8_0:1.5
	release_0_2_0:1.4
	start:1.1.1.1
	NaCl:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2002.08.20.03.59.53;	author shugo;	state Exp;
branches;
next	1.10;

1.10
date	2002.03.05.05.57.35;	author shugo;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.04.10.18.09;	author shugo;	state Exp;
branches;
next	1.8;

1.8
date	2001.06.04.03.07.20;	author shugo;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.18.07.18.38;	author shugo;	state Exp;
branches;
next	1.6;

1.6
date	2001.04.27.04.51.59;	author shugo;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.16.09.27.57;	author shugo;	state Exp;
branches;
next	1.4;

1.4
date	99.07.15.06.06.09;	author shugo;	state Exp;
branches;
next	1.3;

1.3
date	99.06.21.07.22.58;	author shugo;	state Exp;
branches;
next	1.2;

1.2
date	99.05.20.05.36.11;	author shugo;	state Exp;
branches;
next	1.1;

1.1
date	99.04.20.08.41.05;	author shugo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.20.08.41.05;	author shugo;	state Exp;
branches;
next	;


desc
@@


1.11
log
@* version 1.0.0 released.
@
text
@=begin

= README for mod_ruby

== What's mod_ruby?

mod_ruby embeds the Ruby interpreter into the Apache web server,
allowing Ruby CGI scripts to be executed natively. These scripts will
start up much faster than without mod_ruby.

== Required environment

* Ruby version 1.6.x or later.
  (Recommends version 1.6.4 or later.)
* Apache version 1.3.3 or later.

You can use Apache 2.0 also, but there are some restrictions.

* You should build mod_ruby as a DSO module. (Please use --with-apxs
  option instead of --with-apache option when running configure.rb.)
* mod_ruby only supports prefork MPM. You can't use threaded MPM.
* Some methods are not implemented for Apache 2.0 because Apache 2.0
  API is different from Apache 1.x API. (mod_ruby 1.1 series will
  support only Apache 2.0 and will provide new API.)

== Installation

(1) Type `./configure.rb' to create Makefile.
    (Type `./configure.rb --help' to get a help message.)

(2) Type `make' to compile mod_ruby.

(3) Type `make install' to install files.

(4) Edit `httpd.conf'. (see examples/httpd.conf.)

(5) Restart Apache.

== Official Web Site

((<URL:http://www.modruby.net/>))

=end

Local variables:
mode: indented-text
mode: auto-fill
fill-column: 70
End:
@


1.10
log
@* supports Apache 2.0.
@
text
@d39 4
@


1.9
log
@* version 0.8.2 released.
@
text
@d17 9
@


1.8
log
@* lib/auto-reload: new file.
* lib/apache/ruby-run.rb: renamed from ruby/apache/ruby.rb.
* lib/apache/eruby-run.rb: renamed from ruby/apache/eruby.rb.
* lib/apache/rd2html.rb: renamed from ruby/apache/rd2html.rb.
* lib/apache/eruby-run.rb (handler): specify filename for backtrace.
* changed license from GPL to LGPL.
* COPYING: new file.
@
text
@d26 1
a26 1
(4) Edit `httpd.conf' to make Apache load mod_ruby.
d28 1
a28 15
      LoadModule ruby_module `apachelibexec'/mod_ruby.so

(5) Edit `srm.conf' to set `ruby-script' handler.

      AddHandler ruby-script .rb

    or

      Alias /ruby/ /usr/lib/cgi-bin/
      <Location /ruby/>
      SetHandler ruby-script
      Options ExecCGI
      </Location>

(6) Restart Apache.
@


1.7
log
@* ruby/apache/eruby.rb: do not require "cgi/session".
* configure.rb: new file.
* Makefile.in: new file.
@
text
@d24 1
a24 1
(3) Type `make install' to copy mod_ruby.so to `apachelibexec'.
@


1.6
log
@* ruby/apache/ruby.rb (emulate_cgi): new method.
* ruby/apache/eruby.rb: inherit Apache::Ruby.
* table.c: new file for Apache::Table.
* connection.c: new file for Apache::Connection.
* server.c: new file for Apache::Server.
* request.c: new file for Apache::Request.
* request.c (request_setup_cgi_env): new method.
* mod_ruby.c (script_handler): resotre original $stdin, $stdout
and $>.
@
text
@d1 1
a1 1
[README for mod_ruby]
d3 1
a3 2
What's mod_ruby?
================
d5 1
a5 3
  mod_ruby embeds the Ruby interpreter into the Apache web server,
  allowing Ruby CGI scripts to be executed natively. These scripts will
  start up much faster than without mod_ruby.
d7 3
d11 1
a11 2
Required environment
====================
d13 3
a15 3
  * Ruby version 1.6.x or later.
    (Recommends version 1.6.4 or later.)
  * Apache version 1.3.3 or later.
d17 1
d19 2
a20 2
Installation
============
d22 1
a22 1
  1) Type `./Makefile.RB' to create Makefile.
d24 1
a24 1
  2) Type `make' to compile mod_ruby.
d26 1
a26 1
  3) Type `make install' to copy mod_ruby.so to `apachelibexec'.
d28 1
a28 1
  4) Edit `httpd.conf' to make Apache load mod_ruby.
d30 1
a30 1
       LoadModule ruby_module `apachelibexec'/mod_ruby.{so|o}
d32 1
a32 1
  5) Edit `srm.conf' to set `ruby-script' handler.
d34 1
a34 1
       AddHandler ruby-script .rb
d36 5
a40 1
     or
d42 1
a42 7
       Alias /ruby/ /usr/lib/cgi-bin/
       <Location /ruby/>
       SetHandler ruby-script
       Options ExecCGI
       </Location>

  6) Restart Apache.
d44 1
d47 2
a48 1
mode: Auto-Fill
@


1.5
log
@shugo
* lib/net/imap.rb: don't upcase the value of ATOM token.
@
text
@d15 1
@


1.4
log
@*** empty log message ***
@
text
@d14 1
a14 1
  * Ruby version 1.3.1(99/03/11) or later.
@


1.3
log
@*** empty log message ***
@
text
@d35 8
@


1.2
log
@*** empty log message ***
@
text
@d25 1
a25 1
  3) Type `make install' to copy mod_ruby.{so|o} to `apachelibexec'.
@


1.1
log
@Initial revision
@
text
@d21 1
a21 1
  1) Type `ruby configure.rb' to create Makefile.
@


1.1.1.1
log
@
@
text
@@
