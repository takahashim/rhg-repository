head	1.18;
access;
symbols
	release_1_0_1:1.18
	version_1_0-branch:1.18.0.2
	root-of-version_1_0:1.18
	release_1_0_0:1.18
	release_0_9_9:1.18
	release_0_9_8:1.18
	release_0_9_7:1.18
	release_0_9_6:1.18
	release_0_9_5:1.17
	autoconfiscation-branch:1.17.0.2
	root-of-autoconfiscation:1.17
	release_0_9_4:1.17
	release_0_9_3:1.15
	release_0_9_2:1.15
	release_0_9_1:1.15
	release_0_9_0:1.14
	release_0_8_6:1.14
	release_0_8_5:1.14
	release_0_8_4:1.14
	release_0_8_3:1.13
	release_0_8_2:1.13
	release_0_8_1:1.11
	release_0_8_0:1.9
	release_0_2_0:1.4
	start:1.1.1.1
	NaCl:1.1.1;
locks; strict;
comment	@ * @;


1.18
date	2002.01.16.05.39.28;	author shugo;	state Exp;
branches;
next	1.17;

1.17
date	2001.10.12.08.53.35;	author shugo;	state Exp;
branches;
next	1.16;

1.16
date	2001.10.04.09.19.38;	author shugo;	state Exp;
branches;
next	1.15;

1.15
date	2001.08.06.05.39.37;	author shugo;	state Exp;
branches;
next	1.14;

1.14
date	2001.06.11.02.14.15;	author shugo;	state Exp;
branches;
next	1.13;

1.13
date	2001.06.04.03.07.20;	author shugo;	state Exp;
branches;
next	1.12;

1.12
date	2001.05.02.08.45.26;	author shugo;	state Exp;
branches;
next	1.11;

1.11
date	2001.04.27.04.51.59;	author shugo;	state Exp;
branches;
next	1.10;

1.10
date	2001.04.19.06.13.25;	author shugo;	state Exp;
branches;
next	1.9;

1.9
date	2001.04.13.04.19.40;	author shugo;	state Exp;
branches;
next	1.8;

1.8
date	2001.04.12.09.08.34;	author shugo;	state Exp;
branches;
next	1.7;

1.7
date	2001.04.10.08.03.55;	author shugo;	state Exp;
branches;
next	1.6;

1.6
date	2000.10.14.04.27.56;	author shugo;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.04.15.38.46;	author shugo;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.03.07.29.41;	author shugo;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.24.04.59.00;	author shugo;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.28.05.41.57;	author shugo;	state Exp;
branches;
next	1.1;

1.1
date	99.04.20.08.41.05;	author shugo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.20.08.41.05;	author shugo;	state Exp;
branches;
next	;


desc
@@


1.18
log
@* apachelib.h (CSTR2OBJ): use rb_tainted_str_new2().
* array_header.c: ditto.
* table.c: ditto.
* server.c: ditto.
* lib/apache/ruby-run.rb: use untaint.
* lib/apache/eruby-run.rb: ditto.
* lib/apache/erb-run.rb: ditto.
* lib/apache/rd2html.rb: ditto.
@
text
@/*
 * $Id: apachelib.h,v 1.17 2001/10/12 08:53:35 shugo Exp $
 * Copyright (C) 2000  ZetaBITS, Inc.
 * Copyright (C) 2000  Information-technology Promotion Agency, Japan
 * Copyright (C) 2000  Shugo Maeda <shugo@@modruby.net>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef APACHELIB_H
#define APACHELIB_H

/* apachelib.c */
extern VALUE rb_mApache;
extern VALUE rb_eApacheTimeoutError;
extern VALUE rb_request;
extern VALUE rb_apache_objrefs;
void rb_init_apache();
void rb_apache_exit(int status);
void rb_apache_register_object(VALUE obj);
void rb_apache_unregister_object(VALUE obj);

/* array_header.c */
extern VALUE rb_cApacheArrayHeader;
void rb_init_apache_array();
VALUE rb_apache_array_new(array_header *arr);

/* table.c */
extern VALUE rb_cApacheTable;
extern VALUE rb_cApacheRestrictedTable;
void rb_init_apache_table();
VALUE rb_apache_table_new(VALUE klass, table *tbl);

/* connection.c */
extern VALUE rb_cApacheConnection;
void rb_init_apache_connection();
VALUE rb_apache_connection_new(conn_rec *conn);

/* server.c */
extern VALUE rb_cApacheServer;
void rb_init_apache_server();
VALUE rb_apache_server_new(server_rec *server);

/* request.c */
extern VALUE rb_cApacheRequest;
void rb_init_apache_request();
VALUE rb_get_request_object(request_rec *r);
long rb_apache_request_length(VALUE self);
VALUE rb_apache_request_send_http_header(VALUE self);
void rb_apache_request_flush(VALUE request);
void rb_apache_request_set_error(VALUE request, VALUE error, VALUE exception);

#define STRING_LITERAL(s) rb_str_new(s, sizeof(s) - 1)
#define CSTR2OBJ(s) ((s) ? rb_tainted_str_new2(s) : Qnil)
#define INT2BOOL(n) ((n) ? Qtrue : Qfalse)

#define DEFINE_ATTR_READER(fname, type, member, convert) \
static VALUE fname(VALUE self) \
{ \
    type *data; \
    Data_Get_Struct(self, type, data); \
    if (data == NULL) \
	rb_raise(rb_eArgError, "destroyed object"); \
    return convert(data->member); \
}

#define DEFINE_ATTR_WRITER(fname, type, member, convert) \
static VALUE fname(VALUE self, VALUE val) \
{ \
    type *data; \
    Data_Get_Struct(self, type, data); \
    if (data == NULL) \
	rb_raise(rb_eArgError, "destroyed object"); \
    data->member = convert(val); \
    return val; \
}

#define DEFINE_STRING_ATTR_READER(fname, type, member) \
	DEFINE_ATTR_READER(fname, type, member, CSTR2OBJ)

#define DEFINE_INT_ATTR_READER(fname, type, member) \
	DEFINE_ATTR_READER(fname, type, member, INT2NUM)
#define DEFINE_INT_ATTR_WRITER(fname, type, member) \
	DEFINE_ATTR_WRITER(fname, type, member, NUM2INT)

#define DEFINE_UINT_ATTR_READER(fname, type, member) \
	DEFINE_ATTR_READER(fname, type, member, UINT2NUM)
#define DEFINE_UINT_ATTR_WRITER(fname, type, member) \
	DEFINE_ATTR_WRITER(fname, type, member, NUM2UINT)

#define DEFINE_LONG_ATTR_READER(fname, type, member) \
	DEFINE_ATTR_READER(fname, type, member, INT2NUM)
#define DEFINE_LONG_ATTR_WRITER(fname, type, member) \
	DEFINE_ATTR_WRITER(fname, type, member, NUM2LONG)

#define DEFINE_ULONG_ATTR_READER(fname, type, member) \
	DEFINE_ATTR_READER(fname, type, member, UINT2NUM)
#define DEFINE_ULONG_ATTR_WRITER(fname, type, member) \
	DEFINE_ATTR_WRITER(fname, type, member, NUM2ULONG)

#define DEFINE_BOOL_ATTR_READER(fname, type, member) \
	DEFINE_ATTR_READER(fname, type, member, INT2BOOL)
#define DEFINE_BOOL_ATTR_WRITER(fname, type, member) \
	DEFINE_ATTR_WRITER(fname, type, member, RTEST)

#endif /* !APACHELIB_H */

/*
 * Local variables:
 * mode: C
 * tab-width: 8
 * End:
 */
@


1.17
log
@* apachelib.h (DEFINE_ATTR_READER): raise exception if data == NULL.
* apachelib.h (DEFINE_ATTR_WRITER): ditto.
* mod_ruby.c (per_request_cleanup): set r->main to rb_request if r
is a sub_request.
* request.c (request_mark): return immediately if data == NULL.
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.16 2001/10/04 09:19:38 shugo Exp $
d74 1
a74 1
#define CSTR2OBJ(s) ((s) ? rb_str_new2(s) : Qnil)
@


1.16
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.15 2001/08/06 05:39:37 shugo Exp $
d82 2
d92 2
@


1.15
log
@* version 0.9.1 released.
@
text
@d2 1
a2 1
 * $Id$
d37 1
d40 2
d67 1
a67 1
VALUE rb_apache_request_new(request_rec *r);
d71 1
@


1.14
log
@* mod_ruby.c (ruby_handler_0): handle SystemExit correctly.
* array_header.c (array_length): new method.
* table.c: renamed ApacheInTable to ApacheRestrictedTable.
* request.c (rb_apache_request_new): don't set content_type.
* request.c (request_headers_in): return non-restricted table for
RubyAuthenHandler.
* request.c (request_notes): removed.
* request.c (request_allow_options): new method.
* request.c (request_allow_overrides): ditto.
* request.c (request_default_type): ditto.
* request.c (request_construct_url): ditto.
* request.c (request_auth_type): ditto.
* request.c (request_auth_name): ditto.
* request.c (request_satisfies): ditto.
* request.c (request_requires): ditto.
* request.c (request_note_auth_failure): ditto.
* request.c (request_note_basic_auth_failure): ditto.
* request.c (request_note_digest_auth_failure): ditto.
* request.c (request_basic_auth_pw): ditto.
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.13 2001/06/04 03:07:20 shugo Exp $
d6 1
d8 8
a15 1
 * Author: Shugo Maeda <shugo@@modruby.net>
d17 11
a27 16
 * This file is part of mod_ruby.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
 * USA.
@


1.13
log
@* lib/auto-reload: new file.
* lib/apache/ruby-run.rb: renamed from ruby/apache/ruby.rb.
* lib/apache/eruby-run.rb: renamed from ruby/apache/eruby.rb.
* lib/apache/rd2html.rb: renamed from ruby/apache/rd2html.rb.
* lib/apache/eruby-run.rb (handler): specify filename for backtrace.
* changed license from GPL to LGPL.
* COPYING: new file.
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.12 2001/05/02 08:45:26 shugo Exp $
d44 1
a44 1
extern VALUE rb_cApacheInTable;
@


1.12
log
@* fixed copyright notice.
* array_header.c: new file for Apache::ArrayHeader.
* server.c: added some methods.
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.11 2001/04/27 04:51:59 shugo Exp $
d11 4
a14 4
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
d18 2
a19 2
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
d21 4
a24 4
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 * 02111-1307, USA
@


1.11
log
@* ruby/apache/ruby.rb (emulate_cgi): new method.
* ruby/apache/eruby.rb: inherit Apache::Ruby.
* table.c: new file for Apache::Table.
* connection.c: new file for Apache::Connection.
* server.c: new file for Apache::Server.
* request.c: new file for Apache::Request.
* request.c (request_setup_cgi_env): new method.
* mod_ruby.c (script_handler): resotre original $stdin, $stdout
and $>.
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.10 2001/04/19 06:13:25 shugo Exp $
d5 1
d36 5
@


1.10
log
@* ruby/apache/ruby.rb: new handler Apache::Ruby.
* ruby/apache/rd2html.rb: renamed from mod_rd2html.rb.
* apachelib.c (request_read): do not use buffer.
* apachelib.c (ruby_init_apachelib): remove methods from
Apache::request. (gets, readline, readlines, each, getc,
readchar, ungetc, tell, seek, rewind, pos, pos=)
* apachelib.c (ruby_init_apachelib): new class Apache::Server.
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.9 2001/04/13 04:19:40 shugo Exp $
d29 1
d31 6
a36 1
extern VALUE rb_cApacheConnection;
d39 14
d54 49
a102 1
extern VALUE rb_eApacheTimeoutError;
d104 4
a107 5
VALUE ruby_request_new(request_rec *r);
long ruby_request_outbuf_length(VALUE self);
VALUE rb_request_send_http_header(VALUE self);
void rb_request_flush(VALUE request);
void ruby_init_apachelib();
@


1.9
log
@* version 0.8.0 released.
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.8 2001/04/12 09:08:34 shugo Exp $
d6 1
a6 1
 * Author: Shugo Maeda <shugo@@ruby-lang.org>
d36 1
a36 1
VALUE ruby_create_request(request_rec *r, VALUE input);
@


1.8
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.7 2001/04/10 08:03:55 shugo Exp $
d37 1
a37 1
int ruby_request_outbuf_length(VALUE self);
@


1.7
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.6 2000/10/14 04:27:56 shugo Exp $
a28 10
typedef struct request_data {
    request_rec *request;
    VALUE inbuf;
    VALUE outbuf;
    VALUE headers_in;
    VALUE headers_out;
    int send_http_header;
    long pos;
} request_data;

d30 3
a32 1
extern VALUE rb_mApacheWritable;
d35 1
@


1.6
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.5 2000/10/04 15:38:46 shugo Exp $
d43 1
a43 1
VALUE ruby_create_request(request_rec *r);
@


1.5
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.4 2000/08/03 07:29:41 shugo Exp $
d31 2
a32 1
    VALUE buff;
d36 1
d44 1
a44 1
int ruby_request_buffer_length(VALUE self);
@


1.4
log
@q
@
text
@d2 5
a6 2
 * $Id: apachelib.h,v 1.3 2000/05/24 04:59:00 shugo Exp $
 * Copyright (C) 1998-1999  Network Applied Communication Laboratory, Inc.
@


1.3
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.2 2000/03/28 05:41:57 shugo Exp $
d29 2
@


1.2
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.1.1.1 1999/04/20 08:41:05 shugo Exp $
a29 1
    int sync;
d36 1
a36 1
VALUE ruby_create_request(request_rec *r, int sync);
d38 2
a39 1
VALUE rb_request_flush(VALUE request);
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * $Id: apachelib.h,v 1.1.1.1 1999/04/20 07:13:15 shugo Exp $
d37 2
a38 1
VALUE ruby_create_request(request_rec *r);
@


1.1.1.1
log
@
@
text
@@
