head	1.5;
access;
symbols
	V0_3_2:1.4
	V0_1_4:1.1
	V0_1_3:1.1
	V0_1_2:1.1
	V0_1_1:1.1
	V0_1:1.1;
locks; strict;
comment	@# @;


1.5
date	2002.01.05.14.35.05;	author chad;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.11.12.39.32;	author dave;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.10.07.05.22;	author dave;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.10.06.15.46;	author dave;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.30.22.25.26;	author dave;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Replaced $rubyVersion global with Version class methods.  Replaced references to the former with the latter.  Deprecated tests for #indexes and #indices where appropriate.  Removed some duplication in several tests in ArrayBase and HashBase.
@
text
@$: << File.dirname($0) << File.join(File.dirname($0), "..")
require 'rubicon'

#
# NOTE: Most of the access control stuff as been tested in
# buildins/TestModule. In this file we'll just ensure that
# the compiler is honoring it.
#
unless defined? ExpectedException
  Version.less_than("1.7") do
    ExpectedException = NameError
  end
  Version.greater_or_equal("1.7") do
    ExpectedException = NoMethodError
  end 
end


class TestAccessControl < Rubicon::TestCase

  module M1
    def m1private
      1
    end
    def m1protected
      2
    end
    def m1public
      3
    end
    private :m1private
    protected :m1protected
  end

  module M2
    def m2private
      1
    end
    def m2protected
      2
    end
    def m2public
      3
    end
    private :m2private
    protected :m2protected
    module_function :m2private, :m2protected, :m2public
  end

  class C1
    def c1private
      1
    end
    def c1protected
      2
    end
    def c1public
      3
    end
    private :c1private
    protected :c1protected
  end
   
  class C2 < C1
    def c2private
      c1private
    end
    def c2protected
      c1protected
    end
    def c2public
      c1public
    end
  end

  class C3 < C1
    def c3private
      self.c1private
    end
    def c3protected
      self.c1protected
    end
    def c3public
      self.c1public
    end
  end

  class C4
    include M1
  end

  class C5
    include M2
  end

  # --------------------------------------------------------

  def test_class_access

    # access via subclass
    c2 = C2.new
    assert_exception(ExpectedException) { c2.c1private }
    assert_exception(ExpectedException) { c2.c1protected }
    assert_equal(3, c2.c1public)
    assert_equal(1, c2.c2private)
    assert_equal(2, c2.c2protected)
    assert_equal(3, c2.c2public)

    # access via subclass with explicit 'self'
    c3 = C3.new
    assert_exception(ExpectedException) { c3.c3private }
    assert_equal(2, c3.c3protected)
    assert_equal(3, c3.c3public)
  end

  # --------------------------------------------------------

  def test_included_module
    c4 = C4.new
    assert_exception(ExpectedException) { c4.m1private }
    assert_exception(ExpectedException) { c4.m1protected }
    assert_equal(3, c4.m1public)
  end

  # --------------------------------------------------------

  def test_module_functions
    assert_equal(1, M2.m2private)
    assert_equal(2, M2.m2protected)
    assert_equal(3, M2.m2public)
    c5 = C5.new
    assert_exception(ExpectedException) { c5.m2private }
    assert_exception(ExpectedException) { c5.m2protected }
    assert_exception(ExpectedException) { c5.m2public }
  end
end

# Run these tests if invoked directly

Rubicon::handleTests(TestAccessControl) if $0 == __FILE__
@


1.4
log
@* Fixed a couple of warnings resulting from running tests in one pass.

* Makefile: changed default target to run library and builtins tests in a
  single pass, so we now get just one summary table
@
text
@d9 8
a16 6

if $rubyVersion < "1.7"
  ExpectedException = NameError
else
  ExpectedException = NoMethodError
end unless defined? ExpectedException
@


1.3
log
@Add in the Ruby 1.7 tests
@
text
@d14 1
a14 1
end
@


1.2
log
@Add all the 1.6.4 sample/test.rb tests to Rubicon, and integrate the
language and library tests
@
text
@d10 6
d100 2
a101 2
    assert_exception(NameError) { c2.c1private }
    assert_exception(NameError) { c2.c1protected }
d109 1
a109 1
    assert_exception(NameError) { c3.c3private }
d118 2
a119 2
    assert_exception(NameError) { c4.m1private }
    assert_exception(NameError) { c4.m1protected }
d130 3
a132 3
    assert_exception(NameError) { c5.m2private }
    assert_exception(NameError) { c5.m2protected }
    assert_exception(NameError) { c5.m2public }
@


1.1
log
@Archive save
@
text
@d1 2
a2 13
#!/usr/bin/env ruby
# $Id: TestAccesControl.rb,v 1.1 2000/06/30 21:14:10 dave Exp $
#
# This file is part of Rubicon, a set of regression tests for the Ruby
# language and its built-in classes and modules.
#
# Initial development by Dave Thomas and Andy Hunt.
#
# Copyright (c) 2000 The Pragmatic Programmers, LLC (www.pragmaticprogrammer.com)
# Distributed according to the terms specified in the Ruby distribution README file.
#

require '../rubicon'
@

