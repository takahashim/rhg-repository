head	1.6;
access;
symbols
	V0_3_2:1.6
	V0_1_4:1.3
	V0_1_3:1.3
	V0_1_2:1.3
	V0_1_1:1.3
	V0_1:1.3
	initial:1.1.1.1
	PragProg:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2001.11.06.23.53.49;	author dave;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.10.06.15.46;	author dave;	state Exp;
branches;
next	1.4;

1.4
date	2001.02.15.21.15.31;	author dave;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.23.19.31.57;	author dave;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.15.17.37.53;	author dave;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.05.19.16.27;	author dave;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.05.19.16.27;	author dave;	state Exp;
branches;
next	;


desc
@@


1.6
log
@iMake the output format pluggable as a first step towards decent
publishing of the results.
@
text
@$: << File.dirname($0) << File.join(File.dirname($0), "..")
require 'rubicon'

tests = Rubicon::BulkTestRunner.new(ARGV, "Built-ins")

if ARGV.size.zero?
  Dir["Test*.rb"].each { |file| tests.addFile(file) }
else
  ARGV.each { |file| tests.addFile(file) }
end

tests.run
@


1.5
log
@Add all the 1.6.4 sample/test.rb tests to Rubicon, and integrate the
language and library tests
@
text
@d4 1
a4 1
tests = Rubicon::BulkTestRunner.new("Built-ins")
@


1.4
log
@1. Add preamble to all tests to allow them to be run from any location (that
   is we now add the path to rubicon to $:)

2. Change string tests so they aren't wired to the String class.
@
text
@a3 15

class AllBuiltinTests
  
  def AllBuiltinTests.suite
    suite = Rubicon::TestSuite.new
    Dir["Test*.rb"].each { |file|
      require file
      suite.add_test(eval(file.sub(/\.rb$/, '')).suite)
    }
    suite
  end
end

#Rubicon::handleTests(AllBuiltinTests) if $0 == __FILE__

@


1.3
log
@Archive save
@
text
@d1 2
a2 1
require '../rubicon'
@


1.2
log
@Tidy up the test output
@
text
@d20 5
a24 1
Dir["Test*.rb"].each { |file| tests.addFile(file) }
@


1.1
log
@Initial revision
@
text
@d3 1
d16 7
a22 1
Rubicon::handleTests(AllBuiltinTests) if $0 == __FILE__
@


1.1.1.1
log
@Initial Import
@
text
@@
