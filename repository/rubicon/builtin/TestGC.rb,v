head	1.3;
access;
symbols
	V0_3_2:1.3
	V0_1_4:1.1
	V0_1_3:1.1
	V0_1_2:1.1
	V0_1_1:1.1
	V0_1:1.1;
locks; strict;
comment	@# @;


1.3
date	2001.06.10.06.15.46;	author dave;	state Exp;
branches;
next	1.2;

1.2
date	2001.02.15.21.15.31;	author dave;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.23.03.00.08;	author dave;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Add all the 1.6.4 sample/test.rb tests to Rubicon, and integrate the
language and library tests
@
text
@$: << File.dirname($0) << File.join(File.dirname($0), "..")
require 'rubicon'


class TestGC < Rubicon::TestCase

  def test_garbage_collect
    # This is the test from the standard test.rb
    begin
      1.upto(10000) do
        tmp = [0,1,2,3,4,5,6,7,8,9]
      end
      tmp = nil
      assert(true)
    rescue
      fail("GC")
    end
  end

  def test_s_disable
    skipping("need test")
  end

  def test_s_enable
    skipping("need test")
  end

  def test_s_start
    skipping("need test")
  end

end

Rubicon::handleTests(TestGC) if $0 == __FILE__
@


1.2
log
@1. Add preamble to all tests to allow them to be run from any location (that
   is we now add the path to rubicon to $:)

2. Change string tests so they aren't wired to the String class.
@
text
@d8 10
a17 1
    skipping("need test")
@


1.1
log
@Archive save
@
text
@d1 2
a2 1
require '../rubicon'
@

