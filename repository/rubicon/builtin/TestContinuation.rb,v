head	1.4;
access;
symbols
	V0_3_2:1.3
	V0_1_4:1.2
	V0_1_3:1.2
	V0_1_2:1.2
	V0_1_1:1.2
	V0_1:1.2
	initial:1.1.1.1
	PragProg:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2002.10.07.08.00.23;	author matz;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.15.21.15.31;	author dave;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.05.21.28.40;	author dave;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.05.19.16.27;	author dave;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.05.19.16.27;	author dave;	state Exp;
branches;
next	;


desc
@@


1.4
log
@* replace "type" by "class" since Object#type is deprecated in
  1.7.3.
@
text
@$: << File.dirname($0) << File.join(File.dirname($0), "..")
require 'rubicon'


class TestContinuation < Rubicon::TestCase

  # Helper methods

  def helper_method(cont)
    helper_method_one(cont)
    "bad"
  end

  def helper_method_one(cont)
    cont.call "OK"
    "worse"
  end

  # Tests proper

  def test_00_sanity
    callcc { |cont| assert_equal(Continuation, cont.class) }
  end

  def test_call_no_args
    result = callcc { |cont| cont.call }
    assert_equal(nil, result)
  end

  def test_call_one_args
    result = callcc { |cont| cont.call(99) }
    assert_equal(99, result)
  end

  def test_call_many_args
    expected = [ 'cat', 13, /a/ ]

    result = callcc { |cont| cont.call(*expected) }
    assert_equal(expected, result)
  end

  def test_remote_call
    result = callcc { |cont| 
      helper_method(cont)
      assert_failt("never get here")
    }
    assert_equal("OK", result)
  end
end

Rubicon::handleTests(TestContinuation) if $0 == __FILE__
@


1.3
log
@1. Add preamble to all tests to allow them to be run from any location (that
   is we now add the path to rubicon to $:)

2. Change string tests so they aren't wired to the String class.
@
text
@d22 1
a22 1
    callcc { |cont| assert_equal(Continuation, cont.type) }
@


1.2
log
@Add continutation tests
@
text
@d1 2
a2 1
require '../rubicon'
@


1.1
log
@Initial revision
@
text
@d6 26
a31 2
  def test_call
    assert_fail("untested")
d34 14
@


1.1.1.1
log
@Initial Import
@
text
@@
