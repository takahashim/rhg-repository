head	1.6;
access;
symbols
	V0_3_2:1.6
	V0_1_4:1.5
	V0_1_3:1.5
	V0_1_2:1.5
	V0_1_1:1.5
	V0_1:1.5;
locks; strict;
comment	@# @;


1.6
date	2001.06.10.06.15.46;	author dave;	state Exp;
branches;
next	1.5;

1.5
date	2000.06.23.19.31.57;	author dave;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.22.22.07.33;	author dave;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.15.17.37.53;	author dave;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.07.21.43.02;	author dave;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.07.21.25.46;	author dave;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Add all the 1.6.4 sample/test.rb tests to Rubicon, and integrate the
language and library tests
@
text
@#
# simple routine that uses the external 'checkstat' program
# to return stat values
#

module RubiconStat

  
  def stat(file)
    tmp = `#{CHECKSTAT} #{file}`.chomp
    raise "unable to stat(#{file}:)" if $? != 0
    tmp.split
  end

  def blksize(file) self.stat(file)[8].to_i end
  def atime(file)   self.stat(file)[10].to_i end
  def mtime(file)   self.stat(file)[11].to_i end
  def ctime(file)   self.stat(file)[12].to_i end

  module_function :stat, :atime, :mtime, :ctime, :blksize
end
@


1.5
log
@Archive save
@
text
@d10 1
a10 1
    tmp = `../util/checkstat #{file}`.chomp
@


1.4
log
@Archive save
@
text
@d10 3
a12 7
    if file != @@file
      @@file = file
      tmp = `../util/checkstat #{file}`.chomp
      raise "unable to stat(#{file}:)" if $? != 0
      @@res = tmp.split
    end
    return @@res
@


1.3
log
@Tidy up the test output
@
text
@d8 1
d10 7
a16 3
    res = `../util/checkstat #{file}`.chomp
    raise "unable to stat(#{file}:)" if $? != 0
    return res.split
d19 3
a22 1
  def blksize(file) self.stat(file)[11].to_i end
d24 1
a24 1
  module_function :stat, :ctime, :blksize
@


1.2
log
@Fix problem with stat
@
text
@d10 1
a10 1
    raise "unable to stat(#{file})" if $? != 0
d14 2
a15 2
  def ctime(file)   stat(file)[10].to_i end
  def blksize(file) stat(file)[11].to_i end
@


1.1
log
@New stat module
@
text
@d14 2
a15 2
  def ctime(file)   stat(file)[10] end
  def blksize(file) stat(file)[11] end
@

